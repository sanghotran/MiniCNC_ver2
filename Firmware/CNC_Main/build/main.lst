ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB81:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** //#include "fatfs.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "TaskCNC.h"
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** //#include "fatfs_sd.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** TaskHandle_t defaultTask;
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreUSB;
  57:Core/Src/main.c **** TaskHandle_t ReceiveDataFromGUITask;
  58:Core/Src/main.c **** TaskHandle_t CheckUSBConnectTask;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreBtn;
  61:Core/Src/main.c **** TaskHandle_t ProcessBtnPressTask;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreMode;
  64:Core/Src/main.c **** TaskHandle_t ProcessModeTask;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreUART;
  67:Core/Src/main.c **** TaskHandle_t ReceiveDataFromCNCTask;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** CNC cnc;
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** static void MX_I2C1_Init(void);
  76:Core/Src/main.c **** static void MX_SPI1_Init(void);
  77:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  78:Core/Src/main.c **** void DefaultTask(void *pvParameters);
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** void StartReceiveDataFromGUI(void *pvParameters);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** void StartCheckUSBConnect(void *pvParameters);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** void StartProcessBtnPress(void *pvParameters);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void StartProcessMode(void *pvParameters);
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** void StartProcessSD(void *pvParameters);
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 3


  91:Core/Src/main.c **** void StartReceiveDataFromCNC(void *pvParameters);
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END PFP */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  96:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  97:Core/Src/main.c **** void uart_clear_receive_buffer_and_start_receive_IT() 
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****     // Đọc dữ liệu trong bộ nhận cho đến khi không còn dữ liệu trong buffer
 100:Core/Src/main.c ****     while (__HAL_UART_GET_FLAG(&huart2, UART_FLAG_RXNE)) {
 101:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     cnc.uart.index = 0;
 104:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 110:Core/Src/main.c ****   UNUSED(GPIO_Pin);
 111:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 112:Core/Src/main.c ****   {
 113:Core/Src/main.c ****     cnc.btnPress = 1;
 114:Core/Src/main.c ****   }
 115:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnExit)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     cnc.btnPress = 2;
 118:Core/Src/main.c ****   }
 119:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnUp)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     cnc.btnPress = 3;
 122:Core/Src/main.c ****   }
 123:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnDown)
 124:Core/Src/main.c ****   {
 125:Core/Src/main.c ****     cnc.btnPress = 4;
 126:Core/Src/main.c ****   }
 127:Core/Src/main.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 128:Core/Src/main.c ****   xSemaphoreGiveFromISR(xSemaphoreBtn, xHigherPriorityTaskWoken);
 129:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 133:Core/Src/main.c **** {
 134:Core/Src/main.c ****   UNUSED(huart);
 135:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 136:Core/Src/main.c **** 	{	if((cnc.uart.Receive != '!') && (cnc.uart.Receive != 0)) //line feed Ascii
 137:Core/Src/main.c **** 		{
 138:Core/Src/main.c **** 			cnc.uart.ReceiveFromControl[cnc.uart.index++] = cnc.uart.Receive; //Save data in Rxbuff
 139:Core/Src/main.c **** 		}
 140:Core/Src/main.c **** 		else if (cnc.uart.Receive == '!')
 141:Core/Src/main.c **** 		{
 142:Core/Src/main.c ****       cnc.uart.index = 0;
 143:Core/Src/main.c ****       BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 144:Core/Src/main.c ****       xSemaphoreGiveFromISR(xSemaphoreUART, xHigherPriorityTaskWoken);
 145:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 146:Core/Src/main.c ****       //return;	
 147:Core/Src/main.c **** 		}	
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 4


 148:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 149:Core/Src/main.c **** 	}
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* USER CODE END 0 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief  The application entry point.
 156:Core/Src/main.c ****   * @retval int
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** int main(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END 1 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 167:Core/Src/main.c ****   HAL_Init();
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END Init */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Configure the system clock */
 174:Core/Src/main.c ****   SystemClock_Config();
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END SysInit */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* Initialize all configured peripherals */
 181:Core/Src/main.c ****   MX_GPIO_Init();
 182:Core/Src/main.c ****   MX_I2C1_Init();
 183:Core/Src/main.c ****   //MX_SPI1_Init();
 184:Core/Src/main.c ****   MX_USART2_UART_Init();
 185:Core/Src/main.c ****   //MX_FATFS_Init();
 186:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 187:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 188:Core/Src/main.c ****   InitCNC(&cnc);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   cnc.uart.huart = &huart2;
 191:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 198:Core/Src/main.c ****   /* add mutexes, ... */
 199:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 202:Core/Src/main.c ****   /* add semaphores, ... */
 203:Core/Src/main.c ****   
 204:Core/Src/main.c ****   xSemaphoreUSB = xSemaphoreCreateBinary();
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   xSemaphoreBtn = xSemaphoreCreateBinary();
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   xSemaphoreMode = xSemaphoreCreateBinary();
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   xSemaphoreUART = xSemaphoreCreateBinary();
 211:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 214:Core/Src/main.c ****   /* start timers, add new ones, ... */
 215:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 218:Core/Src/main.c ****   /* add queues, ... */
 219:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* Create the thread(s) */
 222:Core/Src/main.c ****   /* definition and creation of defaultTask */
 223:Core/Src/main.c ****   xTaskCreate(&DefaultTask, "Default", 128, NULL, 1, &defaultTask);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 226:Core/Src/main.c ****   /* add threads, ... */  
 227:Core/Src/main.c ****   xTaskCreate(&StartReceiveDataFromGUI, "ReceiveDataFromGUI", 128, NULL, 2, &ReceiveDataFromGUITask
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   xTaskCreate(&StartCheckUSBConnect, "CheckUSBConnect", 128, NULL, 2, &CheckUSBConnectTask);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   xTaskCreate(&StartProcessBtnPress, "ProcessBtnPress", 128, NULL, 4, &ProcessBtnPressTask);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   xTaskCreate(&StartProcessMode, "ProcessMode", 128, NULL, 2, &ProcessModeTask);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   xTaskCreate(&StartReceiveDataFromCNC, "ReceiveDataFromCNC", 128, NULL, 3, &ReceiveDataFromCNCTask
 236:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* Start scheduler */
 239:Core/Src/main.c ****   vTaskStartScheduler();
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 242:Core/Src/main.c ****   /* Infinite loop */
 243:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 244:Core/Src/main.c ****   while (1)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     /* USER CODE END WHILE */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   /* USER CODE END 3 */
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief System Clock Configuration
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** void SystemClock_Config(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 260:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 261:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 264:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 269:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 273:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 280:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 282:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 284:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 291:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 292:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c **** }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /**
 299:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 300:Core/Src/main.c ****   * @param None
 301:Core/Src/main.c ****   * @retval None
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c **** static void MX_I2C1_Init(void)
 304:Core/Src/main.c **** {
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 313:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 314:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 315:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 316:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 317:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 318:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 7


 319:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 320:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 321:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 322:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** }
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 334:Core/Src/main.c ****   * @param None
 335:Core/Src/main.c ****   * @retval None
 336:Core/Src/main.c ****   */
 337:Core/Src/main.c **** static void MX_SPI1_Init(void)
 338:Core/Src/main.c **** {
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 347:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 348:Core/Src/main.c ****   hspi1.Instance = SPI1;
 349:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 350:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 351:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 352:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 353:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 354:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 355:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 356:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 357:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 358:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 359:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 360:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * @brief USART2 Initialization Function
 372:Core/Src/main.c ****   * @param None
 373:Core/Src/main.c ****   * @retval None
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 8


 376:Core/Src/main.c **** {
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 385:Core/Src/main.c ****   huart2.Instance = USART2;
 386:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 387:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 388:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 389:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 390:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 391:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 392:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 393:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief GPIO Initialization Function
 405:Core/Src/main.c ****   * @param None
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_GPIO_Init(void)
 409:Core/Src/main.c **** {
  26              		.loc 1 409 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 410:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 410 3 view .LVU1
  43              		.loc 1 410 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 9


  48 000e 0794     		str	r4, [sp, #28]
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 413:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  49              		.loc 1 413 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 413 3 view .LVU4
  52              		.loc 1 413 3 view .LVU5
  53 0010 3A4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F02002 		orr	r2, r2, #32
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 413 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F02002 		and	r2, r2, #32
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 413 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 413 3 view .LVU8
 414:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 414 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 414 3 view .LVU10
  68              		.loc 1 414 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00402 		orr	r2, r2, #4
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 414 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F00402 		and	r2, r2, #4
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 414 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 414 3 view .LVU14
 415:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 415 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 415 3 view .LVU16
  83              		.loc 1 415 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00802 		orr	r2, r2, #8
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 415 3 view .LVU18
  88 003e 9B69     		ldr	r3, [r3, #24]
  89 0040 03F00803 		and	r3, r3, #8
  90 0044 0393     		str	r3, [sp, #12]
  91              		.loc 1 415 3 view .LVU19
  92 0046 039B     		ldr	r3, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 415 3 view .LVU20
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 418:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
  95              		.loc 1 418 3 view .LVU21
  96 0048 2D4E     		ldr	r6, .L3+4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 10


  97 004a 2246     		mov	r2, r4
  98 004c 1021     		movs	r1, #16
  99 004e 3046     		mov	r0, r6
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 421:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 102              		.loc 1 421 3 view .LVU22
 103 0054 2B4D     		ldr	r5, .L3+8
 104 0056 2246     		mov	r2, r4
 105 0058 0321     		movs	r1, #3
 106 005a 2846     		mov	r0, r5
 107 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 424:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 109              		.loc 1 424 3 view .LVU23
 110              		.loc 1 424 23 is_stmt 0 view .LVU24
 111 0060 1023     		movs	r3, #16
 112 0062 0493     		str	r3, [sp, #16]
 425:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 425 3 is_stmt 1 view .LVU25
 114              		.loc 1 425 24 is_stmt 0 view .LVU26
 115 0064 4FF00108 		mov	r8, #1
 116 0068 CDF81480 		str	r8, [sp, #20]
 426:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 426 3 is_stmt 1 view .LVU27
 118              		.loc 1 426 24 is_stmt 0 view .LVU28
 119 006c 0694     		str	r4, [sp, #24]
 427:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 427 3 is_stmt 1 view .LVU29
 121              		.loc 1 427 25 is_stmt 0 view .LVU30
 122 006e 0227     		movs	r7, #2
 123 0070 0797     		str	r7, [sp, #28]
 428:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 428 3 is_stmt 1 view .LVU31
 125 0072 0DEB0301 		add	r1, sp, r3
 126 0076 3046     		mov	r0, r6
 127 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 431:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 129              		.loc 1 431 3 view .LVU32
 130              		.loc 1 431 23 is_stmt 0 view .LVU33
 131 007c 0323     		movs	r3, #3
 132 007e 0493     		str	r3, [sp, #16]
 432:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 133              		.loc 1 432 3 is_stmt 1 view .LVU34
 134              		.loc 1 432 24 is_stmt 0 view .LVU35
 135 0080 CDF81480 		str	r8, [sp, #20]
 433:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 433 3 is_stmt 1 view .LVU36
 137              		.loc 1 433 24 is_stmt 0 view .LVU37
 138 0084 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 11


 434:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 434 3 is_stmt 1 view .LVU38
 140              		.loc 1 434 25 is_stmt 0 view .LVU39
 141 0086 0797     		str	r7, [sp, #28]
 435:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 435 3 is_stmt 1 view .LVU40
 143 0088 04A9     		add	r1, sp, #16
 144 008a 2846     		mov	r0, r5
 145 008c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 438:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 147              		.loc 1 438 3 view .LVU41
 148              		.loc 1 438 23 is_stmt 0 view .LVU42
 149 0090 4FF40043 		mov	r3, #32768
 150 0094 0493     		str	r3, [sp, #16]
 439:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 151              		.loc 1 439 3 is_stmt 1 view .LVU43
 152              		.loc 1 439 24 is_stmt 0 view .LVU44
 153 0096 1C4F     		ldr	r7, .L3+12
 154 0098 0597     		str	r7, [sp, #20]
 440:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 440 3 is_stmt 1 view .LVU45
 156              		.loc 1 440 24 is_stmt 0 view .LVU46
 157 009a 0694     		str	r4, [sp, #24]
 441:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 158              		.loc 1 441 3 is_stmt 1 view .LVU47
 159 009c 04A9     		add	r1, sp, #16
 160 009e 3046     		mov	r0, r6
 161 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL4:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 PB5 */
 444:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 163              		.loc 1 444 3 view .LVU48
 164              		.loc 1 444 23 is_stmt 0 view .LVU49
 165 00a4 3823     		movs	r3, #56
 166 00a6 0493     		str	r3, [sp, #16]
 445:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 167              		.loc 1 445 3 is_stmt 1 view .LVU50
 168              		.loc 1 445 24 is_stmt 0 view .LVU51
 169 00a8 0597     		str	r7, [sp, #20]
 446:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 446 3 is_stmt 1 view .LVU52
 171              		.loc 1 446 24 is_stmt 0 view .LVU53
 172 00aa 0694     		str	r4, [sp, #24]
 447:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 173              		.loc 1 447 3 is_stmt 1 view .LVU54
 174 00ac 04A9     		add	r1, sp, #16
 175 00ae 2846     		mov	r0, r5
 176 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL5:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* EXTI interrupt init*/
 450:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 178              		.loc 1 450 3 view .LVU55
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 12


 179 00b4 2246     		mov	r2, r4
 180 00b6 0521     		movs	r1, #5
 181 00b8 0920     		movs	r0, #9
 182 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183              	.LVL6:
 451:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 184              		.loc 1 451 3 view .LVU56
 185 00be 0920     		movs	r0, #9
 186 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 187              	.LVL7:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 188              		.loc 1 453 3 view .LVU57
 189 00c4 2246     		mov	r2, r4
 190 00c6 0521     		movs	r1, #5
 191 00c8 0A20     		movs	r0, #10
 192 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL8:
 454:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 194              		.loc 1 454 3 view .LVU58
 195 00ce 0A20     		movs	r0, #10
 196 00d0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL9:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 198              		.loc 1 456 3 view .LVU59
 199 00d4 2246     		mov	r2, r4
 200 00d6 0521     		movs	r1, #5
 201 00d8 1720     		movs	r0, #23
 202 00da FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL10:
 457:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 204              		.loc 1 457 3 view .LVU60
 205 00de 1720     		movs	r0, #23
 206 00e0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL11:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 208              		.loc 1 459 3 view .LVU61
 209 00e4 2246     		mov	r2, r4
 210 00e6 0521     		movs	r1, #5
 211 00e8 2820     		movs	r0, #40
 212 00ea FFF7FEFF 		bl	HAL_NVIC_SetPriority
 213              	.LVL12:
 460:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 214              		.loc 1 460 3 view .LVU62
 215 00ee 2820     		movs	r0, #40
 216 00f0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 217              	.LVL13:
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** }
 218              		.loc 1 462 1 is_stmt 0 view .LVU63
 219 00f4 08B0     		add	sp, sp, #32
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 24
 222              		@ sp needed
 223 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 13


 224              	.L4:
 225 00fa 00BF     		.align	2
 226              	.L3:
 227 00fc 00100240 		.word	1073876992
 228 0100 00080140 		.word	1073809408
 229 0104 000C0140 		.word	1073810432
 230 0108 00001110 		.word	269549568
 231              		.cfi_endproc
 232              	.LFE81:
 234              		.section	.text.StartReceiveDataFromGUI,"ax",%progbits
 235              		.align	1
 236              		.global	StartReceiveDataFromGUI
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	StartReceiveDataFromGUI:
 242              	.LFB82:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** void StartReceiveDataFromGUI(void *pvParameters)
 467:Core/Src/main.c **** {
 243              		.loc 1 467 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL14:
 249              		.loc 1 467 1 is_stmt 0 view .LVU65
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 255              	.LVL15:
 256              	.L6:
 468:Core/Src/main.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
 469:Core/Src/main.c ****   for(;;)
 257              		.loc 1 469 3 is_stmt 1 view .LVU66
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreUSB, portMAX_DELAY) == pdTRUE)
 258              		.loc 1 471 5 view .LVU67
 259              		.loc 1 471 8 is_stmt 0 view .LVU68
 260 0002 4FF0FF31 		mov	r1, #-1
 261 0006 064B     		ldr	r3, .L9
 262 0008 1868     		ldr	r0, [r3]
 263 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 264              	.LVL16:
 265              		.loc 1 471 7 view .LVU69
 266 000e 0128     		cmp	r0, #1
 267 0010 F7D1     		bne	.L6
 472:Core/Src/main.c ****     {
 473:Core/Src/main.c ****       ReceiveDataFromGUI(&cnc, xSemaphoreMode); 
 268              		.loc 1 473 7 is_stmt 1 view .LVU70
 269 0012 044B     		ldr	r3, .L9+4
 270 0014 1968     		ldr	r1, [r3]
 271 0016 0448     		ldr	r0, .L9+8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 14


 272 0018 FFF7FEFF 		bl	ReceiveDataFromGUI
 273              	.LVL17:
 274 001c F1E7     		b	.L6
 275              	.L10:
 276 001e 00BF     		.align	2
 277              	.L9:
 278 0020 00000000 		.word	.LANCHOR0
 279 0024 00000000 		.word	.LANCHOR1
 280 0028 00000000 		.word	.LANCHOR2
 281              		.cfi_endproc
 282              	.LFE82:
 284              		.section	.text.StartCheckUSBConnect,"ax",%progbits
 285              		.align	1
 286              		.global	StartCheckUSBConnect
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	StartCheckUSBConnect:
 292              	.LFB83:
 474:Core/Src/main.c ****     }
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c **** }
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** void StartCheckUSBConnect(void *pvParameters)
 479:Core/Src/main.c **** {
 293              		.loc 1 479 1 view -0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              	.LVL18:
 299              		.loc 1 479 1 is_stmt 0 view .LVU72
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI4:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 305 0002 0DE0     		b	.L15
 306              	.LVL19:
 307              	.L17:
 308              	.LBB7:
 480:Core/Src/main.c ****   for(;;)
 481:Core/Src/main.c ****     {
 482:Core/Src/main.c ****       osDelay(1000);
 483:Core/Src/main.c ****       if(cnc.state == 1) 
 484:Core/Src/main.c ****       {
 485:Core/Src/main.c ****         if(!(hUsbDeviceFS.dev_state == USBD_STATE_CONFIGURED))
 486:Core/Src/main.c ****         {
 487:Core/Src/main.c ****           // alarm when error connect 
 488:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Led, GPIO_PIN_RESET);
 489:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Buzzer, GPIO_PIN_SET);
 490:Core/Src/main.c ****           cnc.state = 2; // mode error connect with GUI
 491:Core/Src/main.c ****           HAL_UART_AbortReceive_IT(&cnc.uart);
 492:Core/Src/main.c ****         }    
 493:Core/Src/main.c ****       }
 494:Core/Src/main.c ****       while(cnc.state == 2)
 495:Core/Src/main.c ****       {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 15


 496:Core/Src/main.c ****         HAL_GPIO_TogglePin(GPIOB, cnc.Led);
 309              		.loc 1 496 9 is_stmt 1 view .LVU73
 310 0004 174B     		ldr	r3, .L18
 311 0006 5989     		ldrh	r1, [r3, #10]
 312 0008 1748     		ldr	r0, .L18+4
 313 000a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 314              	.LVL20:
 497:Core/Src/main.c ****         osDelay(500);
 315              		.loc 1 497 9 view .LVU74
 316 000e 4FF4FA70 		mov	r0, #500
 317 0012 FFF7FEFF 		bl	osDelay
 318              	.LVL21:
 319              	.L13:
 494:Core/Src/main.c ****       {
 320              		.loc 1 494 12 view .LVU75
 494:Core/Src/main.c ****       {
 321              		.loc 1 494 16 is_stmt 0 view .LVU76
 322 0016 134B     		ldr	r3, .L18
 323 0018 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 494:Core/Src/main.c ****       {
 324              		.loc 1 494 12 view .LVU77
 325 001c 022B     		cmp	r3, #2
 326 001e F1D0     		beq	.L17
 327              	.L15:
 328              	.LBE7:
 480:Core/Src/main.c ****   for(;;)
 329              		.loc 1 480 3 is_stmt 1 view .LVU78
 330              	.LBB8:
 482:Core/Src/main.c ****       if(cnc.state == 1) 
 331              		.loc 1 482 7 view .LVU79
 332 0020 4FF47A70 		mov	r0, #1000
 333 0024 FFF7FEFF 		bl	osDelay
 334              	.LVL22:
 483:Core/Src/main.c ****       {
 335              		.loc 1 483 7 view .LVU80
 483:Core/Src/main.c ****       {
 336              		.loc 1 483 13 is_stmt 0 view .LVU81
 337 0028 0E4B     		ldr	r3, .L18
 338 002a 93F87430 		ldrb	r3, [r3, #116]	@ zero_extendqisi2
 483:Core/Src/main.c ****       {
 339              		.loc 1 483 9 view .LVU82
 340 002e 012B     		cmp	r3, #1
 341 0030 F1D1     		bne	.L13
 485:Core/Src/main.c ****         {
 342              		.loc 1 485 9 is_stmt 1 view .LVU83
 485:Core/Src/main.c ****         {
 343              		.loc 1 485 26 is_stmt 0 view .LVU84
 344 0032 0E4B     		ldr	r3, .L18+8
 345 0034 93F89C32 		ldrb	r3, [r3, #668]	@ zero_extendqisi2
 485:Core/Src/main.c ****         {
 346              		.loc 1 485 11 view .LVU85
 347 0038 032B     		cmp	r3, #3
 348 003a ECD0     		beq	.L13
 488:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Buzzer, GPIO_PIN_SET);
 349              		.loc 1 488 11 is_stmt 1 view .LVU86
 350 003c 094C     		ldr	r4, .L18
 351 003e 0A4D     		ldr	r5, .L18+4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 16


 352 0040 0022     		movs	r2, #0
 353 0042 6189     		ldrh	r1, [r4, #10]
 354 0044 2846     		mov	r0, r5
 355 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 356              	.LVL23:
 489:Core/Src/main.c ****           cnc.state = 2; // mode error connect with GUI
 357              		.loc 1 489 11 view .LVU87
 358 004a 0122     		movs	r2, #1
 359 004c A189     		ldrh	r1, [r4, #12]
 360 004e 2846     		mov	r0, r5
 361 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 362              	.LVL24:
 490:Core/Src/main.c ****           HAL_UART_AbortReceive_IT(&cnc.uart);
 363              		.loc 1 490 11 view .LVU88
 490:Core/Src/main.c ****           HAL_UART_AbortReceive_IT(&cnc.uart);
 364              		.loc 1 490 21 is_stmt 0 view .LVU89
 365 0054 0223     		movs	r3, #2
 366 0056 84F87430 		strb	r3, [r4, #116]
 491:Core/Src/main.c ****         }    
 367              		.loc 1 491 11 is_stmt 1 view .LVU90
 368 005a 04F17800 		add	r0, r4, #120
 369 005e FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 370              	.LVL25:
 371 0062 D8E7     		b	.L13
 372              	.L19:
 373              		.align	2
 374              	.L18:
 375 0064 00000000 		.word	.LANCHOR2
 376 0068 000C0140 		.word	1073810432
 377 006c 00000000 		.word	hUsbDeviceFS
 378              	.LBE8:
 379              		.cfi_endproc
 380              	.LFE83:
 382              		.section	.text.StartProcessBtnPress,"ax",%progbits
 383              		.align	1
 384              		.global	StartProcessBtnPress
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	StartProcessBtnPress:
 390              	.LFB84:
 498:Core/Src/main.c ****       }      
 499:Core/Src/main.c ****     } 
 500:Core/Src/main.c **** }
 501:Core/Src/main.c **** 
 502:Core/Src/main.c **** void StartProcessBtnPress(void *pvParameters)
 503:Core/Src/main.c **** {
 391              		.loc 1 503 1 view -0
 392              		.cfi_startproc
 393              		@ Volatile: function does not return.
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL26:
 397              		.loc 1 503 1 is_stmt 0 view .LVU92
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI5:
 400              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 17


 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 403              	.LVL27:
 404              	.L21:
 504:Core/Src/main.c ****   for(;;)
 405              		.loc 1 504 3 is_stmt 1 view .LVU93
 505:Core/Src/main.c ****   {
 506:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreBtn, portMAX_DELAY) == pdTRUE)
 406              		.loc 1 506 5 view .LVU94
 407              		.loc 1 506 8 is_stmt 0 view .LVU95
 408 0002 4FF0FF31 		mov	r1, #-1
 409 0006 054B     		ldr	r3, .L24
 410 0008 1868     		ldr	r0, [r3]
 411 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 412              	.LVL28:
 413              		.loc 1 506 7 view .LVU96
 414 000e 0128     		cmp	r0, #1
 415 0010 F7D1     		bne	.L21
 507:Core/Src/main.c ****     {
 508:Core/Src/main.c ****       ProcessBtnPress(&cnc);
 416              		.loc 1 508 7 is_stmt 1 view .LVU97
 417 0012 0348     		ldr	r0, .L24+4
 418 0014 FFF7FEFF 		bl	ProcessBtnPress
 419              	.LVL29:
 420 0018 F3E7     		b	.L21
 421              	.L25:
 422 001a 00BF     		.align	2
 423              	.L24:
 424 001c 00000000 		.word	.LANCHOR3
 425 0020 00000000 		.word	.LANCHOR2
 426              		.cfi_endproc
 427              	.LFE84:
 429              		.section	.text.StartProcessMode,"ax",%progbits
 430              		.align	1
 431              		.global	StartProcessMode
 432              		.syntax unified
 433              		.thumb
 434              		.thumb_func
 436              	StartProcessMode:
 437              	.LFB85:
 509:Core/Src/main.c ****     }
 510:Core/Src/main.c ****   }    
 511:Core/Src/main.c **** }
 512:Core/Src/main.c **** 
 513:Core/Src/main.c **** void StartProcessMode(void *pvParameters)
 514:Core/Src/main.c **** {
 438              		.loc 1 514 1 view -0
 439              		.cfi_startproc
 440              		@ Volatile: function does not return.
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              	.LVL30:
 444              		.loc 1 514 1 is_stmt 0 view .LVU99
 445 0000 08B5     		push	{r3, lr}
 446              	.LCFI6:
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 3, -8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 18


 449              		.cfi_offset 14, -4
 450              	.LVL31:
 451              	.L27:
 515:Core/Src/main.c ****   for(;;)
 452              		.loc 1 515 3 is_stmt 1 view .LVU100
 516:Core/Src/main.c ****   {
 517:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreMode, portMAX_DELAY) == pdTRUE)
 453              		.loc 1 517 5 view .LVU101
 454              		.loc 1 517 8 is_stmt 0 view .LVU102
 455 0002 4FF0FF31 		mov	r1, #-1
 456 0006 054B     		ldr	r3, .L30
 457 0008 1868     		ldr	r0, [r3]
 458 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 459              	.LVL32:
 460              		.loc 1 517 7 view .LVU103
 461 000e 0128     		cmp	r0, #1
 462 0010 F7D1     		bne	.L27
 518:Core/Src/main.c ****     {
 519:Core/Src/main.c ****       ProcessMode(&cnc);
 463              		.loc 1 519 7 is_stmt 1 view .LVU104
 464 0012 0348     		ldr	r0, .L30+4
 465 0014 FFF7FEFF 		bl	ProcessMode
 466              	.LVL33:
 467 0018 F3E7     		b	.L27
 468              	.L31:
 469 001a 00BF     		.align	2
 470              	.L30:
 471 001c 00000000 		.word	.LANCHOR1
 472 0020 00000000 		.word	.LANCHOR2
 473              		.cfi_endproc
 474              	.LFE85:
 476              		.section	.text.StartReceiveDataFromCNC,"ax",%progbits
 477              		.align	1
 478              		.global	StartReceiveDataFromCNC
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	StartReceiveDataFromCNC:
 484              	.LFB86:
 520:Core/Src/main.c ****     }
 521:Core/Src/main.c ****   }
 522:Core/Src/main.c **** }
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** void StartReceiveDataFromCNC(void *pvParameters)
 525:Core/Src/main.c **** {
 485              		.loc 1 525 1 view -0
 486              		.cfi_startproc
 487              		@ Volatile: function does not return.
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              	.LVL34:
 491              		.loc 1 525 1 is_stmt 0 view .LVU106
 492 0000 08B5     		push	{r3, lr}
 493              	.LCFI7:
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 3, -8
 496              		.cfi_offset 14, -4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 19


 497              	.LVL35:
 498              	.L33:
 526:Core/Src/main.c ****   for(;;)
 499              		.loc 1 526 3 is_stmt 1 view .LVU107
 527:Core/Src/main.c ****   {
 528:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreUART, portMAX_DELAY) == pdTRUE)
 500              		.loc 1 528 5 view .LVU108
 501              		.loc 1 528 8 is_stmt 0 view .LVU109
 502 0002 4FF0FF31 		mov	r1, #-1
 503 0006 054B     		ldr	r3, .L36
 504 0008 1868     		ldr	r0, [r3]
 505 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 506              	.LVL36:
 507              		.loc 1 528 7 view .LVU110
 508 000e 0128     		cmp	r0, #1
 509 0010 F7D1     		bne	.L33
 529:Core/Src/main.c ****     {
 530:Core/Src/main.c ****       ReceiveDataFromCNC(&cnc);
 510              		.loc 1 530 7 is_stmt 1 view .LVU111
 511 0012 0348     		ldr	r0, .L36+4
 512 0014 FFF7FEFF 		bl	ReceiveDataFromCNC
 513              	.LVL37:
 514 0018 F3E7     		b	.L33
 515              	.L37:
 516 001a 00BF     		.align	2
 517              	.L36:
 518 001c 00000000 		.word	.LANCHOR4
 519 0020 00000000 		.word	.LANCHOR2
 520              		.cfi_endproc
 521              	.LFE86:
 523              		.section	.text.DefaultTask,"ax",%progbits
 524              		.align	1
 525              		.global	DefaultTask
 526              		.syntax unified
 527              		.thumb
 528              		.thumb_func
 530              	DefaultTask:
 531              	.LFB87:
 531:Core/Src/main.c ****       //uart_clear_receive_buffer_and_start_receive_IT();
 532:Core/Src/main.c ****     }
 533:Core/Src/main.c ****   }
 534:Core/Src/main.c **** }
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** //-----------SD config-------------------------
 537:Core/Src/main.c **** 
 538:Core/Src/main.c **** // volatile uint8_t FatFsCnt = 0;
 539:Core/Src/main.c **** // volatile uint8_t Timer1, Timer2;
 540:Core/Src/main.c **** 
 541:Core/Src/main.c **** // void SDTimer_Handler(void)
 542:Core/Src/main.c **** // {
 543:Core/Src/main.c **** //   if(Timer1 > 0)
 544:Core/Src/main.c **** //     Timer1--;
 545:Core/Src/main.c **** //   if(Timer2 > 0);
 546:Core/Src/main.c **** //     Timer2--;
 547:Core/Src/main.c **** // }
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 20


 550:Core/Src/main.c **** 
 551:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 552:Core/Src/main.c **** /**
 553:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 554:Core/Src/main.c ****   * @param  argument: Not used
 555:Core/Src/main.c ****   * @retval None
 556:Core/Src/main.c ****   */
 557:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 558:Core/Src/main.c **** void DefaultTask(void *pvParameters)
 559:Core/Src/main.c **** {
 532              		.loc 1 559 1 view -0
 533              		.cfi_startproc
 534              		@ Volatile: function does not return.
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              	.LVL38:
 538              		.loc 1 559 1 is_stmt 0 view .LVU113
 539 0000 08B5     		push	{r3, lr}
 540              	.LCFI8:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 3, -8
 543              		.cfi_offset 14, -4
 544              	.LVL39:
 545              	.L39:
 560:Core/Src/main.c ****   /* init code for USB_DEVICE */
 561:Core/Src/main.c ****   //MX_USB_DEVICE_Init();
 562:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 563:Core/Src/main.c ****   /* Infinite loop */
 564:Core/Src/main.c ****   for(;;)
 546              		.loc 1 564 3 is_stmt 1 discriminator 1 view .LVU114
 565:Core/Src/main.c ****   {
 566:Core/Src/main.c ****     vTaskDelay(1);
 547              		.loc 1 566 5 discriminator 1 view .LVU115
 548 0002 0120     		movs	r0, #1
 549 0004 FFF7FEFF 		bl	vTaskDelay
 550              	.LVL40:
 564:Core/Src/main.c ****   {
 551              		.loc 1 564 8 discriminator 1 view .LVU116
 552 0008 FBE7     		b	.L39
 553              		.cfi_endproc
 554              	.LFE87:
 556              		.section	.text.uart_clear_receive_buffer_and_start_receive_IT,"ax",%progbits
 557              		.align	1
 558              		.global	uart_clear_receive_buffer_and_start_receive_IT
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 563              	uart_clear_receive_buffer_and_start_receive_IT:
 564              	.LFB73:
  98:Core/Src/main.c ****     // Đọc dữ liệu trong bộ nhận cho đến khi không còn dữ liệu trong buffer
 565              		.loc 1 98 1 view -0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 08B5     		push	{r3, lr}
 570              	.LCFI9:
 571              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 21


 572              		.cfi_offset 3, -8
 573              		.cfi_offset 14, -4
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 574              		.loc 1 100 5 view .LVU118
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 575              		.loc 1 100 11 is_stmt 0 view .LVU119
 576 0002 00E0     		b	.L42
 577              	.L43:
 578              	.LBB9:
 101:Core/Src/main.c ****     }
 579              		.loc 1 101 9 is_stmt 1 view .LVU120
 101:Core/Src/main.c ****     }
 580              		.loc 1 101 42 is_stmt 0 view .LVU121
 581 0004 5B68     		ldr	r3, [r3, #4]
 582              	.L42:
 583              	.LBE9:
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 584              		.loc 1 100 11 is_stmt 1 view .LVU122
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 585              		.loc 1 100 12 is_stmt 0 view .LVU123
 586 0006 084B     		ldr	r3, .L45
 587 0008 1B68     		ldr	r3, [r3]
 588 000a 1A68     		ldr	r2, [r3]
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 589              		.loc 1 100 11 view .LVU124
 590 000c 12F0200F 		tst	r2, #32
 591 0010 F8D1     		bne	.L43
 103:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 592              		.loc 1 103 5 is_stmt 1 view .LVU125
 103:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 593              		.loc 1 103 20 is_stmt 0 view .LVU126
 594 0012 0649     		ldr	r1, .L45+4
 595 0014 0023     		movs	r3, #0
 596 0016 81F8A530 		strb	r3, [r1, #165]
 104:Core/Src/main.c **** }
 597              		.loc 1 104 5 is_stmt 1 view .LVU127
 598 001a 0122     		movs	r2, #1
 599 001c A431     		adds	r1, r1, #164
 600 001e 0248     		ldr	r0, .L45
 601 0020 FFF7FEFF 		bl	HAL_UART_Receive_IT
 602              	.LVL41:
 105:Core/Src/main.c **** 
 603              		.loc 1 105 1 is_stmt 0 view .LVU128
 604 0024 08BD     		pop	{r3, pc}
 605              	.L46:
 606 0026 00BF     		.align	2
 607              	.L45:
 608 0028 00000000 		.word	.LANCHOR5
 609 002c 00000000 		.word	.LANCHOR2
 610              		.cfi_endproc
 611              	.LFE73:
 613              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 614              		.align	1
 615              		.global	HAL_GPIO_EXTI_Callback
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 22


 620              	HAL_GPIO_EXTI_Callback:
 621              	.LVL42:
 622              	.LFB74:
 108:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 623              		.loc 1 108 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 108:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 627              		.loc 1 108 1 is_stmt 0 view .LVU130
 628 0000 08B5     		push	{r3, lr}
 629              	.LCFI10:
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 3, -8
 632              		.cfi_offset 14, -4
 110:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 633              		.loc 1 110 3 is_stmt 1 view .LVU131
 111:Core/Src/main.c ****   {
 634              		.loc 1 111 3 view .LVU132
 111:Core/Src/main.c ****   {
 635              		.loc 1 111 21 is_stmt 0 view .LVU133
 636 0002 124B     		ldr	r3, .L56
 637 0004 1B88     		ldrh	r3, [r3]
 111:Core/Src/main.c ****   {
 638              		.loc 1 111 5 view .LVU134
 639 0006 8342     		cmp	r3, r0
 640 0008 0FD0     		beq	.L53
 115:Core/Src/main.c ****   {
 641              		.loc 1 115 8 is_stmt 1 view .LVU135
 115:Core/Src/main.c ****   {
 642              		.loc 1 115 26 is_stmt 0 view .LVU136
 643 000a 104B     		ldr	r3, .L56
 644 000c 5B88     		ldrh	r3, [r3, #2]
 115:Core/Src/main.c ****   {
 645              		.loc 1 115 10 view .LVU137
 646 000e 8342     		cmp	r3, r0
 647 0010 14D0     		beq	.L54
 119:Core/Src/main.c ****   {
 648              		.loc 1 119 8 is_stmt 1 view .LVU138
 119:Core/Src/main.c ****   {
 649              		.loc 1 119 26 is_stmt 0 view .LVU139
 650 0012 0E4B     		ldr	r3, .L56
 651 0014 9B88     		ldrh	r3, [r3, #4]
 119:Core/Src/main.c ****   {
 652              		.loc 1 119 10 view .LVU140
 653 0016 8342     		cmp	r3, r0
 654 0018 14D0     		beq	.L55
 123:Core/Src/main.c ****   {
 655              		.loc 1 123 8 is_stmt 1 view .LVU141
 123:Core/Src/main.c ****   {
 656              		.loc 1 123 26 is_stmt 0 view .LVU142
 657 001a 0C4B     		ldr	r3, .L56
 658 001c DB88     		ldrh	r3, [r3, #6]
 123:Core/Src/main.c ****   {
 659              		.loc 1 123 10 view .LVU143
 660 001e 8342     		cmp	r3, r0
 661 0020 06D1     		bne	.L49
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 23


 125:Core/Src/main.c ****   }
 662              		.loc 1 125 5 is_stmt 1 view .LVU144
 125:Core/Src/main.c ****   }
 663              		.loc 1 125 18 is_stmt 0 view .LVU145
 664 0022 0A4B     		ldr	r3, .L56
 665 0024 0422     		movs	r2, #4
 666 0026 1A72     		strb	r2, [r3, #8]
 667 0028 02E0     		b	.L49
 668              	.L53:
 113:Core/Src/main.c ****   }
 669              		.loc 1 113 5 is_stmt 1 view .LVU146
 113:Core/Src/main.c ****   }
 670              		.loc 1 113 18 is_stmt 0 view .LVU147
 671 002a 084B     		ldr	r3, .L56
 672 002c 0122     		movs	r2, #1
 673 002e 1A72     		strb	r2, [r3, #8]
 674              	.L49:
 127:Core/Src/main.c ****   xSemaphoreGiveFromISR(xSemaphoreBtn, xHigherPriorityTaskWoken);
 675              		.loc 1 127 3 is_stmt 1 view .LVU148
 676              	.LVL43:
 128:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 677              		.loc 1 128 3 view .LVU149
 678 0030 0021     		movs	r1, #0
 679 0032 074B     		ldr	r3, .L56+4
 680 0034 1868     		ldr	r0, [r3]
 681              	.LVL44:
 128:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 682              		.loc 1 128 3 is_stmt 0 view .LVU150
 683 0036 FFF7FEFF 		bl	xQueueGiveFromISR
 684              	.LVL45:
 129:Core/Src/main.c **** }
 685              		.loc 1 129 3 is_stmt 1 view .LVU151
 129:Core/Src/main.c **** }
 686              		.loc 1 129 47 view .LVU152
 130:Core/Src/main.c **** 
 687              		.loc 1 130 1 is_stmt 0 view .LVU153
 688 003a 08BD     		pop	{r3, pc}
 689              	.LVL46:
 690              	.L54:
 117:Core/Src/main.c ****   }
 691              		.loc 1 117 5 is_stmt 1 view .LVU154
 117:Core/Src/main.c ****   }
 692              		.loc 1 117 18 is_stmt 0 view .LVU155
 693 003c 034B     		ldr	r3, .L56
 694 003e 0222     		movs	r2, #2
 695 0040 1A72     		strb	r2, [r3, #8]
 696 0042 F5E7     		b	.L49
 697              	.L55:
 121:Core/Src/main.c ****   }
 698              		.loc 1 121 5 is_stmt 1 view .LVU156
 121:Core/Src/main.c ****   }
 699              		.loc 1 121 18 is_stmt 0 view .LVU157
 700 0044 014B     		ldr	r3, .L56
 701 0046 0322     		movs	r2, #3
 702 0048 1A72     		strb	r2, [r3, #8]
 703 004a F1E7     		b	.L49
 704              	.L57:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 24


 705              		.align	2
 706              	.L56:
 707 004c 00000000 		.word	.LANCHOR2
 708 0050 00000000 		.word	.LANCHOR3
 709              		.cfi_endproc
 710              	.LFE74:
 712              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 713              		.align	1
 714              		.global	HAL_UART_RxCpltCallback
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	HAL_UART_RxCpltCallback:
 720              	.LVL47:
 721              	.LFB75:
 133:Core/Src/main.c ****   UNUSED(huart);
 722              		.loc 1 133 1 is_stmt 1 view -0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 133:Core/Src/main.c ****   UNUSED(huart);
 726              		.loc 1 133 1 is_stmt 0 view .LVU159
 727 0000 08B5     		push	{r3, lr}
 728              	.LCFI11:
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 3, -8
 731              		.cfi_offset 14, -4
 134:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 732              		.loc 1 134 3 is_stmt 1 view .LVU160
 135:Core/Src/main.c **** 	{	if((cnc.uart.Receive != '!') && (cnc.uart.Receive != 0)) //line feed Ascii
 733              		.loc 1 135 2 view .LVU161
 135:Core/Src/main.c **** 	{	if((cnc.uart.Receive != '!') && (cnc.uart.Receive != 0)) //line feed Ascii
 734              		.loc 1 135 10 is_stmt 0 view .LVU162
 735 0002 0268     		ldr	r2, [r0]
 135:Core/Src/main.c **** 	{	if((cnc.uart.Receive != '!') && (cnc.uart.Receive != 0)) //line feed Ascii
 736              		.loc 1 135 30 view .LVU163
 737 0004 124B     		ldr	r3, .L65
 738 0006 1B68     		ldr	r3, [r3]
 135:Core/Src/main.c **** 	{	if((cnc.uart.Receive != '!') && (cnc.uart.Receive != 0)) //line feed Ascii
 739              		.loc 1 135 4 view .LVU164
 740 0008 9A42     		cmp	r2, r3
 741 000a 00D0     		beq	.L63
 742              	.LVL48:
 743              	.L58:
 150:Core/Src/main.c **** 
 744              		.loc 1 150 1 view .LVU165
 745 000c 08BD     		pop	{r3, pc}
 746              	.LVL49:
 747              	.L63:
 136:Core/Src/main.c **** 		{
 748              		.loc 1 136 4 is_stmt 1 view .LVU166
 136:Core/Src/main.c **** 		{
 749              		.loc 1 136 16 is_stmt 0 view .LVU167
 750 000e 114B     		ldr	r3, .L65+4
 751 0010 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 136:Core/Src/main.c **** 		{
 752              		.loc 1 136 6 view .LVU168
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 25


 753 0014 212B     		cmp	r3, #33
 754 0016 0AD0     		beq	.L60
 136:Core/Src/main.c **** 		{
 755              		.loc 1 136 33 discriminator 1 view .LVU169
 756 0018 4BB1     		cbz	r3, .L60
 138:Core/Src/main.c **** 		}
 757              		.loc 1 138 4 is_stmt 1 view .LVU170
 138:Core/Src/main.c **** 		}
 758              		.loc 1 138 40 is_stmt 0 view .LVU171
 759 001a 0E4A     		ldr	r2, .L65+4
 760 001c 92F8A510 		ldrb	r1, [r2, #165]	@ zero_extendqisi2
 138:Core/Src/main.c **** 		}
 761              		.loc 1 138 46 view .LVU172
 762 0020 481C     		adds	r0, r1, #1
 763              	.LVL50:
 138:Core/Src/main.c **** 		}
 764              		.loc 1 138 46 view .LVU173
 765 0022 82F8A500 		strb	r0, [r2, #165]
 138:Core/Src/main.c **** 		}
 766              		.loc 1 138 50 view .LVU174
 767 0026 0A44     		add	r2, r2, r1
 768 0028 82F8A630 		strb	r3, [r2, #166]
 769 002c 01E0     		b	.L61
 770              	.LVL51:
 771              	.L60:
 140:Core/Src/main.c **** 		{
 772              		.loc 1 140 8 is_stmt 1 view .LVU175
 140:Core/Src/main.c **** 		{
 773              		.loc 1 140 11 is_stmt 0 view .LVU176
 774 002e 212B     		cmp	r3, #33
 775 0030 05D0     		beq	.L64
 776              	.LVL52:
 777              	.L61:
 778              	.LBB10:
 145:Core/Src/main.c ****       //return;	
 779              		.loc 1 145 51 is_stmt 1 discriminator 3 view .LVU177
 780              	.LBE10:
 148:Core/Src/main.c **** 	}
 781              		.loc 1 148 3 discriminator 3 view .LVU178
 782 0032 0122     		movs	r2, #1
 783 0034 0849     		ldr	r1, .L65+8
 784 0036 0648     		ldr	r0, .L65
 785 0038 FFF7FEFF 		bl	HAL_UART_Receive_IT
 786              	.LVL53:
 150:Core/Src/main.c **** 
 787              		.loc 1 150 1 is_stmt 0 discriminator 3 view .LVU179
 788 003c E6E7     		b	.L58
 789              	.LVL54:
 790              	.L64:
 791              	.LBB11:
 142:Core/Src/main.c ****       BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 792              		.loc 1 142 7 is_stmt 1 view .LVU180
 142:Core/Src/main.c ****       BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 793              		.loc 1 142 22 is_stmt 0 view .LVU181
 794 003e 0021     		movs	r1, #0
 795 0040 044B     		ldr	r3, .L65+4
 796 0042 83F8A510 		strb	r1, [r3, #165]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 26


 143:Core/Src/main.c ****       xSemaphoreGiveFromISR(xSemaphoreUART, xHigherPriorityTaskWoken);
 797              		.loc 1 143 7 is_stmt 1 view .LVU182
 798              	.LVL55:
 144:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 799              		.loc 1 144 7 view .LVU183
 800 0046 054B     		ldr	r3, .L65+12
 801 0048 1868     		ldr	r0, [r3]
 802              	.LVL56:
 144:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 803              		.loc 1 144 7 is_stmt 0 view .LVU184
 804 004a FFF7FEFF 		bl	xQueueGiveFromISR
 805              	.LVL57:
 145:Core/Src/main.c ****       //return;	
 806              		.loc 1 145 7 is_stmt 1 view .LVU185
 807 004e F0E7     		b	.L61
 808              	.L66:
 809              		.align	2
 810              	.L65:
 811 0050 00000000 		.word	.LANCHOR5
 812 0054 00000000 		.word	.LANCHOR2
 813 0058 A4000000 		.word	.LANCHOR2+164
 814 005c 00000000 		.word	.LANCHOR4
 815              	.LBE11:
 816              		.cfi_endproc
 817              	.LFE75:
 819              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 820              		.align	1
 821              		.global	HAL_TIM_PeriodElapsedCallback
 822              		.syntax unified
 823              		.thumb
 824              		.thumb_func
 826              	HAL_TIM_PeriodElapsedCallback:
 827              	.LVL58:
 828              	.LFB88:
 567:Core/Src/main.c ****   }
 568:Core/Src/main.c ****   /* USER CODE END 5 */
 569:Core/Src/main.c **** }
 570:Core/Src/main.c **** 
 571:Core/Src/main.c **** /**
 572:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 573:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 574:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 575:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 576:Core/Src/main.c ****   * @param  htim : TIM handle
 577:Core/Src/main.c ****   * @retval None
 578:Core/Src/main.c ****   */
 579:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 580:Core/Src/main.c **** {
 829              		.loc 1 580 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		.loc 1 580 1 is_stmt 0 view .LVU187
 834 0000 08B5     		push	{r3, lr}
 835              	.LCFI12:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 3, -8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 27


 838              		.cfi_offset 14, -4
 581:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 584:Core/Src/main.c **** 
 585:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 586:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 839              		.loc 1 586 3 is_stmt 1 view .LVU188
 840              		.loc 1 586 11 is_stmt 0 view .LVU189
 841 0002 0268     		ldr	r2, [r0]
 842              		.loc 1 586 6 view .LVU190
 843 0004 034B     		ldr	r3, .L71
 844 0006 9A42     		cmp	r2, r3
 845 0008 00D0     		beq	.L70
 846              	.LVL59:
 847              	.L67:
 587:Core/Src/main.c **** 
 588:Core/Src/main.c ****     // FatFsCnt ++;
 589:Core/Src/main.c ****     // if(FatFsCnt >= 10)
 590:Core/Src/main.c ****     // {
 591:Core/Src/main.c ****     //   FatFsCnt = 0;
 592:Core/Src/main.c ****     //   SDTimer_Handler();
 593:Core/Src/main.c ****     // }
 594:Core/Src/main.c ****     HAL_IncTick();
 595:Core/Src/main.c ****   }
 596:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 597:Core/Src/main.c **** 
 598:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 599:Core/Src/main.c **** }
 848              		.loc 1 599 1 view .LVU191
 849 000a 08BD     		pop	{r3, pc}
 850              	.LVL60:
 851              	.L70:
 594:Core/Src/main.c ****   }
 852              		.loc 1 594 5 is_stmt 1 view .LVU192
 853 000c FFF7FEFF 		bl	HAL_IncTick
 854              	.LVL61:
 855              		.loc 1 599 1 is_stmt 0 view .LVU193
 856 0010 FBE7     		b	.L67
 857              	.L72:
 858 0012 00BF     		.align	2
 859              	.L71:
 860 0014 002C0140 		.word	1073818624
 861              		.cfi_endproc
 862              	.LFE88:
 864              		.section	.text.Error_Handler,"ax",%progbits
 865              		.align	1
 866              		.global	Error_Handler
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 871              	Error_Handler:
 872              	.LFB89:
 600:Core/Src/main.c **** 
 601:Core/Src/main.c **** /**
 602:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 603:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 28


 604:Core/Src/main.c ****   */
 605:Core/Src/main.c **** void Error_Handler(void)
 606:Core/Src/main.c **** {
 873              		.loc 1 606 1 is_stmt 1 view -0
 874              		.cfi_startproc
 875              		@ Volatile: function does not return.
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		@ link register save eliminated.
 607:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 608:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 609:Core/Src/main.c ****   __disable_irq();
 879              		.loc 1 609 3 view .LVU195
 880              	.LBB12:
 881              	.LBI12:
 882              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 29


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 30


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 883              		.loc 2 140 27 view .LVU196
 884              	.LBB13:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 885              		.loc 2 142 3 view .LVU197
 886              		.syntax unified
 887              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 888 0000 72B6     		cpsid i
 889              	@ 0 "" 2
 890              		.thumb
 891              		.syntax unified
 892              	.L74:
 893              	.LBE13:
 894              	.LBE12:
 610:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 31


 895              		.loc 1 610 3 discriminator 1 view .LVU198
 611:Core/Src/main.c ****   {
 612:Core/Src/main.c ****   }
 896              		.loc 1 612 3 discriminator 1 view .LVU199
 610:Core/Src/main.c ****   while (1)
 897              		.loc 1 610 9 discriminator 1 view .LVU200
 898 0002 FEE7     		b	.L74
 899              		.cfi_endproc
 900              	.LFE89:
 902              		.section	.text.MX_I2C1_Init,"ax",%progbits
 903              		.align	1
 904              		.syntax unified
 905              		.thumb
 906              		.thumb_func
 908              	MX_I2C1_Init:
 909              	.LFB78:
 304:Core/Src/main.c **** 
 910              		.loc 1 304 1 view -0
 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 0, uses_anonymous_args = 0
 914 0000 08B5     		push	{r3, lr}
 915              	.LCFI13:
 916              		.cfi_def_cfa_offset 8
 917              		.cfi_offset 3, -8
 918              		.cfi_offset 14, -4
 313:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 919              		.loc 1 313 3 view .LVU202
 313:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 920              		.loc 1 313 18 is_stmt 0 view .LVU203
 921 0002 0A48     		ldr	r0, .L79
 922 0004 0A4B     		ldr	r3, .L79+4
 923 0006 0360     		str	r3, [r0]
 314:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 924              		.loc 1 314 3 is_stmt 1 view .LVU204
 314:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 925              		.loc 1 314 25 is_stmt 0 view .LVU205
 926 0008 0A4B     		ldr	r3, .L79+8
 927 000a 4360     		str	r3, [r0, #4]
 315:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 928              		.loc 1 315 3 is_stmt 1 view .LVU206
 315:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 929              		.loc 1 315 24 is_stmt 0 view .LVU207
 930 000c 0023     		movs	r3, #0
 931 000e 8360     		str	r3, [r0, #8]
 316:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 932              		.loc 1 316 3 is_stmt 1 view .LVU208
 316:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 933              		.loc 1 316 26 is_stmt 0 view .LVU209
 934 0010 C360     		str	r3, [r0, #12]
 317:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 935              		.loc 1 317 3 is_stmt 1 view .LVU210
 317:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 936              		.loc 1 317 29 is_stmt 0 view .LVU211
 937 0012 4FF48042 		mov	r2, #16384
 938 0016 0261     		str	r2, [r0, #16]
 318:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 32


 939              		.loc 1 318 3 is_stmt 1 view .LVU212
 318:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 940              		.loc 1 318 30 is_stmt 0 view .LVU213
 941 0018 4361     		str	r3, [r0, #20]
 319:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 942              		.loc 1 319 3 is_stmt 1 view .LVU214
 319:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 943              		.loc 1 319 26 is_stmt 0 view .LVU215
 944 001a 8361     		str	r3, [r0, #24]
 320:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 945              		.loc 1 320 3 is_stmt 1 view .LVU216
 320:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 946              		.loc 1 320 30 is_stmt 0 view .LVU217
 947 001c C361     		str	r3, [r0, #28]
 321:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 948              		.loc 1 321 3 is_stmt 1 view .LVU218
 321:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 949              		.loc 1 321 28 is_stmt 0 view .LVU219
 950 001e 0362     		str	r3, [r0, #32]
 322:Core/Src/main.c ****   {
 951              		.loc 1 322 3 is_stmt 1 view .LVU220
 322:Core/Src/main.c ****   {
 952              		.loc 1 322 7 is_stmt 0 view .LVU221
 953 0020 FFF7FEFF 		bl	HAL_I2C_Init
 954              	.LVL62:
 322:Core/Src/main.c ****   {
 955              		.loc 1 322 6 view .LVU222
 956 0024 00B9     		cbnz	r0, .L78
 330:Core/Src/main.c **** 
 957              		.loc 1 330 1 view .LVU223
 958 0026 08BD     		pop	{r3, pc}
 959              	.L78:
 324:Core/Src/main.c ****   }
 960              		.loc 1 324 5 is_stmt 1 view .LVU224
 961 0028 FFF7FEFF 		bl	Error_Handler
 962              	.LVL63:
 963              	.L80:
 964              		.align	2
 965              	.L79:
 966 002c 00000000 		.word	.LANCHOR6
 967 0030 00540040 		.word	1073763328
 968 0034 A0860100 		.word	100000
 969              		.cfi_endproc
 970              	.LFE78:
 972              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 973              		.align	1
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	MX_USART2_UART_Init:
 979              	.LFB80:
 376:Core/Src/main.c **** 
 980              		.loc 1 376 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 33


 985              	.LCFI14:
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 3, -8
 988              		.cfi_offset 14, -4
 385:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 989              		.loc 1 385 3 view .LVU226
 385:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 990              		.loc 1 385 19 is_stmt 0 view .LVU227
 991 0002 0A48     		ldr	r0, .L85
 992 0004 0A4B     		ldr	r3, .L85+4
 993 0006 0360     		str	r3, [r0]
 386:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 994              		.loc 1 386 3 is_stmt 1 view .LVU228
 386:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 995              		.loc 1 386 24 is_stmt 0 view .LVU229
 996 0008 4FF4E133 		mov	r3, #115200
 997 000c 4360     		str	r3, [r0, #4]
 387:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 998              		.loc 1 387 3 is_stmt 1 view .LVU230
 387:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 999              		.loc 1 387 26 is_stmt 0 view .LVU231
 1000 000e 0023     		movs	r3, #0
 1001 0010 8360     		str	r3, [r0, #8]
 388:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1002              		.loc 1 388 3 is_stmt 1 view .LVU232
 388:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1003              		.loc 1 388 24 is_stmt 0 view .LVU233
 1004 0012 C360     		str	r3, [r0, #12]
 389:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1005              		.loc 1 389 3 is_stmt 1 view .LVU234
 389:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1006              		.loc 1 389 22 is_stmt 0 view .LVU235
 1007 0014 0361     		str	r3, [r0, #16]
 390:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1008              		.loc 1 390 3 is_stmt 1 view .LVU236
 390:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1009              		.loc 1 390 20 is_stmt 0 view .LVU237
 1010 0016 0C22     		movs	r2, #12
 1011 0018 4261     		str	r2, [r0, #20]
 391:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1012              		.loc 1 391 3 is_stmt 1 view .LVU238
 391:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1013              		.loc 1 391 25 is_stmt 0 view .LVU239
 1014 001a 8361     		str	r3, [r0, #24]
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1015              		.loc 1 392 3 is_stmt 1 view .LVU240
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1016              		.loc 1 392 28 is_stmt 0 view .LVU241
 1017 001c C361     		str	r3, [r0, #28]
 393:Core/Src/main.c ****   {
 1018              		.loc 1 393 3 is_stmt 1 view .LVU242
 393:Core/Src/main.c ****   {
 1019              		.loc 1 393 7 is_stmt 0 view .LVU243
 1020 001e FFF7FEFF 		bl	HAL_UART_Init
 1021              	.LVL64:
 393:Core/Src/main.c ****   {
 1022              		.loc 1 393 6 view .LVU244
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 34


 1023 0022 00B9     		cbnz	r0, .L84
 401:Core/Src/main.c **** 
 1024              		.loc 1 401 1 view .LVU245
 1025 0024 08BD     		pop	{r3, pc}
 1026              	.L84:
 395:Core/Src/main.c ****   }
 1027              		.loc 1 395 5 is_stmt 1 view .LVU246
 1028 0026 FFF7FEFF 		bl	Error_Handler
 1029              	.LVL65:
 1030              	.L86:
 1031 002a 00BF     		.align	2
 1032              	.L85:
 1033 002c 00000000 		.word	.LANCHOR5
 1034 0030 00440040 		.word	1073759232
 1035              		.cfi_endproc
 1036              	.LFE80:
 1038              		.section	.text.SystemClock_Config,"ax",%progbits
 1039              		.align	1
 1040              		.global	SystemClock_Config
 1041              		.syntax unified
 1042              		.thumb
 1043              		.thumb_func
 1045              	SystemClock_Config:
 1046              	.LFB77:
 258:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1047              		.loc 1 258 1 view -0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 80
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051 0000 00B5     		push	{lr}
 1052              	.LCFI15:
 1053              		.cfi_def_cfa_offset 4
 1054              		.cfi_offset 14, -4
 1055 0002 95B0     		sub	sp, sp, #84
 1056              	.LCFI16:
 1057              		.cfi_def_cfa_offset 88
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1058              		.loc 1 259 3 view .LVU248
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1059              		.loc 1 259 22 is_stmt 0 view .LVU249
 1060 0004 2822     		movs	r2, #40
 1061 0006 0021     		movs	r1, #0
 1062 0008 0DEB0200 		add	r0, sp, r2
 1063 000c FFF7FEFF 		bl	memset
 1064              	.LVL66:
 260:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1065              		.loc 1 260 3 is_stmt 1 view .LVU250
 260:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1066              		.loc 1 260 22 is_stmt 0 view .LVU251
 1067 0010 0023     		movs	r3, #0
 1068 0012 0593     		str	r3, [sp, #20]
 1069 0014 0693     		str	r3, [sp, #24]
 1070 0016 0793     		str	r3, [sp, #28]
 1071 0018 0893     		str	r3, [sp, #32]
 1072 001a 0993     		str	r3, [sp, #36]
 261:Core/Src/main.c **** 
 1073              		.loc 1 261 3 is_stmt 1 view .LVU252
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 35


 261:Core/Src/main.c **** 
 1074              		.loc 1 261 28 is_stmt 0 view .LVU253
 1075 001c 0193     		str	r3, [sp, #4]
 1076 001e 0293     		str	r3, [sp, #8]
 1077 0020 0393     		str	r3, [sp, #12]
 1078 0022 0493     		str	r3, [sp, #16]
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1079              		.loc 1 266 3 is_stmt 1 view .LVU254
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1080              		.loc 1 266 36 is_stmt 0 view .LVU255
 1081 0024 0122     		movs	r2, #1
 1082 0026 0A92     		str	r2, [sp, #40]
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1083              		.loc 1 267 3 is_stmt 1 view .LVU256
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1084              		.loc 1 267 30 is_stmt 0 view .LVU257
 1085 0028 4FF48033 		mov	r3, #65536
 1086 002c 0B93     		str	r3, [sp, #44]
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1087              		.loc 1 268 3 is_stmt 1 view .LVU258
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1088              		.loc 1 269 3 view .LVU259
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1089              		.loc 1 269 30 is_stmt 0 view .LVU260
 1090 002e 0E92     		str	r2, [sp, #56]
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1091              		.loc 1 270 3 is_stmt 1 view .LVU261
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1092              		.loc 1 270 34 is_stmt 0 view .LVU262
 1093 0030 0222     		movs	r2, #2
 1094 0032 1192     		str	r2, [sp, #68]
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1095              		.loc 1 271 3 is_stmt 1 view .LVU263
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1096              		.loc 1 271 35 is_stmt 0 view .LVU264
 1097 0034 1293     		str	r3, [sp, #72]
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1098              		.loc 1 272 3 is_stmt 1 view .LVU265
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1099              		.loc 1 272 32 is_stmt 0 view .LVU266
 1100 0036 4FF4E013 		mov	r3, #1835008
 1101 003a 1393     		str	r3, [sp, #76]
 273:Core/Src/main.c ****   {
 1102              		.loc 1 273 3 is_stmt 1 view .LVU267
 273:Core/Src/main.c ****   {
 1103              		.loc 1 273 7 is_stmt 0 view .LVU268
 1104 003c 0AA8     		add	r0, sp, #40
 1105 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1106              	.LVL67:
 273:Core/Src/main.c ****   {
 1107              		.loc 1 273 6 view .LVU269
 1108 0042 C0B9     		cbnz	r0, .L92
 279:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1109              		.loc 1 279 3 is_stmt 1 view .LVU270
 279:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1110              		.loc 1 279 31 is_stmt 0 view .LVU271
 1111 0044 0F23     		movs	r3, #15
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 36


 1112 0046 0593     		str	r3, [sp, #20]
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1113              		.loc 1 281 3 is_stmt 1 view .LVU272
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1114              		.loc 1 281 34 is_stmt 0 view .LVU273
 1115 0048 0221     		movs	r1, #2
 1116 004a 0691     		str	r1, [sp, #24]
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1117              		.loc 1 282 3 is_stmt 1 view .LVU274
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1118              		.loc 1 282 35 is_stmt 0 view .LVU275
 1119 004c 0023     		movs	r3, #0
 1120 004e 0793     		str	r3, [sp, #28]
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1121              		.loc 1 283 3 is_stmt 1 view .LVU276
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1122              		.loc 1 283 36 is_stmt 0 view .LVU277
 1123 0050 4FF48062 		mov	r2, #1024
 1124 0054 0892     		str	r2, [sp, #32]
 284:Core/Src/main.c **** 
 1125              		.loc 1 284 3 is_stmt 1 view .LVU278
 284:Core/Src/main.c **** 
 1126              		.loc 1 284 36 is_stmt 0 view .LVU279
 1127 0056 0993     		str	r3, [sp, #36]
 286:Core/Src/main.c ****   {
 1128              		.loc 1 286 3 is_stmt 1 view .LVU280
 286:Core/Src/main.c ****   {
 1129              		.loc 1 286 7 is_stmt 0 view .LVU281
 1130 0058 05A8     		add	r0, sp, #20
 1131 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1132              	.LVL68:
 286:Core/Src/main.c ****   {
 1133              		.loc 1 286 6 view .LVU282
 1134 005e 60B9     		cbnz	r0, .L93
 290:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1135              		.loc 1 290 3 is_stmt 1 view .LVU283
 290:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1136              		.loc 1 290 38 is_stmt 0 view .LVU284
 1137 0060 1023     		movs	r3, #16
 1138 0062 0193     		str	r3, [sp, #4]
 291:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1139              		.loc 1 291 3 is_stmt 1 view .LVU285
 291:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1140              		.loc 1 291 35 is_stmt 0 view .LVU286
 1141 0064 0023     		movs	r3, #0
 1142 0066 0493     		str	r3, [sp, #16]
 292:Core/Src/main.c ****   {
 1143              		.loc 1 292 3 is_stmt 1 view .LVU287
 292:Core/Src/main.c ****   {
 1144              		.loc 1 292 7 is_stmt 0 view .LVU288
 1145 0068 01A8     		add	r0, sp, #4
 1146 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1147              	.LVL69:
 292:Core/Src/main.c ****   {
 1148              		.loc 1 292 6 view .LVU289
 1149 006e 30B9     		cbnz	r0, .L94
 296:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 37


 1150              		.loc 1 296 1 view .LVU290
 1151 0070 15B0     		add	sp, sp, #84
 1152              	.LCFI17:
 1153              		.cfi_remember_state
 1154              		.cfi_def_cfa_offset 4
 1155              		@ sp needed
 1156 0072 5DF804FB 		ldr	pc, [sp], #4
 1157              	.L92:
 1158              	.LCFI18:
 1159              		.cfi_restore_state
 275:Core/Src/main.c ****   }
 1160              		.loc 1 275 5 is_stmt 1 view .LVU291
 1161 0076 FFF7FEFF 		bl	Error_Handler
 1162              	.LVL70:
 1163              	.L93:
 288:Core/Src/main.c ****   }
 1164              		.loc 1 288 5 view .LVU292
 1165 007a FFF7FEFF 		bl	Error_Handler
 1166              	.LVL71:
 1167              	.L94:
 294:Core/Src/main.c ****   }
 1168              		.loc 1 294 5 view .LVU293
 1169 007e FFF7FEFF 		bl	Error_Handler
 1170              	.LVL72:
 1171              		.cfi_endproc
 1172              	.LFE77:
 1174              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1175              		.align	2
 1176              	.LC0:
 1177 0000 44656661 		.ascii	"Default\000"
 1177      756C7400 
 1178              		.align	2
 1179              	.LC1:
 1180 0008 52656365 		.ascii	"ReceiveDataFromGUI\000"
 1180      69766544 
 1180      61746146 
 1180      726F6D47 
 1180      554900
 1181 001b 00       		.align	2
 1182              	.LC2:
 1183 001c 43686563 		.ascii	"CheckUSBConnect\000"
 1183      6B555342 
 1183      436F6E6E 
 1183      65637400 
 1184              		.align	2
 1185              	.LC3:
 1186 002c 50726F63 		.ascii	"ProcessBtnPress\000"
 1186      65737342 
 1186      746E5072 
 1186      65737300 
 1187              		.align	2
 1188              	.LC4:
 1189 003c 50726F63 		.ascii	"ProcessMode\000"
 1189      6573734D 
 1189      6F646500 
 1190              		.align	2
 1191              	.LC5:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 38


 1192 0048 52656365 		.ascii	"ReceiveDataFromCNC\000"
 1192      69766544 
 1192      61746146 
 1192      726F6D43 
 1192      4E4300
 1193              		.section	.text.main,"ax",%progbits
 1194              		.align	1
 1195              		.global	main
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1200              	main:
 1201              	.LFB76:
 159:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1202              		.loc 1 159 1 view -0
 1203              		.cfi_startproc
 1204              		@ Volatile: function does not return.
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207 0000 00B5     		push	{lr}
 1208              	.LCFI19:
 1209              		.cfi_def_cfa_offset 4
 1210              		.cfi_offset 14, -4
 1211 0002 83B0     		sub	sp, sp, #12
 1212              	.LCFI20:
 1213              		.cfi_def_cfa_offset 16
 167:Core/Src/main.c **** 
 1214              		.loc 1 167 3 view .LVU295
 1215 0004 FFF7FEFF 		bl	HAL_Init
 1216              	.LVL73:
 174:Core/Src/main.c **** 
 1217              		.loc 1 174 3 view .LVU296
 1218 0008 FFF7FEFF 		bl	SystemClock_Config
 1219              	.LVL74:
 181:Core/Src/main.c ****   MX_I2C1_Init();
 1220              		.loc 1 181 3 view .LVU297
 1221 000c FFF7FEFF 		bl	MX_GPIO_Init
 1222              	.LVL75:
 182:Core/Src/main.c ****   //MX_SPI1_Init();
 1223              		.loc 1 182 3 view .LVU298
 1224 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1225              	.LVL76:
 184:Core/Src/main.c ****   //MX_FATFS_Init();
 1226              		.loc 1 184 3 view .LVU299
 1227 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1228              	.LVL77:
 187:Core/Src/main.c ****   InitCNC(&cnc);
 1229              		.loc 1 187 3 view .LVU300
 1230 0018 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1231              	.LVL78:
 188:Core/Src/main.c **** 
 1232              		.loc 1 188 3 view .LVU301
 1233 001c 324C     		ldr	r4, .L98
 1234 001e 2046     		mov	r0, r4
 1235 0020 FFF7FEFF 		bl	InitCNC
 1236              	.LVL79:
 190:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 39


 1237              		.loc 1 190 3 view .LVU302
 190:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1238              		.loc 1 190 18 is_stmt 0 view .LVU303
 1239 0024 3148     		ldr	r0, .L98+4
 1240 0026 A067     		str	r0, [r4, #120]
 191:Core/Src/main.c **** 
 1241              		.loc 1 191 3 is_stmt 1 view .LVU304
 191:Core/Src/main.c **** 
 1242              		.loc 1 191 12 is_stmt 0 view .LVU305
 1243 0028 314B     		ldr	r3, .L98+8
 1244 002a 2367     		str	r3, [r4, #112]
 193:Core/Src/main.c **** 
 1245              		.loc 1 193 3 is_stmt 1 view .LVU306
 1246 002c 0122     		movs	r2, #1
 1247 002e 04F1A401 		add	r1, r4, #164
 1248 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1249              	.LVL80:
 204:Core/Src/main.c **** 
 1250              		.loc 1 204 3 view .LVU307
 204:Core/Src/main.c **** 
 1251              		.loc 1 204 19 is_stmt 0 view .LVU308
 1252 0036 0322     		movs	r2, #3
 1253 0038 0021     		movs	r1, #0
 1254 003a 0120     		movs	r0, #1
 1255 003c FFF7FEFF 		bl	xQueueGenericCreate
 1256              	.LVL81:
 204:Core/Src/main.c **** 
 1257              		.loc 1 204 17 view .LVU309
 1258 0040 2C4B     		ldr	r3, .L98+12
 1259 0042 1860     		str	r0, [r3]
 206:Core/Src/main.c **** 
 1260              		.loc 1 206 3 is_stmt 1 view .LVU310
 206:Core/Src/main.c **** 
 1261              		.loc 1 206 19 is_stmt 0 view .LVU311
 1262 0044 0322     		movs	r2, #3
 1263 0046 0021     		movs	r1, #0
 1264 0048 0120     		movs	r0, #1
 1265 004a FFF7FEFF 		bl	xQueueGenericCreate
 1266              	.LVL82:
 206:Core/Src/main.c **** 
 1267              		.loc 1 206 17 view .LVU312
 1268 004e 2A4B     		ldr	r3, .L98+16
 1269 0050 1860     		str	r0, [r3]
 208:Core/Src/main.c **** 
 1270              		.loc 1 208 3 is_stmt 1 view .LVU313
 208:Core/Src/main.c **** 
 1271              		.loc 1 208 20 is_stmt 0 view .LVU314
 1272 0052 0322     		movs	r2, #3
 1273 0054 0021     		movs	r1, #0
 1274 0056 0120     		movs	r0, #1
 1275 0058 FFF7FEFF 		bl	xQueueGenericCreate
 1276              	.LVL83:
 208:Core/Src/main.c **** 
 1277              		.loc 1 208 18 view .LVU315
 1278 005c 274B     		ldr	r3, .L98+20
 1279 005e 1860     		str	r0, [r3]
 210:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 40


 1280              		.loc 1 210 3 is_stmt 1 view .LVU316
 210:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1281              		.loc 1 210 20 is_stmt 0 view .LVU317
 1282 0060 0322     		movs	r2, #3
 1283 0062 0021     		movs	r1, #0
 1284 0064 0120     		movs	r0, #1
 1285 0066 FFF7FEFF 		bl	xQueueGenericCreate
 1286              	.LVL84:
 210:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1287              		.loc 1 210 18 view .LVU318
 1288 006a 254B     		ldr	r3, .L98+24
 1289 006c 1860     		str	r0, [r3]
 223:Core/Src/main.c **** 
 1290              		.loc 1 223 3 is_stmt 1 view .LVU319
 1291 006e 254B     		ldr	r3, .L98+28
 1292 0070 0193     		str	r3, [sp, #4]
 1293 0072 0123     		movs	r3, #1
 1294 0074 0093     		str	r3, [sp]
 1295 0076 0023     		movs	r3, #0
 1296 0078 8022     		movs	r2, #128
 1297 007a 2349     		ldr	r1, .L98+32
 1298 007c 2348     		ldr	r0, .L98+36
 1299 007e FFF7FEFF 		bl	xTaskCreate
 1300              	.LVL85:
 227:Core/Src/main.c **** 
 1301              		.loc 1 227 3 view .LVU320
 1302 0082 234B     		ldr	r3, .L98+40
 1303 0084 0193     		str	r3, [sp, #4]
 1304 0086 0224     		movs	r4, #2
 1305 0088 0094     		str	r4, [sp]
 1306 008a 0023     		movs	r3, #0
 1307 008c 8022     		movs	r2, #128
 1308 008e 2149     		ldr	r1, .L98+44
 1309 0090 2148     		ldr	r0, .L98+48
 1310 0092 FFF7FEFF 		bl	xTaskCreate
 1311              	.LVL86:
 229:Core/Src/main.c **** 
 1312              		.loc 1 229 3 view .LVU321
 1313 0096 214B     		ldr	r3, .L98+52
 1314 0098 0193     		str	r3, [sp, #4]
 1315 009a 0094     		str	r4, [sp]
 1316 009c 0023     		movs	r3, #0
 1317 009e 8022     		movs	r2, #128
 1318 00a0 1F49     		ldr	r1, .L98+56
 1319 00a2 2048     		ldr	r0, .L98+60
 1320 00a4 FFF7FEFF 		bl	xTaskCreate
 1321              	.LVL87:
 231:Core/Src/main.c **** 
 1322              		.loc 1 231 3 view .LVU322
 1323 00a8 1F4B     		ldr	r3, .L98+64
 1324 00aa 0193     		str	r3, [sp, #4]
 1325 00ac 0423     		movs	r3, #4
 1326 00ae 0093     		str	r3, [sp]
 1327 00b0 0023     		movs	r3, #0
 1328 00b2 8022     		movs	r2, #128
 1329 00b4 1D49     		ldr	r1, .L98+68
 1330 00b6 1E48     		ldr	r0, .L98+72
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 41


 1331 00b8 FFF7FEFF 		bl	xTaskCreate
 1332              	.LVL88:
 233:Core/Src/main.c **** 
 1333              		.loc 1 233 3 view .LVU323
 1334 00bc 1D4B     		ldr	r3, .L98+76
 1335 00be 0193     		str	r3, [sp, #4]
 1336 00c0 0094     		str	r4, [sp]
 1337 00c2 0023     		movs	r3, #0
 1338 00c4 8022     		movs	r2, #128
 1339 00c6 1C49     		ldr	r1, .L98+80
 1340 00c8 1C48     		ldr	r0, .L98+84
 1341 00ca FFF7FEFF 		bl	xTaskCreate
 1342              	.LVL89:
 235:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1343              		.loc 1 235 3 view .LVU324
 1344 00ce 1C4B     		ldr	r3, .L98+88
 1345 00d0 0193     		str	r3, [sp, #4]
 1346 00d2 0323     		movs	r3, #3
 1347 00d4 0093     		str	r3, [sp]
 1348 00d6 0023     		movs	r3, #0
 1349 00d8 8022     		movs	r2, #128
 1350 00da 1A49     		ldr	r1, .L98+92
 1351 00dc 1A48     		ldr	r0, .L98+96
 1352 00de FFF7FEFF 		bl	xTaskCreate
 1353              	.LVL90:
 239:Core/Src/main.c **** 
 1354              		.loc 1 239 3 view .LVU325
 1355 00e2 FFF7FEFF 		bl	vTaskStartScheduler
 1356              	.LVL91:
 1357              	.L96:
 244:Core/Src/main.c ****   {
 1358              		.loc 1 244 3 discriminator 1 view .LVU326
 249:Core/Src/main.c ****   /* USER CODE END 3 */
 1359              		.loc 1 249 3 discriminator 1 view .LVU327
 244:Core/Src/main.c ****   {
 1360              		.loc 1 244 9 discriminator 1 view .LVU328
 1361 00e6 FEE7     		b	.L96
 1362              	.L99:
 1363              		.align	2
 1364              	.L98:
 1365 00e8 00000000 		.word	.LANCHOR2
 1366 00ec 00000000 		.word	.LANCHOR5
 1367 00f0 00000000 		.word	hUsbDeviceFS
 1368 00f4 00000000 		.word	.LANCHOR0
 1369 00f8 00000000 		.word	.LANCHOR3
 1370 00fc 00000000 		.word	.LANCHOR1
 1371 0100 00000000 		.word	.LANCHOR4
 1372 0104 00000000 		.word	.LANCHOR7
 1373 0108 00000000 		.word	.LC0
 1374 010c 00000000 		.word	DefaultTask
 1375 0110 00000000 		.word	.LANCHOR8
 1376 0114 08000000 		.word	.LC1
 1377 0118 00000000 		.word	StartReceiveDataFromGUI
 1378 011c 00000000 		.word	.LANCHOR9
 1379 0120 1C000000 		.word	.LC2
 1380 0124 00000000 		.word	StartCheckUSBConnect
 1381 0128 00000000 		.word	.LANCHOR10
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 42


 1382 012c 2C000000 		.word	.LC3
 1383 0130 00000000 		.word	StartProcessBtnPress
 1384 0134 00000000 		.word	.LANCHOR11
 1385 0138 3C000000 		.word	.LC4
 1386 013c 00000000 		.word	StartProcessMode
 1387 0140 00000000 		.word	.LANCHOR12
 1388 0144 48000000 		.word	.LC5
 1389 0148 00000000 		.word	StartReceiveDataFromCNC
 1390              		.cfi_endproc
 1391              	.LFE76:
 1393              		.global	cnc
 1394              		.global	ReceiveDataFromCNCTask
 1395              		.global	xSemaphoreUART
 1396              		.global	ProcessModeTask
 1397              		.global	xSemaphoreMode
 1398              		.global	ProcessBtnPressTask
 1399              		.global	xSemaphoreBtn
 1400              		.global	CheckUSBConnectTask
 1401              		.global	ReceiveDataFromGUITask
 1402              		.global	xSemaphoreUSB
 1403              		.global	defaultTask
 1404              		.global	huart2
 1405              		.global	hspi1
 1406              		.global	hi2c1
 1407              		.section	.bss.CheckUSBConnectTask,"aw",%nobits
 1408              		.align	2
 1409              		.set	.LANCHOR9,. + 0
 1412              	CheckUSBConnectTask:
 1413 0000 00000000 		.space	4
 1414              		.section	.bss.ProcessBtnPressTask,"aw",%nobits
 1415              		.align	2
 1416              		.set	.LANCHOR10,. + 0
 1419              	ProcessBtnPressTask:
 1420 0000 00000000 		.space	4
 1421              		.section	.bss.ProcessModeTask,"aw",%nobits
 1422              		.align	2
 1423              		.set	.LANCHOR11,. + 0
 1426              	ProcessModeTask:
 1427 0000 00000000 		.space	4
 1428              		.section	.bss.ReceiveDataFromCNCTask,"aw",%nobits
 1429              		.align	2
 1430              		.set	.LANCHOR12,. + 0
 1433              	ReceiveDataFromCNCTask:
 1434 0000 00000000 		.space	4
 1435              		.section	.bss.ReceiveDataFromGUITask,"aw",%nobits
 1436              		.align	2
 1437              		.set	.LANCHOR8,. + 0
 1440              	ReceiveDataFromGUITask:
 1441 0000 00000000 		.space	4
 1442              		.section	.bss.cnc,"aw",%nobits
 1443              		.align	2
 1444              		.set	.LANCHOR2,. + 0
 1447              	cnc:
 1448 0000 00000000 		.space	188
 1448      00000000 
 1448      00000000 
 1448      00000000 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 43


 1448      00000000 
 1449              		.section	.bss.defaultTask,"aw",%nobits
 1450              		.align	2
 1451              		.set	.LANCHOR7,. + 0
 1454              	defaultTask:
 1455 0000 00000000 		.space	4
 1456              		.section	.bss.hi2c1,"aw",%nobits
 1457              		.align	2
 1458              		.set	.LANCHOR6,. + 0
 1461              	hi2c1:
 1462 0000 00000000 		.space	84
 1462      00000000 
 1462      00000000 
 1462      00000000 
 1462      00000000 
 1463              		.section	.bss.hspi1,"aw",%nobits
 1464              		.align	2
 1467              	hspi1:
 1468 0000 00000000 		.space	88
 1468      00000000 
 1468      00000000 
 1468      00000000 
 1468      00000000 
 1469              		.section	.bss.huart2,"aw",%nobits
 1470              		.align	2
 1471              		.set	.LANCHOR5,. + 0
 1474              	huart2:
 1475 0000 00000000 		.space	68
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1475      00000000 
 1476              		.section	.bss.xSemaphoreBtn,"aw",%nobits
 1477              		.align	2
 1478              		.set	.LANCHOR3,. + 0
 1481              	xSemaphoreBtn:
 1482 0000 00000000 		.space	4
 1483              		.section	.bss.xSemaphoreMode,"aw",%nobits
 1484              		.align	2
 1485              		.set	.LANCHOR1,. + 0
 1488              	xSemaphoreMode:
 1489 0000 00000000 		.space	4
 1490              		.section	.bss.xSemaphoreUART,"aw",%nobits
 1491              		.align	2
 1492              		.set	.LANCHOR4,. + 0
 1495              	xSemaphoreUART:
 1496 0000 00000000 		.space	4
 1497              		.section	.bss.xSemaphoreUSB,"aw",%nobits
 1498              		.align	2
 1499              		.set	.LANCHOR0,. + 0
 1502              	xSemaphoreUSB:
 1503 0000 00000000 		.space	4
 1504              		.text
 1505              	.Letext0:
 1506              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1507              		.file 4 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1508              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 44


 1509              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1510              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1511              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1512              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1513              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1514              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1515              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1516              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1517              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1518              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1519              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1520              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1521              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1522              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1523              		.file 20 "Lib/Inc/TaskCNC.h"
 1524              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1525              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1526              		.file 23 "USB_DEVICE/App/usb_device.h"
 1527              		.file 24 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:227    .text.MX_GPIO_Init:000000fc $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:235    .text.StartReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:241    .text.StartReceiveDataFromGUI:00000000 StartReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:278    .text.StartReceiveDataFromGUI:00000020 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:285    .text.StartCheckUSBConnect:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:291    .text.StartCheckUSBConnect:00000000 StartCheckUSBConnect
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:375    .text.StartCheckUSBConnect:00000064 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:383    .text.StartProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:389    .text.StartProcessBtnPress:00000000 StartProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:424    .text.StartProcessBtnPress:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:430    .text.StartProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:436    .text.StartProcessMode:00000000 StartProcessMode
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:471    .text.StartProcessMode:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:477    .text.StartReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:483    .text.StartReceiveDataFromCNC:00000000 StartReceiveDataFromCNC
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:518    .text.StartReceiveDataFromCNC:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:524    .text.DefaultTask:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:530    .text.DefaultTask:00000000 DefaultTask
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:557    .text.uart_clear_receive_buffer_and_start_receive_IT:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:563    .text.uart_clear_receive_buffer_and_start_receive_IT:00000000 uart_clear_receive_buffer_and_start_receive_IT
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:608    .text.uart_clear_receive_buffer_and_start_receive_IT:00000028 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:614    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:620    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:707    .text.HAL_GPIO_EXTI_Callback:0000004c $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:713    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:719    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:811    .text.HAL_UART_RxCpltCallback:00000050 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:820    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:826    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:860    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:865    .text.Error_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:871    .text.Error_Handler:00000000 Error_Handler
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:903    .text.MX_I2C1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:908    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:966    .text.MX_I2C1_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:973    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:978    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1033   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1039   .text.SystemClock_Config:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1045   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1175   .rodata.main.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1194   .text.main:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1200   .text.main:00000000 main
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1365   .text.main:000000e8 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1447   .bss.cnc:00000000 cnc
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1433   .bss.ReceiveDataFromCNCTask:00000000 ReceiveDataFromCNCTask
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1495   .bss.xSemaphoreUART:00000000 xSemaphoreUART
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1426   .bss.ProcessModeTask:00000000 ProcessModeTask
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1488   .bss.xSemaphoreMode:00000000 xSemaphoreMode
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1419   .bss.ProcessBtnPressTask:00000000 ProcessBtnPressTask
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1481   .bss.xSemaphoreBtn:00000000 xSemaphoreBtn
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1412   .bss.CheckUSBConnectTask:00000000 CheckUSBConnectTask
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1440   .bss.ReceiveDataFromGUITask:00000000 ReceiveDataFromGUITask
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s 			page 46


C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1502   .bss.xSemaphoreUSB:00000000 xSemaphoreUSB
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1454   .bss.defaultTask:00000000 defaultTask
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1474   .bss.huart2:00000000 huart2
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1467   .bss.hspi1:00000000 hspi1
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1461   .bss.hi2c1:00000000 hi2c1
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1408   .bss.CheckUSBConnectTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1415   .bss.ProcessBtnPressTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1422   .bss.ProcessModeTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1429   .bss.ReceiveDataFromCNCTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1436   .bss.ReceiveDataFromGUITask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1443   .bss.cnc:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1450   .bss.defaultTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1457   .bss.hi2c1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1464   .bss.hspi1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1470   .bss.huart2:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1477   .bss.xSemaphoreBtn:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1484   .bss.xSemaphoreMode:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1491   .bss.xSemaphoreUART:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccW1NpSa.s:1498   .bss.xSemaphoreUSB:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
xQueueSemaphoreTake
ReceiveDataFromGUI
HAL_GPIO_TogglePin
osDelay
HAL_UART_AbortReceive_IT
hUsbDeviceFS
ProcessBtnPress
ProcessMode
ReceiveDataFromCNC
vTaskDelay
HAL_UART_Receive_IT
xQueueGiveFromISR
HAL_IncTick
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
InitCNC
xQueueGenericCreate
xTaskCreate
vTaskStartScheduler
