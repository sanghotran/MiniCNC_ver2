ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.align	2
  19              	.LC2:
  20 000c 52656365 		.ascii	"ReceiveDataFromGUITask\000"
  20      69766544 
  20      61746146 
  20      726F6D47 
  20      55495461 
  21 0023 00       		.align	2
  22              	.LC4:
  23 0024 43686563 		.ascii	"CheckUSBConnectTask\000"
  23      6B555342 
  23      436F6E6E 
  23      65637454 
  23      61736B00 
  24              		.align	2
  25              	.LC6:
  26 0038 50726F63 		.ascii	"ProcessBtnPressTask\000"
  26      65737342 
  26      746E5072 
  26      65737354 
  26      61736B00 
  27              		.align	2
  28              	.LC8:
  29 004c 50726F63 		.ascii	"ProcessModeTask\000"
  29      6573734D 
  29      6F646554 
  29      61736B00 
  30              		.text
  31              	.Ltext0:
  32              		.cfi_sections	.debug_frame
  33              		.section	.text.MX_GPIO_Init,"ax",%progbits
  34              		.align	1
  35              		.syntax unified
  36              		.thumb
  37              		.thumb_func
  39              	MX_GPIO_Init:
  40              	.LFB80:
  41              		.file 1 "Core/Src/main.c"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 2


   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "fatfs.h"
  23:Core/Src/main.c **** #include "usb_device.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "TaskCNC.h"
  28:Core/Src/main.c **** #include "fatfs_sd.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** osThreadId defaultTaskHandle;
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** osSemaphoreId xSemaphoreUSB;
  57:Core/Src/main.c **** osThreadId ReceiveDataFromGUITaksHandle;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 3


  58:Core/Src/main.c **** osThreadId CheckUSBConnectTaskHandle;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** osSemaphoreId xSemaphoreBtn;
  61:Core/Src/main.c **** osThreadId ProcessBtnPressTaskHandle;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** osSemaphoreId xSemaphoreMode;
  64:Core/Src/main.c **** osThreadId ProcessModeTaskHandle;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** CNC cnc;
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** static void MX_I2C1_Init(void);
  73:Core/Src/main.c **** static void MX_SPI1_Init(void);
  74:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  75:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  78:Core/Src/main.c **** void StartReceiveDataFromGUI(void const *argument);
  79:Core/Src/main.c **** void StartCheckUSBConnect(void const *argument);
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** void StartProcessBtnPress(void const *argument);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** void StartProcessMode(void const *argument);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** void StartProcessSD(void const *argument);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PFP */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  90:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  91:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  92:Core/Src/main.c **** {
  93:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
  94:Core/Src/main.c ****   UNUSED(GPIO_Pin);
  95:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
  96:Core/Src/main.c ****   {
  97:Core/Src/main.c ****     cnc.btnPress = 1;
  98:Core/Src/main.c ****   }
  99:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnExit)
 100:Core/Src/main.c ****   {
 101:Core/Src/main.c ****     cnc.btnPress = 2;
 102:Core/Src/main.c ****   }
 103:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnUp)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     cnc.btnPress = 3;
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnDown)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     cnc.btnPress = 4;
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 112:Core/Src/main.c ****   osSemaphoreRelease(xSemaphoreBtn);
 113:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 114:Core/Src/main.c **** }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 4


 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 117:Core/Src/main.c **** {
 118:Core/Src/main.c ****   UNUSED(huart);
 119:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 120:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 121:Core/Src/main.c **** 		{
 122:Core/Src/main.c **** 			cnc.uart.ReceiveFromControl[cnc.uart.index++] = cnc.uart.Receive; //Save data in Rxbuff
 123:Core/Src/main.c **** 		}
 124:Core/Src/main.c **** 		else if (cnc.uart.Receive == '.')
 125:Core/Src/main.c **** 		{
 126:Core/Src/main.c **** 			cnc.uart.index = 0;
 127:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);	
 128:Core/Src/main.c **** 		}	
 129:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 130:Core/Src/main.c ****     BaseType_t xHigherPriorityTaskWoken = pdFALSE;  
 131:Core/Src/main.c ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 132:Core/Src/main.c **** 	}
 133:Core/Src/main.c **** }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /* USER CODE END 0 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief  The application entry point.
 139:Core/Src/main.c ****   * @retval int
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** int main(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   /* USER CODE END 1 */
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 150:Core/Src/main.c ****   HAL_Init();
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END Init */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* Configure the system clock */
 157:Core/Src/main.c ****   SystemClock_Config();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE END SysInit */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* Initialize all configured peripherals */
 164:Core/Src/main.c ****   MX_GPIO_Init();
 165:Core/Src/main.c ****   MX_I2C1_Init();
 166:Core/Src/main.c ****   MX_SPI1_Init();
 167:Core/Src/main.c ****   MX_USART2_UART_Init();
 168:Core/Src/main.c ****   MX_FATFS_Init();
 169:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 170:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 171:Core/Src/main.c ****   InitCNC(&cnc);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 5


 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   cnc.uart.huart = &huart2;
 174:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END 2 */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 181:Core/Src/main.c ****   /* add mutexes, ... */
 182:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 185:Core/Src/main.c ****   /* add semaphores, ... */
 186:Core/Src/main.c ****   osSemaphoreDef(semaphore);
 187:Core/Src/main.c ****   xSemaphoreUSB = osSemaphoreCreate(osSemaphore(semaphore), 1); // giá trị ban đầu của sema
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   xSemaphoreBtn = osSemaphoreCreate(osSemaphore(semaphore), 1);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   xSemaphoreMode = osSemaphoreCreate(osSemaphore(semaphore), 1);
 192:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 195:Core/Src/main.c ****   /* start timers, add new ones, ... */
 196:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 199:Core/Src/main.c ****   /* add queues, ... */
 200:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* Create the thread(s) */
 203:Core/Src/main.c ****   /* definition and creation of defaultTask */
 204:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 205:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 208:Core/Src/main.c ****   /* add threads, ... */
 209:Core/Src/main.c ****   osThreadDef(ReceiveDataFromGUITask, StartReceiveDataFromGUI, osPriorityAboveNormal, 0, 128);
 210:Core/Src/main.c ****   ReceiveDataFromGUITaksHandle = osThreadCreate(osThread(ReceiveDataFromGUITask), NULL);
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   osThreadDef(CheckUSBConnectTask, StartCheckUSBConnect, osPriorityAboveNormal, 0, 128);
 213:Core/Src/main.c ****   CheckUSBConnectTaskHandle = osThreadCreate(osThread(CheckUSBConnectTask), NULL);
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   osThreadDef(ProcessBtnPressTask, StartProcessBtnPress, osPriorityAboveNormal, 0, 128);
 217:Core/Src/main.c ****   ProcessBtnPressTaskHandle = osThreadCreate(osThread(ProcessBtnPressTask), NULL);
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   osThreadDef(ProcessModeTask, StartProcessMode, osPriorityAboveNormal, 0 , 128);
 220:Core/Src/main.c ****   ProcessModeTaskHandle = osThreadCreate(osThread(ProcessModeTask), NULL);
 221:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* Start scheduler */
 224:Core/Src/main.c ****   osKernelStart();
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 227:Core/Src/main.c ****   /* Infinite loop */
 228:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 6


 229:Core/Src/main.c ****   while (1)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     /* USER CODE END WHILE */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c ****   /* USER CODE END 3 */
 236:Core/Src/main.c **** }
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /**
 239:Core/Src/main.c ****   * @brief System Clock Configuration
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** void SystemClock_Config(void)
 243:Core/Src/main.c **** {
 244:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 245:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 246:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 249:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 252:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 253:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 254:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 258:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 265:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 266:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 267:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 268:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 269:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 272:Core/Src/main.c ****   {
 273:Core/Src/main.c ****     Error_Handler();
 274:Core/Src/main.c ****   }
 275:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 276:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 277:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     Error_Handler();
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /**
 284:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 285:Core/Src/main.c ****   * @param None
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 7


 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** static void MX_I2C1_Init(void)
 289:Core/Src/main.c **** {
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 298:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 299:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 300:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 301:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 302:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 303:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 304:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 305:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 306:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 307:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 308:Core/Src/main.c ****   {
 309:Core/Src/main.c ****     Error_Handler();
 310:Core/Src/main.c ****   }
 311:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 312:Core/Src/main.c **** 
 313:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /**
 318:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 319:Core/Src/main.c ****   * @param None
 320:Core/Src/main.c ****   * @retval None
 321:Core/Src/main.c ****   */
 322:Core/Src/main.c **** static void MX_SPI1_Init(void)
 323:Core/Src/main.c **** {
 324:Core/Src/main.c **** 
 325:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 332:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 333:Core/Src/main.c ****   hspi1.Instance = SPI1;
 334:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 335:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 336:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 337:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 338:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 339:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 340:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 341:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 342:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 8


 343:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 344:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 345:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 346:Core/Src/main.c ****   {
 347:Core/Src/main.c ****     Error_Handler();
 348:Core/Src/main.c ****   }
 349:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** }
 354:Core/Src/main.c **** 
 355:Core/Src/main.c **** /**
 356:Core/Src/main.c ****   * @brief USART2 Initialization Function
 357:Core/Src/main.c ****   * @param None
 358:Core/Src/main.c ****   * @retval None
 359:Core/Src/main.c ****   */
 360:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 361:Core/Src/main.c **** {
 362:Core/Src/main.c **** 
 363:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 364:Core/Src/main.c **** 
 365:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 370:Core/Src/main.c ****   huart2.Instance = USART2;
 371:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 372:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 373:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 374:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 375:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 376:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 377:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 378:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     Error_Handler();
 381:Core/Src/main.c ****   }
 382:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 385:Core/Src/main.c **** 
 386:Core/Src/main.c **** }
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** /**
 389:Core/Src/main.c ****   * @brief GPIO Initialization Function
 390:Core/Src/main.c ****   * @param None
 391:Core/Src/main.c ****   * @retval None
 392:Core/Src/main.c ****   */
 393:Core/Src/main.c **** static void MX_GPIO_Init(void)
 394:Core/Src/main.c **** {
  42              		.loc 1 394 1 view -0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 32
  45              		@ frame_needed = 0, uses_anonymous_args = 0
  46 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 9


  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 24
  49              		.cfi_offset 4, -24
  50              		.cfi_offset 5, -20
  51              		.cfi_offset 6, -16
  52              		.cfi_offset 7, -12
  53              		.cfi_offset 8, -8
  54              		.cfi_offset 14, -4
  55 0004 88B0     		sub	sp, sp, #32
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 56
 395:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  58              		.loc 1 395 3 view .LVU1
  59              		.loc 1 395 20 is_stmt 0 view .LVU2
  60 0006 0024     		movs	r4, #0
  61 0008 0494     		str	r4, [sp, #16]
  62 000a 0594     		str	r4, [sp, #20]
  63 000c 0694     		str	r4, [sp, #24]
  64 000e 0794     		str	r4, [sp, #28]
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 398:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  65              		.loc 1 398 3 is_stmt 1 view .LVU3
  66              	.LBB4:
  67              		.loc 1 398 3 view .LVU4
  68              		.loc 1 398 3 view .LVU5
  69 0010 3A4B     		ldr	r3, .L3
  70 0012 9A69     		ldr	r2, [r3, #24]
  71 0014 42F02002 		orr	r2, r2, #32
  72 0018 9A61     		str	r2, [r3, #24]
  73              		.loc 1 398 3 view .LVU6
  74 001a 9A69     		ldr	r2, [r3, #24]
  75 001c 02F02002 		and	r2, r2, #32
  76 0020 0192     		str	r2, [sp, #4]
  77              		.loc 1 398 3 view .LVU7
  78 0022 019A     		ldr	r2, [sp, #4]
  79              	.LBE4:
  80              		.loc 1 398 3 view .LVU8
 399:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 399 3 view .LVU9
  82              	.LBB5:
  83              		.loc 1 399 3 view .LVU10
  84              		.loc 1 399 3 view .LVU11
  85 0024 9A69     		ldr	r2, [r3, #24]
  86 0026 42F00402 		orr	r2, r2, #4
  87 002a 9A61     		str	r2, [r3, #24]
  88              		.loc 1 399 3 view .LVU12
  89 002c 9A69     		ldr	r2, [r3, #24]
  90 002e 02F00402 		and	r2, r2, #4
  91 0032 0292     		str	r2, [sp, #8]
  92              		.loc 1 399 3 view .LVU13
  93 0034 029A     		ldr	r2, [sp, #8]
  94              	.LBE5:
  95              		.loc 1 399 3 view .LVU14
 400:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 400 3 view .LVU15
  97              	.LBB6:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 10


  98              		.loc 1 400 3 view .LVU16
  99              		.loc 1 400 3 view .LVU17
 100 0036 9A69     		ldr	r2, [r3, #24]
 101 0038 42F00802 		orr	r2, r2, #8
 102 003c 9A61     		str	r2, [r3, #24]
 103              		.loc 1 400 3 view .LVU18
 104 003e 9B69     		ldr	r3, [r3, #24]
 105 0040 03F00803 		and	r3, r3, #8
 106 0044 0393     		str	r3, [sp, #12]
 107              		.loc 1 400 3 view .LVU19
 108 0046 039B     		ldr	r3, [sp, #12]
 109              	.LBE6:
 110              		.loc 1 400 3 view .LVU20
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 403:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
 111              		.loc 1 403 3 view .LVU21
 112 0048 2D4E     		ldr	r6, .L3+4
 113 004a 2246     		mov	r2, r4
 114 004c 1021     		movs	r1, #16
 115 004e 3046     		mov	r0, r6
 116 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL0:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 406:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 118              		.loc 1 406 3 view .LVU22
 119 0054 2B4D     		ldr	r5, .L3+8
 120 0056 2246     		mov	r2, r4
 121 0058 0321     		movs	r1, #3
 122 005a 2846     		mov	r0, r5
 123 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 124              	.LVL1:
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 409:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 125              		.loc 1 409 3 view .LVU23
 126              		.loc 1 409 23 is_stmt 0 view .LVU24
 127 0060 1023     		movs	r3, #16
 128 0062 0493     		str	r3, [sp, #16]
 410:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 129              		.loc 1 410 3 is_stmt 1 view .LVU25
 130              		.loc 1 410 24 is_stmt 0 view .LVU26
 131 0064 4FF00108 		mov	r8, #1
 132 0068 CDF81480 		str	r8, [sp, #20]
 411:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 411 3 is_stmt 1 view .LVU27
 134              		.loc 1 411 24 is_stmt 0 view .LVU28
 135 006c 0694     		str	r4, [sp, #24]
 412:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136              		.loc 1 412 3 is_stmt 1 view .LVU29
 137              		.loc 1 412 25 is_stmt 0 view .LVU30
 138 006e 0227     		movs	r7, #2
 139 0070 0797     		str	r7, [sp, #28]
 413:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 140              		.loc 1 413 3 is_stmt 1 view .LVU31
 141 0072 0DEB0301 		add	r1, sp, r3
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 11


 142 0076 3046     		mov	r0, r6
 143 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL2:
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 416:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 145              		.loc 1 416 3 view .LVU32
 146              		.loc 1 416 23 is_stmt 0 view .LVU33
 147 007c 0323     		movs	r3, #3
 148 007e 0493     		str	r3, [sp, #16]
 417:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 149              		.loc 1 417 3 is_stmt 1 view .LVU34
 150              		.loc 1 417 24 is_stmt 0 view .LVU35
 151 0080 CDF81480 		str	r8, [sp, #20]
 418:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 418 3 is_stmt 1 view .LVU36
 153              		.loc 1 418 24 is_stmt 0 view .LVU37
 154 0084 0694     		str	r4, [sp, #24]
 419:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 155              		.loc 1 419 3 is_stmt 1 view .LVU38
 156              		.loc 1 419 25 is_stmt 0 view .LVU39
 157 0086 0797     		str	r7, [sp, #28]
 420:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 158              		.loc 1 420 3 is_stmt 1 view .LVU40
 159 0088 04A9     		add	r1, sp, #16
 160 008a 2846     		mov	r0, r5
 161 008c FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL3:
 421:Core/Src/main.c **** 
 422:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 423:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 163              		.loc 1 423 3 view .LVU41
 164              		.loc 1 423 23 is_stmt 0 view .LVU42
 165 0090 4FF40043 		mov	r3, #32768
 166 0094 0493     		str	r3, [sp, #16]
 424:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 167              		.loc 1 424 3 is_stmt 1 view .LVU43
 168              		.loc 1 424 24 is_stmt 0 view .LVU44
 169 0096 1C4F     		ldr	r7, .L3+12
 170 0098 0597     		str	r7, [sp, #20]
 425:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 1 425 3 is_stmt 1 view .LVU45
 172              		.loc 1 425 24 is_stmt 0 view .LVU46
 173 009a 0694     		str	r4, [sp, #24]
 426:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 174              		.loc 1 426 3 is_stmt 1 view .LVU47
 175 009c 04A9     		add	r1, sp, #16
 176 009e 3046     		mov	r0, r6
 177 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 178              	.LVL4:
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 PB5 */
 429:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 179              		.loc 1 429 3 view .LVU48
 180              		.loc 1 429 23 is_stmt 0 view .LVU49
 181 00a4 3823     		movs	r3, #56
 182 00a6 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 12


 430:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 183              		.loc 1 430 3 is_stmt 1 view .LVU50
 184              		.loc 1 430 24 is_stmt 0 view .LVU51
 185 00a8 0597     		str	r7, [sp, #20]
 431:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 431 3 is_stmt 1 view .LVU52
 187              		.loc 1 431 24 is_stmt 0 view .LVU53
 188 00aa 0694     		str	r4, [sp, #24]
 432:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 189              		.loc 1 432 3 is_stmt 1 view .LVU54
 190 00ac 04A9     		add	r1, sp, #16
 191 00ae 2846     		mov	r0, r5
 192 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL5:
 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /* EXTI interrupt init*/
 435:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 194              		.loc 1 435 3 view .LVU55
 195 00b4 2246     		mov	r2, r4
 196 00b6 0521     		movs	r1, #5
 197 00b8 0920     		movs	r0, #9
 198 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 199              	.LVL6:
 436:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 200              		.loc 1 436 3 view .LVU56
 201 00be 0920     		movs	r0, #9
 202 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 203              	.LVL7:
 437:Core/Src/main.c **** 
 438:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 204              		.loc 1 438 3 view .LVU57
 205 00c4 2246     		mov	r2, r4
 206 00c6 0521     		movs	r1, #5
 207 00c8 0A20     		movs	r0, #10
 208 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 209              	.LVL8:
 439:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 210              		.loc 1 439 3 view .LVU58
 211 00ce 0A20     		movs	r0, #10
 212 00d0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 213              	.LVL9:
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 214              		.loc 1 441 3 view .LVU59
 215 00d4 2246     		mov	r2, r4
 216 00d6 0521     		movs	r1, #5
 217 00d8 1720     		movs	r0, #23
 218 00da FFF7FEFF 		bl	HAL_NVIC_SetPriority
 219              	.LVL10:
 442:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 220              		.loc 1 442 3 view .LVU60
 221 00de 1720     		movs	r0, #23
 222 00e0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 223              	.LVL11:
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 224              		.loc 1 444 3 view .LVU61
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 13


 225 00e4 2246     		mov	r2, r4
 226 00e6 0521     		movs	r1, #5
 227 00e8 2820     		movs	r0, #40
 228 00ea FFF7FEFF 		bl	HAL_NVIC_SetPriority
 229              	.LVL12:
 445:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 230              		.loc 1 445 3 view .LVU62
 231 00ee 2820     		movs	r0, #40
 232 00f0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 233              	.LVL13:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** }
 234              		.loc 1 447 1 is_stmt 0 view .LVU63
 235 00f4 08B0     		add	sp, sp, #32
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 24
 238              		@ sp needed
 239 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 240              	.L4:
 241 00fa 00BF     		.align	2
 242              	.L3:
 243 00fc 00100240 		.word	1073876992
 244 0100 00080140 		.word	1073809408
 245 0104 000C0140 		.word	1073810432
 246 0108 00001110 		.word	269549568
 247              		.cfi_endproc
 248              	.LFE80:
 250              		.section	.text.StartReceiveDataFromGUI,"ax",%progbits
 251              		.align	1
 252              		.global	StartReceiveDataFromGUI
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	StartReceiveDataFromGUI:
 258              	.LVL14:
 259              	.LFB81:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 450:Core/Src/main.c **** 
 451:Core/Src/main.c **** void StartReceiveDataFromGUI(void const *argument)
 452:Core/Src/main.c **** {
 260              		.loc 1 452 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 452 1 is_stmt 0 view .LVU65
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI3:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 453:Core/Src/main.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
 454:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreUSB, osWaitForever) == osOK)
 270              		.loc 1 454 3 is_stmt 1 view .LVU66
 271              		.loc 1 454 6 is_stmt 0 view .LVU67
 272 0002 4FF0FF31 		mov	r1, #-1
 273 0006 0A4B     		ldr	r3, .L10
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 14


 274 0008 1868     		ldr	r0, [r3]
 275              	.LVL15:
 276              		.loc 1 454 6 view .LVU68
 277 000a FFF7FEFF 		bl	osSemaphoreWait
 278              	.LVL16:
 279              		.loc 1 454 5 view .LVU69
 280 000e 68B9     		cbnz	r0, .L5
 281              	.L7:
 455:Core/Src/main.c ****   {
 456:Core/Src/main.c ****     for(;;)
 282              		.loc 1 456 5 is_stmt 1 view .LVU70
 457:Core/Src/main.c ****     {
 458:Core/Src/main.c ****       if(osSemaphoreWait(xSemaphoreUSB, osWaitForever) == osOK)
 283              		.loc 1 458 7 view .LVU71
 284              		.loc 1 458 10 is_stmt 0 view .LVU72
 285 0010 4FF0FF31 		mov	r1, #-1
 286 0014 064B     		ldr	r3, .L10
 287 0016 1868     		ldr	r0, [r3]
 288 0018 FFF7FEFF 		bl	osSemaphoreWait
 289              	.LVL17:
 290              		.loc 1 458 9 view .LVU73
 291 001c 0028     		cmp	r0, #0
 292 001e F7D1     		bne	.L7
 459:Core/Src/main.c ****       {
 460:Core/Src/main.c ****         ReceiveDataFromGUI(&cnc, xSemaphoreMode); 
 293              		.loc 1 460 9 is_stmt 1 view .LVU74
 294 0020 044B     		ldr	r3, .L10+4
 295 0022 1968     		ldr	r1, [r3]
 296 0024 0448     		ldr	r0, .L10+8
 297 0026 FFF7FEFF 		bl	ReceiveDataFromGUI
 298              	.LVL18:
 299 002a F1E7     		b	.L7
 300              	.L5:
 461:Core/Src/main.c ****       }
 462:Core/Src/main.c ****     }
 463:Core/Src/main.c ****   }
 464:Core/Src/main.c **** }
 301              		.loc 1 464 1 is_stmt 0 view .LVU75
 302 002c 08BD     		pop	{r3, pc}
 303              	.L11:
 304 002e 00BF     		.align	2
 305              	.L10:
 306 0030 00000000 		.word	.LANCHOR0
 307 0034 00000000 		.word	.LANCHOR1
 308 0038 00000000 		.word	.LANCHOR2
 309              		.cfi_endproc
 310              	.LFE81:
 312              		.section	.text.StartCheckUSBConnect,"ax",%progbits
 313              		.align	1
 314              		.global	StartCheckUSBConnect
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	StartCheckUSBConnect:
 320              	.LFB82:
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** void StartCheckUSBConnect(void const *argument)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 15


 467:Core/Src/main.c **** {
 321              		.loc 1 467 1 is_stmt 1 view -0
 322              		.cfi_startproc
 323              		@ Volatile: function does not return.
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              	.LVL19:
 327              		.loc 1 467 1 is_stmt 0 view .LVU77
 328 0000 08B5     		push	{r3, lr}
 329              	.LCFI4:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
 332              		.cfi_offset 14, -4
 333              	.LVL20:
 334              	.L13:
 468:Core/Src/main.c ****   for(;;)
 335              		.loc 1 468 3 is_stmt 1 view .LVU78
 469:Core/Src/main.c ****     {
 470:Core/Src/main.c ****       osDelay(1000);
 336              		.loc 1 470 7 view .LVU79
 337 0002 4FF47A70 		mov	r0, #1000
 338 0006 FFF7FEFF 		bl	osDelay
 339              	.LVL21:
 471:Core/Src/main.c ****       if(cnc.state == 1) 
 340              		.loc 1 471 7 view .LVU80
 341              		.loc 1 471 13 is_stmt 0 view .LVU81
 342 000a 0D4B     		ldr	r3, .L16
 343 000c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 344              		.loc 1 471 9 view .LVU82
 345 0010 012B     		cmp	r3, #1
 346 0012 F6D1     		bne	.L13
 472:Core/Src/main.c ****       {
 473:Core/Src/main.c ****         if(!(hUsbDeviceFS.dev_state == USBD_STATE_CONFIGURED))
 347              		.loc 1 473 9 is_stmt 1 view .LVU83
 348              		.loc 1 473 26 is_stmt 0 view .LVU84
 349 0014 0B4B     		ldr	r3, .L16+4
 350 0016 93F89C32 		ldrb	r3, [r3, #668]	@ zero_extendqisi2
 351              		.loc 1 473 11 view .LVU85
 352 001a 032B     		cmp	r3, #3
 353 001c F1D0     		beq	.L13
 474:Core/Src/main.c ****         {
 475:Core/Src/main.c ****           // alarm when error connect 
 476:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Led, GPIO_PIN_RESET);
 354              		.loc 1 476 11 is_stmt 1 view .LVU86
 355 001e 084C     		ldr	r4, .L16
 356 0020 094D     		ldr	r5, .L16+8
 357 0022 0022     		movs	r2, #0
 358 0024 6189     		ldrh	r1, [r4, #10]
 359 0026 2846     		mov	r0, r5
 360 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 361              	.LVL22:
 477:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Buzzer, GPIO_PIN_SET);
 362              		.loc 1 477 11 view .LVU87
 363 002c 0122     		movs	r2, #1
 364 002e A189     		ldrh	r1, [r4, #12]
 365 0030 2846     		mov	r0, r5
 366 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 16


 367              	.LVL23:
 478:Core/Src/main.c ****           cnc.state = 2; // mode error connect with GUI
 368              		.loc 1 478 11 view .LVU88
 369              		.loc 1 478 21 is_stmt 0 view .LVU89
 370 0036 0223     		movs	r3, #2
 371 0038 84F86830 		strb	r3, [r4, #104]
 372 003c E1E7     		b	.L13
 373              	.L17:
 374 003e 00BF     		.align	2
 375              	.L16:
 376 0040 00000000 		.word	.LANCHOR2
 377 0044 00000000 		.word	hUsbDeviceFS
 378 0048 000C0140 		.word	1073810432
 379              		.cfi_endproc
 380              	.LFE82:
 382              		.section	.text.StartDefaultTask,"ax",%progbits
 383              		.align	1
 384              		.global	StartDefaultTask
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 389              	StartDefaultTask:
 390              	.LFB86:
 479:Core/Src/main.c ****         }    
 480:Core/Src/main.c ****       }      
 481:Core/Src/main.c ****     } 
 482:Core/Src/main.c **** }
 483:Core/Src/main.c **** 
 484:Core/Src/main.c **** void StartProcessBtnPress(void const *argument)
 485:Core/Src/main.c **** {
 486:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreBtn, osWaitForever) == osOK)
 487:Core/Src/main.c ****   {
 488:Core/Src/main.c ****     for(;;)
 489:Core/Src/main.c ****     {
 490:Core/Src/main.c ****       if(osSemaphoreWait(xSemaphoreBtn, osWaitForever) == osOK)
 491:Core/Src/main.c ****       {
 492:Core/Src/main.c ****         ProcessBtnPress(&cnc);
 493:Core/Src/main.c ****       }
 494:Core/Src/main.c ****     }
 495:Core/Src/main.c ****   }
 496:Core/Src/main.c **** }
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** void StartProcessMode(void const *argument)
 499:Core/Src/main.c **** {
 500:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreMode, osWaitForever) == osOK)
 501:Core/Src/main.c ****   {
 502:Core/Src/main.c ****     for(;;)
 503:Core/Src/main.c ****     {
 504:Core/Src/main.c ****       if(osSemaphoreWait(xSemaphoreMode, osWaitForever) == osOK)
 505:Core/Src/main.c ****       {
 506:Core/Src/main.c ****         ProcessMode(&cnc);
 507:Core/Src/main.c ****       }
 508:Core/Src/main.c ****     }
 509:Core/Src/main.c ****   }
 510:Core/Src/main.c **** }
 511:Core/Src/main.c **** 
 512:Core/Src/main.c **** //-----------SD config-------------------------
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 17


 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** volatile uint8_t FatFsCnt = 0;
 515:Core/Src/main.c **** volatile uint8_t Timer1, Timer2;
 516:Core/Src/main.c **** 
 517:Core/Src/main.c **** void SDTimer_Handler(void)
 518:Core/Src/main.c **** {
 519:Core/Src/main.c ****   if(Timer1 > 0)
 520:Core/Src/main.c ****     Timer1--;
 521:Core/Src/main.c ****   if(Timer2 > 0);
 522:Core/Src/main.c ****     Timer2--;
 523:Core/Src/main.c **** }
 524:Core/Src/main.c **** 
 525:Core/Src/main.c **** /* USER CODE END 4 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 530:Core/Src/main.c ****   * @param  argument: Not used
 531:Core/Src/main.c ****   * @retval None
 532:Core/Src/main.c ****   */
 533:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 534:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 535:Core/Src/main.c **** {
 391              		.loc 1 535 1 is_stmt 1 view -0
 392              		.cfi_startproc
 393              		@ Volatile: function does not return.
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL24:
 397              		.loc 1 535 1 is_stmt 0 view .LVU91
 398 0000 08B5     		push	{r3, lr}
 399              	.LCFI5:
 400              		.cfi_def_cfa_offset 8
 401              		.cfi_offset 3, -8
 402              		.cfi_offset 14, -4
 403              	.LVL25:
 404              	.L19:
 536:Core/Src/main.c ****   /* init code for USB_DEVICE */
 537:Core/Src/main.c ****   //MX_USB_DEVICE_Init();
 538:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 539:Core/Src/main.c ****   /* Infinite loop */
 540:Core/Src/main.c ****   for(;;)
 405              		.loc 1 540 3 is_stmt 1 discriminator 1 view .LVU92
 541:Core/Src/main.c ****   {
 542:Core/Src/main.c ****     osDelay(1);
 406              		.loc 1 542 5 discriminator 1 view .LVU93
 407 0002 0120     		movs	r0, #1
 408 0004 FFF7FEFF 		bl	osDelay
 409              	.LVL26:
 540:Core/Src/main.c ****   {
 410              		.loc 1 540 8 discriminator 1 view .LVU94
 411 0008 FBE7     		b	.L19
 412              		.cfi_endproc
 413              	.LFE86:
 415              		.section	.text.StartProcessBtnPress,"ax",%progbits
 416              		.align	1
 417              		.global	StartProcessBtnPress
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 18


 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 422              	StartProcessBtnPress:
 423              	.LVL27:
 424              	.LFB83:
 485:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreBtn, osWaitForever) == osOK)
 425              		.loc 1 485 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 485:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreBtn, osWaitForever) == osOK)
 429              		.loc 1 485 1 is_stmt 0 view .LVU96
 430 0000 08B5     		push	{r3, lr}
 431              	.LCFI6:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 3, -8
 434              		.cfi_offset 14, -4
 486:Core/Src/main.c ****   {
 435              		.loc 1 486 3 is_stmt 1 view .LVU97
 486:Core/Src/main.c ****   {
 436              		.loc 1 486 6 is_stmt 0 view .LVU98
 437 0002 4FF0FF31 		mov	r1, #-1
 438 0006 094B     		ldr	r3, .L26
 439 0008 1868     		ldr	r0, [r3]
 440              	.LVL28:
 486:Core/Src/main.c ****   {
 441              		.loc 1 486 6 view .LVU99
 442 000a FFF7FEFF 		bl	osSemaphoreWait
 443              	.LVL29:
 486:Core/Src/main.c ****   {
 444              		.loc 1 486 5 view .LVU100
 445 000e 58B9     		cbnz	r0, .L21
 446              	.L23:
 488:Core/Src/main.c ****     {
 447              		.loc 1 488 5 is_stmt 1 view .LVU101
 490:Core/Src/main.c ****       {
 448              		.loc 1 490 7 view .LVU102
 490:Core/Src/main.c ****       {
 449              		.loc 1 490 10 is_stmt 0 view .LVU103
 450 0010 4FF0FF31 		mov	r1, #-1
 451 0014 054B     		ldr	r3, .L26
 452 0016 1868     		ldr	r0, [r3]
 453 0018 FFF7FEFF 		bl	osSemaphoreWait
 454              	.LVL30:
 490:Core/Src/main.c ****       {
 455              		.loc 1 490 9 view .LVU104
 456 001c 0028     		cmp	r0, #0
 457 001e F7D1     		bne	.L23
 492:Core/Src/main.c ****       }
 458              		.loc 1 492 9 is_stmt 1 view .LVU105
 459 0020 0348     		ldr	r0, .L26+4
 460 0022 FFF7FEFF 		bl	ProcessBtnPress
 461              	.LVL31:
 462 0026 F3E7     		b	.L23
 463              	.L21:
 496:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 19


 464              		.loc 1 496 1 is_stmt 0 view .LVU106
 465 0028 08BD     		pop	{r3, pc}
 466              	.L27:
 467 002a 00BF     		.align	2
 468              	.L26:
 469 002c 00000000 		.word	.LANCHOR3
 470 0030 00000000 		.word	.LANCHOR2
 471              		.cfi_endproc
 472              	.LFE83:
 474              		.section	.text.StartProcessMode,"ax",%progbits
 475              		.align	1
 476              		.global	StartProcessMode
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	StartProcessMode:
 482              	.LVL32:
 483              	.LFB84:
 499:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreMode, osWaitForever) == osOK)
 484              		.loc 1 499 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 499:Core/Src/main.c ****   if(osSemaphoreWait(xSemaphoreMode, osWaitForever) == osOK)
 488              		.loc 1 499 1 is_stmt 0 view .LVU108
 489 0000 08B5     		push	{r3, lr}
 490              	.LCFI7:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 3, -8
 493              		.cfi_offset 14, -4
 500:Core/Src/main.c ****   {
 494              		.loc 1 500 3 is_stmt 1 view .LVU109
 500:Core/Src/main.c ****   {
 495              		.loc 1 500 6 is_stmt 0 view .LVU110
 496 0002 4FF0FF31 		mov	r1, #-1
 497 0006 094B     		ldr	r3, .L33
 498 0008 1868     		ldr	r0, [r3]
 499              	.LVL33:
 500:Core/Src/main.c ****   {
 500              		.loc 1 500 6 view .LVU111
 501 000a FFF7FEFF 		bl	osSemaphoreWait
 502              	.LVL34:
 500:Core/Src/main.c ****   {
 503              		.loc 1 500 5 view .LVU112
 504 000e 58B9     		cbnz	r0, .L28
 505              	.L30:
 502:Core/Src/main.c ****     {
 506              		.loc 1 502 5 is_stmt 1 view .LVU113
 504:Core/Src/main.c ****       {
 507              		.loc 1 504 7 view .LVU114
 504:Core/Src/main.c ****       {
 508              		.loc 1 504 10 is_stmt 0 view .LVU115
 509 0010 4FF0FF31 		mov	r1, #-1
 510 0014 054B     		ldr	r3, .L33
 511 0016 1868     		ldr	r0, [r3]
 512 0018 FFF7FEFF 		bl	osSemaphoreWait
 513              	.LVL35:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 20


 504:Core/Src/main.c ****       {
 514              		.loc 1 504 9 view .LVU116
 515 001c 0028     		cmp	r0, #0
 516 001e F7D1     		bne	.L30
 506:Core/Src/main.c ****       }
 517              		.loc 1 506 9 is_stmt 1 view .LVU117
 518 0020 0348     		ldr	r0, .L33+4
 519 0022 FFF7FEFF 		bl	ProcessMode
 520              	.LVL36:
 521 0026 F3E7     		b	.L30
 522              	.L28:
 510:Core/Src/main.c **** 
 523              		.loc 1 510 1 is_stmt 0 view .LVU118
 524 0028 08BD     		pop	{r3, pc}
 525              	.L34:
 526 002a 00BF     		.align	2
 527              	.L33:
 528 002c 00000000 		.word	.LANCHOR1
 529 0030 00000000 		.word	.LANCHOR2
 530              		.cfi_endproc
 531              	.LFE84:
 533              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 534              		.align	1
 535              		.global	HAL_GPIO_EXTI_Callback
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HAL_GPIO_EXTI_Callback:
 541              	.LVL37:
 542              	.LFB73:
  92:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 543              		.loc 1 92 1 is_stmt 1 view -0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
  92:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 547              		.loc 1 92 1 is_stmt 0 view .LVU120
 548 0000 08B5     		push	{r3, lr}
 549              	.LCFI8:
 550              		.cfi_def_cfa_offset 8
 551              		.cfi_offset 3, -8
 552              		.cfi_offset 14, -4
  94:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 553              		.loc 1 94 3 is_stmt 1 view .LVU121
  95:Core/Src/main.c ****   {
 554              		.loc 1 95 3 view .LVU122
  95:Core/Src/main.c ****   {
 555              		.loc 1 95 21 is_stmt 0 view .LVU123
 556 0002 124B     		ldr	r3, .L44
 557 0004 1B88     		ldrh	r3, [r3]
  95:Core/Src/main.c ****   {
 558              		.loc 1 95 5 view .LVU124
 559 0006 8342     		cmp	r3, r0
 560 0008 0FD0     		beq	.L41
  99:Core/Src/main.c ****   {
 561              		.loc 1 99 8 is_stmt 1 view .LVU125
  99:Core/Src/main.c ****   {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 21


 562              		.loc 1 99 26 is_stmt 0 view .LVU126
 563 000a 104B     		ldr	r3, .L44
 564 000c 5B88     		ldrh	r3, [r3, #2]
  99:Core/Src/main.c ****   {
 565              		.loc 1 99 10 view .LVU127
 566 000e 8342     		cmp	r3, r0
 567 0010 13D0     		beq	.L42
 103:Core/Src/main.c ****   {
 568              		.loc 1 103 8 is_stmt 1 view .LVU128
 103:Core/Src/main.c ****   {
 569              		.loc 1 103 26 is_stmt 0 view .LVU129
 570 0012 0E4B     		ldr	r3, .L44
 571 0014 9B88     		ldrh	r3, [r3, #4]
 103:Core/Src/main.c ****   {
 572              		.loc 1 103 10 view .LVU130
 573 0016 8342     		cmp	r3, r0
 574 0018 13D0     		beq	.L43
 107:Core/Src/main.c ****   {
 575              		.loc 1 107 8 is_stmt 1 view .LVU131
 107:Core/Src/main.c ****   {
 576              		.loc 1 107 26 is_stmt 0 view .LVU132
 577 001a 0C4B     		ldr	r3, .L44
 578 001c DB88     		ldrh	r3, [r3, #6]
 107:Core/Src/main.c ****   {
 579              		.loc 1 107 10 view .LVU133
 580 001e 8342     		cmp	r3, r0
 581 0020 06D1     		bne	.L37
 109:Core/Src/main.c ****   }
 582              		.loc 1 109 5 is_stmt 1 view .LVU134
 109:Core/Src/main.c ****   }
 583              		.loc 1 109 18 is_stmt 0 view .LVU135
 584 0022 0A4B     		ldr	r3, .L44
 585 0024 0422     		movs	r2, #4
 586 0026 1A72     		strb	r2, [r3, #8]
 587 0028 02E0     		b	.L37
 588              	.L41:
  97:Core/Src/main.c ****   }
 589              		.loc 1 97 5 is_stmt 1 view .LVU136
  97:Core/Src/main.c ****   }
 590              		.loc 1 97 18 is_stmt 0 view .LVU137
 591 002a 084B     		ldr	r3, .L44
 592 002c 0122     		movs	r2, #1
 593 002e 1A72     		strb	r2, [r3, #8]
 594              	.L37:
 111:Core/Src/main.c ****   osSemaphoreRelease(xSemaphoreBtn);
 595              		.loc 1 111 3 is_stmt 1 view .LVU138
 596              	.LVL38:
 112:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 597              		.loc 1 112 3 view .LVU139
 598 0030 074B     		ldr	r3, .L44+4
 599 0032 1868     		ldr	r0, [r3]
 600              	.LVL39:
 112:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 601              		.loc 1 112 3 is_stmt 0 view .LVU140
 602 0034 FFF7FEFF 		bl	osSemaphoreRelease
 603              	.LVL40:
 113:Core/Src/main.c **** }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 22


 604              		.loc 1 113 3 is_stmt 1 view .LVU141
 113:Core/Src/main.c **** }
 605              		.loc 1 113 47 view .LVU142
 114:Core/Src/main.c **** 
 606              		.loc 1 114 1 is_stmt 0 view .LVU143
 607 0038 08BD     		pop	{r3, pc}
 608              	.LVL41:
 609              	.L42:
 101:Core/Src/main.c ****   }
 610              		.loc 1 101 5 is_stmt 1 view .LVU144
 101:Core/Src/main.c ****   }
 611              		.loc 1 101 18 is_stmt 0 view .LVU145
 612 003a 044B     		ldr	r3, .L44
 613 003c 0222     		movs	r2, #2
 614 003e 1A72     		strb	r2, [r3, #8]
 615 0040 F6E7     		b	.L37
 616              	.L43:
 105:Core/Src/main.c ****   }
 617              		.loc 1 105 5 is_stmt 1 view .LVU146
 105:Core/Src/main.c ****   }
 618              		.loc 1 105 18 is_stmt 0 view .LVU147
 619 0042 024B     		ldr	r3, .L44
 620 0044 0322     		movs	r2, #3
 621 0046 1A72     		strb	r2, [r3, #8]
 622 0048 F2E7     		b	.L37
 623              	.L45:
 624 004a 00BF     		.align	2
 625              	.L44:
 626 004c 00000000 		.word	.LANCHOR2
 627 0050 00000000 		.word	.LANCHOR3
 628              		.cfi_endproc
 629              	.LFE73:
 631              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_UART_RxCpltCallback
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 638              	HAL_UART_RxCpltCallback:
 639              	.LVL42:
 640              	.LFB74:
 117:Core/Src/main.c ****   UNUSED(huart);
 641              		.loc 1 117 1 is_stmt 1 view -0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 117:Core/Src/main.c ****   UNUSED(huart);
 645              		.loc 1 117 1 is_stmt 0 view .LVU149
 646 0000 08B5     		push	{r3, lr}
 647              	.LCFI9:
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 3, -8
 650              		.cfi_offset 14, -4
 118:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 651              		.loc 1 118 3 is_stmt 1 view .LVU150
 119:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 652              		.loc 1 119 2 view .LVU151
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 23


 119:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 653              		.loc 1 119 10 is_stmt 0 view .LVU152
 654 0002 0268     		ldr	r2, [r0]
 119:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 655              		.loc 1 119 30 view .LVU153
 656 0004 0E4B     		ldr	r3, .L52
 657 0006 1B68     		ldr	r3, [r3]
 119:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 658              		.loc 1 119 4 view .LVU154
 659 0008 9A42     		cmp	r2, r3
 660 000a 00D0     		beq	.L51
 661              	.LVL43:
 662              	.L46:
 133:Core/Src/main.c **** 
 663              		.loc 1 133 1 view .LVU155
 664 000c 08BD     		pop	{r3, pc}
 665              	.LVL44:
 666              	.L51:
 667              	.LBB7:
 120:Core/Src/main.c **** 		{
 668              		.loc 1 120 4 is_stmt 1 view .LVU156
 120:Core/Src/main.c **** 		{
 669              		.loc 1 120 15 is_stmt 0 view .LVU157
 670 000e 0D4B     		ldr	r3, .L52+4
 671 0010 93F87A20 		ldrb	r2, [r3, #122]	@ zero_extendqisi2
 120:Core/Src/main.c **** 		{
 672              		.loc 1 120 6 view .LVU158
 673 0014 2E2A     		cmp	r2, #46
 674 0016 0DD0     		beq	.L48
 122:Core/Src/main.c **** 		}
 675              		.loc 1 122 4 is_stmt 1 view .LVU159
 122:Core/Src/main.c **** 		}
 676              		.loc 1 122 40 is_stmt 0 view .LVU160
 677 0018 93F87B10 		ldrb	r1, [r3, #123]	@ zero_extendqisi2
 122:Core/Src/main.c **** 		}
 678              		.loc 1 122 46 view .LVU161
 679 001c 481C     		adds	r0, r1, #1
 680              	.LVL45:
 122:Core/Src/main.c **** 		}
 681              		.loc 1 122 46 view .LVU162
 682 001e 83F87B00 		strb	r0, [r3, #123]
 122:Core/Src/main.c **** 		}
 683              		.loc 1 122 50 view .LVU163
 684 0022 0B44     		add	r3, r3, r1
 685 0024 83F87C20 		strb	r2, [r3, #124]
 686              	.L49:
 129:Core/Src/main.c ****     BaseType_t xHigherPriorityTaskWoken = pdFALSE;  
 687              		.loc 1 129 3 is_stmt 1 view .LVU164
 688 0028 0122     		movs	r2, #1
 689 002a 0749     		ldr	r1, .L52+8
 690 002c 0448     		ldr	r0, .L52
 691 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 692              	.LVL46:
 130:Core/Src/main.c ****     portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 693              		.loc 1 130 5 view .LVU165
 131:Core/Src/main.c **** 	}
 694              		.loc 1 131 5 view .LVU166
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 24


 131:Core/Src/main.c **** 	}
 695              		.loc 1 131 49 view .LVU167
 696              	.LBE7:
 133:Core/Src/main.c **** 
 697              		.loc 1 133 1 is_stmt 0 view .LVU168
 698 0032 EBE7     		b	.L46
 699              	.LVL47:
 700              	.L48:
 701              	.LBB8:
 124:Core/Src/main.c **** 		{
 702              		.loc 1 124 8 is_stmt 1 view .LVU169
 126:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);	
 703              		.loc 1 126 4 view .LVU170
 126:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);	
 704              		.loc 1 126 19 is_stmt 0 view .LVU171
 705 0034 034B     		ldr	r3, .L52+4
 706 0036 0022     		movs	r2, #0
 707 0038 83F87B20 		strb	r2, [r3, #123]
 708 003c F4E7     		b	.L49
 709              	.L53:
 710 003e 00BF     		.align	2
 711              	.L52:
 712 0040 00000000 		.word	.LANCHOR4
 713 0044 00000000 		.word	.LANCHOR2
 714 0048 7A000000 		.word	.LANCHOR2+122
 715              	.LBE8:
 716              		.cfi_endproc
 717              	.LFE74:
 719              		.section	.text.SDTimer_Handler,"ax",%progbits
 720              		.align	1
 721              		.global	SDTimer_Handler
 722              		.syntax unified
 723              		.thumb
 724              		.thumb_func
 726              	SDTimer_Handler:
 727              	.LFB85:
 518:Core/Src/main.c ****   if(Timer1 > 0)
 728              		.loc 1 518 1 is_stmt 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 519:Core/Src/main.c ****     Timer1--;
 733              		.loc 1 519 3 view .LVU173
 519:Core/Src/main.c ****     Timer1--;
 734              		.loc 1 519 13 is_stmt 0 view .LVU174
 735 0000 074B     		ldr	r3, .L56
 736 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 519:Core/Src/main.c ****     Timer1--;
 737              		.loc 1 519 5 view .LVU175
 738 0004 23B1     		cbz	r3, .L55
 520:Core/Src/main.c ****   if(Timer2 > 0);
 739              		.loc 1 520 5 is_stmt 1 view .LVU176
 520:Core/Src/main.c ****   if(Timer2 > 0);
 740              		.loc 1 520 11 is_stmt 0 view .LVU177
 741 0006 064A     		ldr	r2, .L56
 742 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 25


 743 000a 013B     		subs	r3, r3, #1
 744 000c DBB2     		uxtb	r3, r3
 745 000e 1370     		strb	r3, [r2]
 746              	.L55:
 521:Core/Src/main.c ****     Timer2--;
 747              		.loc 1 521 3 is_stmt 1 view .LVU178
 521:Core/Src/main.c ****     Timer2--;
 748              		.loc 1 521 13 is_stmt 0 view .LVU179
 749 0010 044A     		ldr	r2, .L56+4
 750 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 522:Core/Src/main.c **** }
 751              		.loc 1 522 5 is_stmt 1 view .LVU180
 522:Core/Src/main.c **** }
 752              		.loc 1 522 11 is_stmt 0 view .LVU181
 753 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 754 0016 013B     		subs	r3, r3, #1
 755 0018 DBB2     		uxtb	r3, r3
 756 001a 1370     		strb	r3, [r2]
 523:Core/Src/main.c **** 
 757              		.loc 1 523 1 view .LVU182
 758 001c 7047     		bx	lr
 759              	.L57:
 760 001e 00BF     		.align	2
 761              	.L56:
 762 0020 00000000 		.word	.LANCHOR5
 763 0024 00000000 		.word	.LANCHOR6
 764              		.cfi_endproc
 765              	.LFE85:
 767              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 768              		.align	1
 769              		.global	HAL_TIM_PeriodElapsedCallback
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	HAL_TIM_PeriodElapsedCallback:
 775              	.LVL48:
 776              	.LFB87:
 543:Core/Src/main.c ****   }
 544:Core/Src/main.c ****   /* USER CODE END 5 */
 545:Core/Src/main.c **** }
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** /**
 548:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 549:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 550:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 551:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 552:Core/Src/main.c ****   * @param  htim : TIM handle
 553:Core/Src/main.c ****   * @retval None
 554:Core/Src/main.c ****   */
 555:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 556:Core/Src/main.c **** {
 777              		.loc 1 556 1 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		.loc 1 556 1 is_stmt 0 view .LVU184
 782 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 26


 783              	.LCFI10:
 784              		.cfi_def_cfa_offset 8
 785              		.cfi_offset 4, -8
 786              		.cfi_offset 14, -4
 787 0002 0446     		mov	r4, r0
 557:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 558:Core/Src/main.c **** 
 559:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 560:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 788              		.loc 1 560 3 is_stmt 1 view .LVU185
 789              		.loc 1 560 11 is_stmt 0 view .LVU186
 790 0004 0268     		ldr	r2, [r0]
 791              		.loc 1 560 6 view .LVU187
 792 0006 0E4B     		ldr	r3, .L66
 793 0008 9A42     		cmp	r2, r3
 794 000a 04D0     		beq	.L63
 795              	.LVL49:
 796              	.L59:
 561:Core/Src/main.c ****     HAL_IncTick();
 562:Core/Src/main.c ****   }
 563:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 564:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 797              		.loc 1 564 3 is_stmt 1 view .LVU188
 798              		.loc 1 564 11 is_stmt 0 view .LVU189
 799 000c 2268     		ldr	r2, [r4]
 800              		.loc 1 564 6 view .LVU190
 801 000e 0C4B     		ldr	r3, .L66
 802 0010 9A42     		cmp	r2, r3
 803 0012 03D0     		beq	.L64
 804              	.L58:
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****     FatFsCnt ++;
 567:Core/Src/main.c ****     if(FatFsCnt >= 10)
 568:Core/Src/main.c ****     {
 569:Core/Src/main.c ****       FatFsCnt = 0;
 570:Core/Src/main.c ****       SDTimer_Handler();
 571:Core/Src/main.c ****     }
 572:Core/Src/main.c ****     HAL_IncTick();
 573:Core/Src/main.c ****   }
 574:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 575:Core/Src/main.c **** 
 576:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 577:Core/Src/main.c **** }
 805              		.loc 1 577 1 view .LVU191
 806 0014 10BD     		pop	{r4, pc}
 807              	.LVL50:
 808              	.L63:
 561:Core/Src/main.c ****     HAL_IncTick();
 809              		.loc 1 561 5 is_stmt 1 view .LVU192
 810 0016 FFF7FEFF 		bl	HAL_IncTick
 811              	.LVL51:
 561:Core/Src/main.c ****     HAL_IncTick();
 812              		.loc 1 561 5 is_stmt 0 view .LVU193
 813 001a F7E7     		b	.L59
 814              	.L64:
 566:Core/Src/main.c ****     if(FatFsCnt >= 10)
 815              		.loc 1 566 5 is_stmt 1 view .LVU194
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 27


 566:Core/Src/main.c ****     if(FatFsCnt >= 10)
 816              		.loc 1 566 14 is_stmt 0 view .LVU195
 817 001c 094A     		ldr	r2, .L66+4
 818 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 819 0020 0133     		adds	r3, r3, #1
 820 0022 DBB2     		uxtb	r3, r3
 821 0024 1370     		strb	r3, [r2]
 567:Core/Src/main.c ****     {
 822              		.loc 1 567 5 is_stmt 1 view .LVU196
 567:Core/Src/main.c ****     {
 823              		.loc 1 567 17 is_stmt 0 view .LVU197
 824 0026 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 825 0028 DBB2     		uxtb	r3, r3
 567:Core/Src/main.c ****     {
 826              		.loc 1 567 7 view .LVU198
 827 002a 092B     		cmp	r3, #9
 828 002c 02D8     		bhi	.L65
 829              	.L61:
 572:Core/Src/main.c ****   }
 830              		.loc 1 572 5 is_stmt 1 view .LVU199
 831 002e FFF7FEFF 		bl	HAL_IncTick
 832              	.LVL52:
 833              		.loc 1 577 1 is_stmt 0 view .LVU200
 834 0032 EFE7     		b	.L58
 835              	.L65:
 569:Core/Src/main.c ****       SDTimer_Handler();
 836              		.loc 1 569 7 is_stmt 1 view .LVU201
 569:Core/Src/main.c ****       SDTimer_Handler();
 837              		.loc 1 569 16 is_stmt 0 view .LVU202
 838 0034 1346     		mov	r3, r2
 839 0036 0022     		movs	r2, #0
 840 0038 1A70     		strb	r2, [r3]
 570:Core/Src/main.c ****     }
 841              		.loc 1 570 7 is_stmt 1 view .LVU203
 842 003a FFF7FEFF 		bl	SDTimer_Handler
 843              	.LVL53:
 844 003e F6E7     		b	.L61
 845              	.L67:
 846              		.align	2
 847              	.L66:
 848 0040 002C0140 		.word	1073818624
 849 0044 00000000 		.word	.LANCHOR7
 850              		.cfi_endproc
 851              	.LFE87:
 853              		.section	.text.Error_Handler,"ax",%progbits
 854              		.align	1
 855              		.global	Error_Handler
 856              		.syntax unified
 857              		.thumb
 858              		.thumb_func
 860              	Error_Handler:
 861              	.LFB88:
 578:Core/Src/main.c **** 
 579:Core/Src/main.c **** /**
 580:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 581:Core/Src/main.c ****   * @retval None
 582:Core/Src/main.c ****   */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 28


 583:Core/Src/main.c **** void Error_Handler(void)
 584:Core/Src/main.c **** {
 862              		.loc 1 584 1 view -0
 863              		.cfi_startproc
 864              		@ Volatile: function does not return.
 865              		@ args = 0, pretend = 0, frame = 0
 866              		@ frame_needed = 0, uses_anonymous_args = 0
 867              		@ link register save eliminated.
 585:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 586:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 587:Core/Src/main.c ****   __disable_irq();
 868              		.loc 1 587 3 view .LVU205
 869              	.LBB9:
 870              	.LBI9:
 871              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 29


  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 30


 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 872              		.loc 2 140 27 view .LVU206
 873              	.LBB10:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 874              		.loc 2 142 3 view .LVU207
 875              		.syntax unified
 876              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 877 0000 72B6     		cpsid i
 878              	@ 0 "" 2
 879              		.thumb
 880              		.syntax unified
 881              	.L69:
 882              	.LBE10:
 883              	.LBE9:
 588:Core/Src/main.c ****   while (1)
 884              		.loc 1 588 3 discriminator 1 view .LVU208
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 31


 589:Core/Src/main.c ****   {
 590:Core/Src/main.c ****   }
 885              		.loc 1 590 3 discriminator 1 view .LVU209
 588:Core/Src/main.c ****   while (1)
 886              		.loc 1 588 9 discriminator 1 view .LVU210
 887 0002 FEE7     		b	.L69
 888              		.cfi_endproc
 889              	.LFE88:
 891              		.section	.text.MX_I2C1_Init,"ax",%progbits
 892              		.align	1
 893              		.syntax unified
 894              		.thumb
 895              		.thumb_func
 897              	MX_I2C1_Init:
 898              	.LFB77:
 289:Core/Src/main.c **** 
 899              		.loc 1 289 1 view -0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903 0000 08B5     		push	{r3, lr}
 904              	.LCFI11:
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 3, -8
 907              		.cfi_offset 14, -4
 298:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 908              		.loc 1 298 3 view .LVU212
 298:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 909              		.loc 1 298 18 is_stmt 0 view .LVU213
 910 0002 0A48     		ldr	r0, .L74
 911 0004 0A4B     		ldr	r3, .L74+4
 912 0006 0360     		str	r3, [r0]
 299:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 913              		.loc 1 299 3 is_stmt 1 view .LVU214
 299:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 914              		.loc 1 299 25 is_stmt 0 view .LVU215
 915 0008 0A4B     		ldr	r3, .L74+8
 916 000a 4360     		str	r3, [r0, #4]
 300:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 917              		.loc 1 300 3 is_stmt 1 view .LVU216
 300:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 918              		.loc 1 300 24 is_stmt 0 view .LVU217
 919 000c 0023     		movs	r3, #0
 920 000e 8360     		str	r3, [r0, #8]
 301:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 921              		.loc 1 301 3 is_stmt 1 view .LVU218
 301:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 922              		.loc 1 301 26 is_stmt 0 view .LVU219
 923 0010 C360     		str	r3, [r0, #12]
 302:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 924              		.loc 1 302 3 is_stmt 1 view .LVU220
 302:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 925              		.loc 1 302 29 is_stmt 0 view .LVU221
 926 0012 4FF48042 		mov	r2, #16384
 927 0016 0261     		str	r2, [r0, #16]
 303:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 928              		.loc 1 303 3 is_stmt 1 view .LVU222
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 32


 303:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 929              		.loc 1 303 30 is_stmt 0 view .LVU223
 930 0018 4361     		str	r3, [r0, #20]
 304:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 931              		.loc 1 304 3 is_stmt 1 view .LVU224
 304:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 932              		.loc 1 304 26 is_stmt 0 view .LVU225
 933 001a 8361     		str	r3, [r0, #24]
 305:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 934              		.loc 1 305 3 is_stmt 1 view .LVU226
 305:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 935              		.loc 1 305 30 is_stmt 0 view .LVU227
 936 001c C361     		str	r3, [r0, #28]
 306:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 937              		.loc 1 306 3 is_stmt 1 view .LVU228
 306:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 938              		.loc 1 306 28 is_stmt 0 view .LVU229
 939 001e 0362     		str	r3, [r0, #32]
 307:Core/Src/main.c ****   {
 940              		.loc 1 307 3 is_stmt 1 view .LVU230
 307:Core/Src/main.c ****   {
 941              		.loc 1 307 7 is_stmt 0 view .LVU231
 942 0020 FFF7FEFF 		bl	HAL_I2C_Init
 943              	.LVL54:
 307:Core/Src/main.c ****   {
 944              		.loc 1 307 6 view .LVU232
 945 0024 00B9     		cbnz	r0, .L73
 315:Core/Src/main.c **** 
 946              		.loc 1 315 1 view .LVU233
 947 0026 08BD     		pop	{r3, pc}
 948              	.L73:
 309:Core/Src/main.c ****   }
 949              		.loc 1 309 5 is_stmt 1 view .LVU234
 950 0028 FFF7FEFF 		bl	Error_Handler
 951              	.LVL55:
 952              	.L75:
 953              		.align	2
 954              	.L74:
 955 002c 00000000 		.word	.LANCHOR8
 956 0030 00540040 		.word	1073763328
 957 0034 A0860100 		.word	100000
 958              		.cfi_endproc
 959              	.LFE77:
 961              		.section	.text.MX_SPI1_Init,"ax",%progbits
 962              		.align	1
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 967              	MX_SPI1_Init:
 968              	.LFB78:
 323:Core/Src/main.c **** 
 969              		.loc 1 323 1 view -0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973 0000 08B5     		push	{r3, lr}
 974              	.LCFI12:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 33


 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 3, -8
 977              		.cfi_offset 14, -4
 333:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 978              		.loc 1 333 3 view .LVU236
 333:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 979              		.loc 1 333 18 is_stmt 0 view .LVU237
 980 0002 0D48     		ldr	r0, .L80
 981 0004 0D4B     		ldr	r3, .L80+4
 982 0006 0360     		str	r3, [r0]
 334:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 983              		.loc 1 334 3 is_stmt 1 view .LVU238
 334:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 984              		.loc 1 334 19 is_stmt 0 view .LVU239
 985 0008 4FF48273 		mov	r3, #260
 986 000c 4360     		str	r3, [r0, #4]
 335:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 987              		.loc 1 335 3 is_stmt 1 view .LVU240
 335:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 988              		.loc 1 335 24 is_stmt 0 view .LVU241
 989 000e 0023     		movs	r3, #0
 990 0010 8360     		str	r3, [r0, #8]
 336:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 991              		.loc 1 336 3 is_stmt 1 view .LVU242
 336:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 992              		.loc 1 336 23 is_stmt 0 view .LVU243
 993 0012 C360     		str	r3, [r0, #12]
 337:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 994              		.loc 1 337 3 is_stmt 1 view .LVU244
 337:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 995              		.loc 1 337 26 is_stmt 0 view .LVU245
 996 0014 0361     		str	r3, [r0, #16]
 338:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 997              		.loc 1 338 3 is_stmt 1 view .LVU246
 338:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 998              		.loc 1 338 23 is_stmt 0 view .LVU247
 999 0016 4361     		str	r3, [r0, #20]
 339:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1000              		.loc 1 339 3 is_stmt 1 view .LVU248
 339:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 1001              		.loc 1 339 18 is_stmt 0 view .LVU249
 1002 0018 4FF40072 		mov	r2, #512
 1003 001c 8261     		str	r2, [r0, #24]
 340:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1004              		.loc 1 340 3 is_stmt 1 view .LVU250
 340:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1005              		.loc 1 340 32 is_stmt 0 view .LVU251
 1006 001e 2022     		movs	r2, #32
 1007 0020 C261     		str	r2, [r0, #28]
 341:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1008              		.loc 1 341 3 is_stmt 1 view .LVU252
 341:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 1009              		.loc 1 341 23 is_stmt 0 view .LVU253
 1010 0022 0362     		str	r3, [r0, #32]
 342:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1011              		.loc 1 342 3 is_stmt 1 view .LVU254
 342:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 34


 1012              		.loc 1 342 21 is_stmt 0 view .LVU255
 1013 0024 4362     		str	r3, [r0, #36]
 343:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1014              		.loc 1 343 3 is_stmt 1 view .LVU256
 343:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 1015              		.loc 1 343 29 is_stmt 0 view .LVU257
 1016 0026 8362     		str	r3, [r0, #40]
 344:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1017              		.loc 1 344 3 is_stmt 1 view .LVU258
 344:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 1018              		.loc 1 344 28 is_stmt 0 view .LVU259
 1019 0028 0A23     		movs	r3, #10
 1020 002a C362     		str	r3, [r0, #44]
 345:Core/Src/main.c ****   {
 1021              		.loc 1 345 3 is_stmt 1 view .LVU260
 345:Core/Src/main.c ****   {
 1022              		.loc 1 345 7 is_stmt 0 view .LVU261
 1023 002c FFF7FEFF 		bl	HAL_SPI_Init
 1024              	.LVL56:
 345:Core/Src/main.c ****   {
 1025              		.loc 1 345 6 view .LVU262
 1026 0030 00B9     		cbnz	r0, .L79
 353:Core/Src/main.c **** 
 1027              		.loc 1 353 1 view .LVU263
 1028 0032 08BD     		pop	{r3, pc}
 1029              	.L79:
 347:Core/Src/main.c ****   }
 1030              		.loc 1 347 5 is_stmt 1 view .LVU264
 1031 0034 FFF7FEFF 		bl	Error_Handler
 1032              	.LVL57:
 1033              	.L81:
 1034              		.align	2
 1035              	.L80:
 1036 0038 00000000 		.word	.LANCHOR9
 1037 003c 00300140 		.word	1073819648
 1038              		.cfi_endproc
 1039              	.LFE78:
 1041              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1042              		.align	1
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1047              	MX_USART2_UART_Init:
 1048              	.LFB79:
 361:Core/Src/main.c **** 
 1049              		.loc 1 361 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053 0000 08B5     		push	{r3, lr}
 1054              	.LCFI13:
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 3, -8
 1057              		.cfi_offset 14, -4
 370:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1058              		.loc 1 370 3 view .LVU266
 370:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 35


 1059              		.loc 1 370 19 is_stmt 0 view .LVU267
 1060 0002 0A48     		ldr	r0, .L86
 1061 0004 0A4B     		ldr	r3, .L86+4
 1062 0006 0360     		str	r3, [r0]
 371:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1063              		.loc 1 371 3 is_stmt 1 view .LVU268
 371:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1064              		.loc 1 371 24 is_stmt 0 view .LVU269
 1065 0008 4FF4E133 		mov	r3, #115200
 1066 000c 4360     		str	r3, [r0, #4]
 372:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1067              		.loc 1 372 3 is_stmt 1 view .LVU270
 372:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1068              		.loc 1 372 26 is_stmt 0 view .LVU271
 1069 000e 0023     		movs	r3, #0
 1070 0010 8360     		str	r3, [r0, #8]
 373:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1071              		.loc 1 373 3 is_stmt 1 view .LVU272
 373:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1072              		.loc 1 373 24 is_stmt 0 view .LVU273
 1073 0012 C360     		str	r3, [r0, #12]
 374:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1074              		.loc 1 374 3 is_stmt 1 view .LVU274
 374:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1075              		.loc 1 374 22 is_stmt 0 view .LVU275
 1076 0014 0361     		str	r3, [r0, #16]
 375:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1077              		.loc 1 375 3 is_stmt 1 view .LVU276
 375:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1078              		.loc 1 375 20 is_stmt 0 view .LVU277
 1079 0016 0C22     		movs	r2, #12
 1080 0018 4261     		str	r2, [r0, #20]
 376:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1081              		.loc 1 376 3 is_stmt 1 view .LVU278
 376:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1082              		.loc 1 376 25 is_stmt 0 view .LVU279
 1083 001a 8361     		str	r3, [r0, #24]
 377:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1084              		.loc 1 377 3 is_stmt 1 view .LVU280
 377:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1085              		.loc 1 377 28 is_stmt 0 view .LVU281
 1086 001c C361     		str	r3, [r0, #28]
 378:Core/Src/main.c ****   {
 1087              		.loc 1 378 3 is_stmt 1 view .LVU282
 378:Core/Src/main.c ****   {
 1088              		.loc 1 378 7 is_stmt 0 view .LVU283
 1089 001e FFF7FEFF 		bl	HAL_UART_Init
 1090              	.LVL58:
 378:Core/Src/main.c ****   {
 1091              		.loc 1 378 6 view .LVU284
 1092 0022 00B9     		cbnz	r0, .L85
 386:Core/Src/main.c **** 
 1093              		.loc 1 386 1 view .LVU285
 1094 0024 08BD     		pop	{r3, pc}
 1095              	.L85:
 380:Core/Src/main.c ****   }
 1096              		.loc 1 380 5 is_stmt 1 view .LVU286
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 36


 1097 0026 FFF7FEFF 		bl	Error_Handler
 1098              	.LVL59:
 1099              	.L87:
 1100 002a 00BF     		.align	2
 1101              	.L86:
 1102 002c 00000000 		.word	.LANCHOR4
 1103 0030 00440040 		.word	1073759232
 1104              		.cfi_endproc
 1105              	.LFE79:
 1107              		.section	.text.SystemClock_Config,"ax",%progbits
 1108              		.align	1
 1109              		.global	SystemClock_Config
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1114              	SystemClock_Config:
 1115              	.LFB76:
 243:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1116              		.loc 1 243 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 80
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120 0000 00B5     		push	{lr}
 1121              	.LCFI14:
 1122              		.cfi_def_cfa_offset 4
 1123              		.cfi_offset 14, -4
 1124 0002 95B0     		sub	sp, sp, #84
 1125              	.LCFI15:
 1126              		.cfi_def_cfa_offset 88
 244:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1127              		.loc 1 244 3 view .LVU288
 244:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1128              		.loc 1 244 22 is_stmt 0 view .LVU289
 1129 0004 2822     		movs	r2, #40
 1130 0006 0021     		movs	r1, #0
 1131 0008 0DEB0200 		add	r0, sp, r2
 1132 000c FFF7FEFF 		bl	memset
 1133              	.LVL60:
 245:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1134              		.loc 1 245 3 is_stmt 1 view .LVU290
 245:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1135              		.loc 1 245 22 is_stmt 0 view .LVU291
 1136 0010 0023     		movs	r3, #0
 1137 0012 0593     		str	r3, [sp, #20]
 1138 0014 0693     		str	r3, [sp, #24]
 1139 0016 0793     		str	r3, [sp, #28]
 1140 0018 0893     		str	r3, [sp, #32]
 1141 001a 0993     		str	r3, [sp, #36]
 246:Core/Src/main.c **** 
 1142              		.loc 1 246 3 is_stmt 1 view .LVU292
 246:Core/Src/main.c **** 
 1143              		.loc 1 246 28 is_stmt 0 view .LVU293
 1144 001c 0193     		str	r3, [sp, #4]
 1145 001e 0293     		str	r3, [sp, #8]
 1146 0020 0393     		str	r3, [sp, #12]
 1147 0022 0493     		str	r3, [sp, #16]
 251:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 37


 1148              		.loc 1 251 3 is_stmt 1 view .LVU294
 251:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1149              		.loc 1 251 36 is_stmt 0 view .LVU295
 1150 0024 0122     		movs	r2, #1
 1151 0026 0A92     		str	r2, [sp, #40]
 252:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1152              		.loc 1 252 3 is_stmt 1 view .LVU296
 252:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1153              		.loc 1 252 30 is_stmt 0 view .LVU297
 1154 0028 4FF48033 		mov	r3, #65536
 1155 002c 0B93     		str	r3, [sp, #44]
 253:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1156              		.loc 1 253 3 is_stmt 1 view .LVU298
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1157              		.loc 1 254 3 view .LVU299
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1158              		.loc 1 254 30 is_stmt 0 view .LVU300
 1159 002e 0E92     		str	r2, [sp, #56]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1160              		.loc 1 255 3 is_stmt 1 view .LVU301
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1161              		.loc 1 255 34 is_stmt 0 view .LVU302
 1162 0030 0222     		movs	r2, #2
 1163 0032 1192     		str	r2, [sp, #68]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1164              		.loc 1 256 3 is_stmt 1 view .LVU303
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1165              		.loc 1 256 35 is_stmt 0 view .LVU304
 1166 0034 1293     		str	r3, [sp, #72]
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1167              		.loc 1 257 3 is_stmt 1 view .LVU305
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1168              		.loc 1 257 32 is_stmt 0 view .LVU306
 1169 0036 4FF4E013 		mov	r3, #1835008
 1170 003a 1393     		str	r3, [sp, #76]
 258:Core/Src/main.c ****   {
 1171              		.loc 1 258 3 is_stmt 1 view .LVU307
 258:Core/Src/main.c ****   {
 1172              		.loc 1 258 7 is_stmt 0 view .LVU308
 1173 003c 0AA8     		add	r0, sp, #40
 1174 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1175              	.LVL61:
 258:Core/Src/main.c ****   {
 1176              		.loc 1 258 6 view .LVU309
 1177 0042 C0B9     		cbnz	r0, .L93
 264:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1178              		.loc 1 264 3 is_stmt 1 view .LVU310
 264:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1179              		.loc 1 264 31 is_stmt 0 view .LVU311
 1180 0044 0F23     		movs	r3, #15
 1181 0046 0593     		str	r3, [sp, #20]
 266:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1182              		.loc 1 266 3 is_stmt 1 view .LVU312
 266:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1183              		.loc 1 266 34 is_stmt 0 view .LVU313
 1184 0048 0221     		movs	r1, #2
 1185 004a 0691     		str	r1, [sp, #24]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 38


 267:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1186              		.loc 1 267 3 is_stmt 1 view .LVU314
 267:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1187              		.loc 1 267 35 is_stmt 0 view .LVU315
 1188 004c 0023     		movs	r3, #0
 1189 004e 0793     		str	r3, [sp, #28]
 268:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1190              		.loc 1 268 3 is_stmt 1 view .LVU316
 268:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1191              		.loc 1 268 36 is_stmt 0 view .LVU317
 1192 0050 4FF48062 		mov	r2, #1024
 1193 0054 0892     		str	r2, [sp, #32]
 269:Core/Src/main.c **** 
 1194              		.loc 1 269 3 is_stmt 1 view .LVU318
 269:Core/Src/main.c **** 
 1195              		.loc 1 269 36 is_stmt 0 view .LVU319
 1196 0056 0993     		str	r3, [sp, #36]
 271:Core/Src/main.c ****   {
 1197              		.loc 1 271 3 is_stmt 1 view .LVU320
 271:Core/Src/main.c ****   {
 1198              		.loc 1 271 7 is_stmt 0 view .LVU321
 1199 0058 05A8     		add	r0, sp, #20
 1200 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1201              	.LVL62:
 271:Core/Src/main.c ****   {
 1202              		.loc 1 271 6 view .LVU322
 1203 005e 60B9     		cbnz	r0, .L94
 275:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1204              		.loc 1 275 3 is_stmt 1 view .LVU323
 275:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1205              		.loc 1 275 38 is_stmt 0 view .LVU324
 1206 0060 1023     		movs	r3, #16
 1207 0062 0193     		str	r3, [sp, #4]
 276:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1208              		.loc 1 276 3 is_stmt 1 view .LVU325
 276:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1209              		.loc 1 276 35 is_stmt 0 view .LVU326
 1210 0064 0023     		movs	r3, #0
 1211 0066 0493     		str	r3, [sp, #16]
 277:Core/Src/main.c ****   {
 1212              		.loc 1 277 3 is_stmt 1 view .LVU327
 277:Core/Src/main.c ****   {
 1213              		.loc 1 277 7 is_stmt 0 view .LVU328
 1214 0068 01A8     		add	r0, sp, #4
 1215 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1216              	.LVL63:
 277:Core/Src/main.c ****   {
 1217              		.loc 1 277 6 view .LVU329
 1218 006e 30B9     		cbnz	r0, .L95
 281:Core/Src/main.c **** 
 1219              		.loc 1 281 1 view .LVU330
 1220 0070 15B0     		add	sp, sp, #84
 1221              	.LCFI16:
 1222              		.cfi_remember_state
 1223              		.cfi_def_cfa_offset 4
 1224              		@ sp needed
 1225 0072 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 39


 1226              	.L93:
 1227              	.LCFI17:
 1228              		.cfi_restore_state
 260:Core/Src/main.c ****   }
 1229              		.loc 1 260 5 is_stmt 1 view .LVU331
 1230 0076 FFF7FEFF 		bl	Error_Handler
 1231              	.LVL64:
 1232              	.L94:
 273:Core/Src/main.c ****   }
 1233              		.loc 1 273 5 view .LVU332
 1234 007a FFF7FEFF 		bl	Error_Handler
 1235              	.LVL65:
 1236              	.L95:
 279:Core/Src/main.c ****   }
 1237              		.loc 1 279 5 view .LVU333
 1238 007e FFF7FEFF 		bl	Error_Handler
 1239              	.LVL66:
 1240              		.cfi_endproc
 1241              	.LFE76:
 1243              		.section	.text.main,"ax",%progbits
 1244              		.align	1
 1245              		.global	main
 1246              		.syntax unified
 1247              		.thumb
 1248              		.thumb_func
 1250              	main:
 1251              	.LFB75:
 142:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1252              		.loc 1 142 1 view -0
 1253              		.cfi_startproc
 1254              		@ Volatile: function does not return.
 1255              		@ args = 0, pretend = 0, frame = 152
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257 0000 00B5     		push	{lr}
 1258              	.LCFI18:
 1259              		.cfi_def_cfa_offset 4
 1260              		.cfi_offset 14, -4
 1261 0002 A7B0     		sub	sp, sp, #156
 1262              	.LCFI19:
 1263              		.cfi_def_cfa_offset 160
 150:Core/Src/main.c **** 
 1264              		.loc 1 150 3 view .LVU335
 1265 0004 FFF7FEFF 		bl	HAL_Init
 1266              	.LVL67:
 157:Core/Src/main.c **** 
 1267              		.loc 1 157 3 view .LVU336
 1268 0008 FFF7FEFF 		bl	SystemClock_Config
 1269              	.LVL68:
 164:Core/Src/main.c ****   MX_I2C1_Init();
 1270              		.loc 1 164 3 view .LVU337
 1271 000c FFF7FEFF 		bl	MX_GPIO_Init
 1272              	.LVL69:
 165:Core/Src/main.c ****   MX_SPI1_Init();
 1273              		.loc 1 165 3 view .LVU338
 1274 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1275              	.LVL70:
 166:Core/Src/main.c ****   MX_USART2_UART_Init();
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 40


 1276              		.loc 1 166 3 view .LVU339
 1277 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1278              	.LVL71:
 167:Core/Src/main.c ****   MX_FATFS_Init();
 1279              		.loc 1 167 3 view .LVU340
 1280 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 1281              	.LVL72:
 168:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1282              		.loc 1 168 3 view .LVU341
 1283 001c FFF7FEFF 		bl	MX_FATFS_Init
 1284              	.LVL73:
 170:Core/Src/main.c ****   InitCNC(&cnc);
 1285              		.loc 1 170 3 view .LVU342
 1286 0020 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1287              	.LVL74:
 171:Core/Src/main.c **** 
 1288              		.loc 1 171 3 view .LVU343
 1289 0024 3F4C     		ldr	r4, .L99
 1290 0026 2046     		mov	r0, r4
 1291 0028 FFF7FEFF 		bl	InitCNC
 1292              	.LVL75:
 173:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1293              		.loc 1 173 3 view .LVU344
 173:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1294              		.loc 1 173 18 is_stmt 0 view .LVU345
 1295 002c 3E48     		ldr	r0, .L99+4
 1296 002e E066     		str	r0, [r4, #108]
 174:Core/Src/main.c **** 
 1297              		.loc 1 174 3 is_stmt 1 view .LVU346
 174:Core/Src/main.c **** 
 1298              		.loc 1 174 12 is_stmt 0 view .LVU347
 1299 0030 3E4B     		ldr	r3, .L99+8
 1300 0032 6366     		str	r3, [r4, #100]
 176:Core/Src/main.c **** 
 1301              		.loc 1 176 3 is_stmt 1 view .LVU348
 1302 0034 0122     		movs	r2, #1
 1303 0036 04F17A01 		add	r1, r4, #122
 1304 003a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1305              	.LVL76:
 186:Core/Src/main.c ****   xSemaphoreUSB = osSemaphoreCreate(osSemaphore(semaphore), 1); // giá trị ban đầu của sema
 1306              		.loc 1 186 3 view .LVU349
 1307 003e 0025     		movs	r5, #0
 1308 0040 2495     		str	r5, [sp, #144]
 1309 0042 2595     		str	r5, [sp, #148]
 187:Core/Src/main.c **** 
 1310              		.loc 1 187 3 view .LVU350
 187:Core/Src/main.c **** 
 1311              		.loc 1 187 19 is_stmt 0 view .LVU351
 1312 0044 0121     		movs	r1, #1
 1313 0046 24A8     		add	r0, sp, #144
 1314 0048 FFF7FEFF 		bl	osSemaphoreCreate
 1315              	.LVL77:
 187:Core/Src/main.c **** 
 1316              		.loc 1 187 17 view .LVU352
 1317 004c 384B     		ldr	r3, .L99+12
 1318 004e 1860     		str	r0, [r3]
 189:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 41


 1319              		.loc 1 189 3 is_stmt 1 view .LVU353
 189:Core/Src/main.c **** 
 1320              		.loc 1 189 19 is_stmt 0 view .LVU354
 1321 0050 0121     		movs	r1, #1
 1322 0052 24A8     		add	r0, sp, #144
 1323 0054 FFF7FEFF 		bl	osSemaphoreCreate
 1324              	.LVL78:
 189:Core/Src/main.c **** 
 1325              		.loc 1 189 17 view .LVU355
 1326 0058 364B     		ldr	r3, .L99+16
 1327 005a 1860     		str	r0, [r3]
 191:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1328              		.loc 1 191 3 is_stmt 1 view .LVU356
 191:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1329              		.loc 1 191 20 is_stmt 0 view .LVU357
 1330 005c 0121     		movs	r1, #1
 1331 005e 24A8     		add	r0, sp, #144
 1332 0060 FFF7FEFF 		bl	osSemaphoreCreate
 1333              	.LVL79:
 191:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1334              		.loc 1 191 18 view .LVU358
 1335 0064 344B     		ldr	r3, .L99+20
 1336 0066 1860     		str	r0, [r3]
 204:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 1337              		.loc 1 204 3 is_stmt 1 view .LVU359
 1338 0068 344C     		ldr	r4, .L99+24
 1339 006a 0DF1740C 		add	ip, sp, #116
 1340 006e A646     		mov	lr, r4
 1341 0070 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1342 0074 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1343 0078 9EE80700 		ldm	lr, {r0, r1, r2}
 1344 007c 8CE80700 		stm	ip, {r0, r1, r2}
 205:Core/Src/main.c **** 
 1345              		.loc 1 205 3 view .LVU360
 205:Core/Src/main.c **** 
 1346              		.loc 1 205 23 is_stmt 0 view .LVU361
 1347 0080 2946     		mov	r1, r5
 1348 0082 1DA8     		add	r0, sp, #116
 1349 0084 FFF7FEFF 		bl	osThreadCreate
 1350              	.LVL80:
 205:Core/Src/main.c **** 
 1351              		.loc 1 205 21 view .LVU362
 1352 0088 2D4B     		ldr	r3, .L99+28
 1353 008a 1860     		str	r0, [r3]
 209:Core/Src/main.c ****   ReceiveDataFromGUITaksHandle = osThreadCreate(osThread(ReceiveDataFromGUITask), NULL);
 1354              		.loc 1 209 3 is_stmt 1 view .LVU363
 1355 008c 0DF1580C 		add	ip, sp, #88
 1356 0090 04F11C0E 		add	lr, r4, #28
 1357 0094 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1358 0098 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1359 009c 9EE80700 		ldm	lr, {r0, r1, r2}
 1360 00a0 8CE80700 		stm	ip, {r0, r1, r2}
 210:Core/Src/main.c **** 
 1361              		.loc 1 210 3 view .LVU364
 210:Core/Src/main.c **** 
 1362              		.loc 1 210 34 is_stmt 0 view .LVU365
 1363 00a4 2946     		mov	r1, r5
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 42


 1364 00a6 16A8     		add	r0, sp, #88
 1365 00a8 FFF7FEFF 		bl	osThreadCreate
 1366              	.LVL81:
 210:Core/Src/main.c **** 
 1367              		.loc 1 210 32 view .LVU366
 1368 00ac 254B     		ldr	r3, .L99+32
 1369 00ae 1860     		str	r0, [r3]
 212:Core/Src/main.c ****   CheckUSBConnectTaskHandle = osThreadCreate(osThread(CheckUSBConnectTask), NULL);
 1370              		.loc 1 212 3 is_stmt 1 view .LVU367
 1371 00b0 0DF13C0C 		add	ip, sp, #60
 1372 00b4 04F1380E 		add	lr, r4, #56
 1373 00b8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1374 00bc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1375 00c0 9EE80700 		ldm	lr, {r0, r1, r2}
 1376 00c4 8CE80700 		stm	ip, {r0, r1, r2}
 213:Core/Src/main.c **** 
 1377              		.loc 1 213 3 view .LVU368
 213:Core/Src/main.c **** 
 1378              		.loc 1 213 31 is_stmt 0 view .LVU369
 1379 00c8 2946     		mov	r1, r5
 1380 00ca 0FA8     		add	r0, sp, #60
 1381 00cc FFF7FEFF 		bl	osThreadCreate
 1382              	.LVL82:
 213:Core/Src/main.c **** 
 1383              		.loc 1 213 29 view .LVU370
 1384 00d0 1D4B     		ldr	r3, .L99+36
 1385 00d2 1860     		str	r0, [r3]
 216:Core/Src/main.c ****   ProcessBtnPressTaskHandle = osThreadCreate(osThread(ProcessBtnPressTask), NULL);
 1386              		.loc 1 216 3 is_stmt 1 view .LVU371
 1387 00d4 0DF1200C 		add	ip, sp, #32
 1388 00d8 04F1540E 		add	lr, r4, #84
 1389 00dc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1390 00e0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1391 00e4 9EE80700 		ldm	lr, {r0, r1, r2}
 1392 00e8 8CE80700 		stm	ip, {r0, r1, r2}
 217:Core/Src/main.c **** 
 1393              		.loc 1 217 3 view .LVU372
 217:Core/Src/main.c **** 
 1394              		.loc 1 217 31 is_stmt 0 view .LVU373
 1395 00ec 2946     		mov	r1, r5
 1396 00ee 08A8     		add	r0, sp, #32
 1397 00f0 FFF7FEFF 		bl	osThreadCreate
 1398              	.LVL83:
 217:Core/Src/main.c **** 
 1399              		.loc 1 217 29 view .LVU374
 1400 00f4 154B     		ldr	r3, .L99+40
 1401 00f6 1860     		str	r0, [r3]
 219:Core/Src/main.c ****   ProcessModeTaskHandle = osThreadCreate(osThread(ProcessModeTask), NULL);
 1402              		.loc 1 219 3 is_stmt 1 view .LVU375
 1403 00f8 0DF1040E 		add	lr, sp, #4
 1404 00fc 04F1700C 		add	ip, r4, #112
 1405 0100 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1406 0104 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1407 0108 9CE80700 		ldm	ip, {r0, r1, r2}
 1408 010c 8EE80700 		stm	lr, {r0, r1, r2}
 220:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1409              		.loc 1 220 3 view .LVU376
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 43


 220:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1410              		.loc 1 220 27 is_stmt 0 view .LVU377
 1411 0110 2946     		mov	r1, r5
 1412 0112 01A8     		add	r0, sp, #4
 1413 0114 FFF7FEFF 		bl	osThreadCreate
 1414              	.LVL84:
 220:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1415              		.loc 1 220 25 view .LVU378
 1416 0118 0D4B     		ldr	r3, .L99+44
 1417 011a 1860     		str	r0, [r3]
 224:Core/Src/main.c **** 
 1418              		.loc 1 224 3 is_stmt 1 view .LVU379
 1419 011c FFF7FEFF 		bl	osKernelStart
 1420              	.LVL85:
 1421              	.L97:
 229:Core/Src/main.c ****   {
 1422              		.loc 1 229 3 discriminator 1 view .LVU380
 234:Core/Src/main.c ****   /* USER CODE END 3 */
 1423              		.loc 1 234 3 discriminator 1 view .LVU381
 229:Core/Src/main.c ****   {
 1424              		.loc 1 229 9 discriminator 1 view .LVU382
 1425 0120 FEE7     		b	.L97
 1426              	.L100:
 1427 0122 00BF     		.align	2
 1428              	.L99:
 1429 0124 00000000 		.word	.LANCHOR2
 1430 0128 00000000 		.word	.LANCHOR4
 1431 012c 00000000 		.word	hUsbDeviceFS
 1432 0130 00000000 		.word	.LANCHOR0
 1433 0134 00000000 		.word	.LANCHOR3
 1434 0138 00000000 		.word	.LANCHOR1
 1435 013c 00000000 		.word	.LANCHOR10
 1436 0140 00000000 		.word	.LANCHOR11
 1437 0144 00000000 		.word	.LANCHOR12
 1438 0148 00000000 		.word	.LANCHOR13
 1439 014c 00000000 		.word	.LANCHOR14
 1440 0150 00000000 		.word	.LANCHOR15
 1441              		.cfi_endproc
 1442              	.LFE75:
 1444              		.global	Timer2
 1445              		.global	Timer1
 1446              		.global	FatFsCnt
 1447              		.global	cnc
 1448              		.global	ProcessModeTaskHandle
 1449              		.global	xSemaphoreMode
 1450              		.global	ProcessBtnPressTaskHandle
 1451              		.global	xSemaphoreBtn
 1452              		.global	CheckUSBConnectTaskHandle
 1453              		.global	ReceiveDataFromGUITaksHandle
 1454              		.global	xSemaphoreUSB
 1455              		.global	defaultTaskHandle
 1456              		.global	huart2
 1457              		.global	hspi1
 1458              		.global	hi2c1
 1459              		.section	.rodata
 1460              		.align	2
 1461              		.set	.LANCHOR10,. + 0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 44


 1462              	.LC10:
 1463 0000 00000000 		.word	.LC0
 1464 0004 00000000 		.word	StartDefaultTask
 1465 0008 0000     		.short	0
 1466 000a 0000     		.space	2
 1467 000c 00000000 		.word	0
 1468 0010 80000000 		.word	128
 1469 0014 00000000 		.word	0
 1470 0018 00000000 		.word	0
 1471              	.LC11:
 1472 001c 0C000000 		.word	.LC2
 1473 0020 00000000 		.word	StartReceiveDataFromGUI
 1474 0024 0100     		.short	1
 1475 0026 0000     		.space	2
 1476 0028 00000000 		.word	0
 1477 002c 80000000 		.word	128
 1478 0030 00000000 		.word	0
 1479 0034 00000000 		.word	0
 1480              	.LC12:
 1481 0038 24000000 		.word	.LC4
 1482 003c 00000000 		.word	StartCheckUSBConnect
 1483 0040 0100     		.short	1
 1484 0042 0000     		.space	2
 1485 0044 00000000 		.word	0
 1486 0048 80000000 		.word	128
 1487 004c 00000000 		.word	0
 1488 0050 00000000 		.word	0
 1489              	.LC13:
 1490 0054 38000000 		.word	.LC6
 1491 0058 00000000 		.word	StartProcessBtnPress
 1492 005c 0100     		.short	1
 1493 005e 0000     		.space	2
 1494 0060 00000000 		.word	0
 1495 0064 80000000 		.word	128
 1496 0068 00000000 		.word	0
 1497 006c 00000000 		.word	0
 1498              	.LC14:
 1499 0070 4C000000 		.word	.LC8
 1500 0074 00000000 		.word	StartProcessMode
 1501 0078 0100     		.short	1
 1502 007a 0000     		.space	2
 1503 007c 00000000 		.word	0
 1504 0080 80000000 		.word	128
 1505 0084 00000000 		.word	0
 1506 0088 00000000 		.word	0
 1507              		.section	.bss.CheckUSBConnectTaskHandle,"aw",%nobits
 1508              		.align	2
 1509              		.set	.LANCHOR13,. + 0
 1512              	CheckUSBConnectTaskHandle:
 1513 0000 00000000 		.space	4
 1514              		.section	.bss.FatFsCnt,"aw",%nobits
 1515              		.set	.LANCHOR7,. + 0
 1518              	FatFsCnt:
 1519 0000 00       		.space	1
 1520              		.section	.bss.ProcessBtnPressTaskHandle,"aw",%nobits
 1521              		.align	2
 1522              		.set	.LANCHOR14,. + 0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 45


 1525              	ProcessBtnPressTaskHandle:
 1526 0000 00000000 		.space	4
 1527              		.section	.bss.ProcessModeTaskHandle,"aw",%nobits
 1528              		.align	2
 1529              		.set	.LANCHOR15,. + 0
 1532              	ProcessModeTaskHandle:
 1533 0000 00000000 		.space	4
 1534              		.section	.bss.ReceiveDataFromGUITaksHandle,"aw",%nobits
 1535              		.align	2
 1536              		.set	.LANCHOR12,. + 0
 1539              	ReceiveDataFromGUITaksHandle:
 1540 0000 00000000 		.space	4
 1541              		.section	.bss.Timer1,"aw",%nobits
 1542              		.set	.LANCHOR5,. + 0
 1545              	Timer1:
 1546 0000 00       		.space	1
 1547              		.section	.bss.Timer2,"aw",%nobits
 1548              		.set	.LANCHOR6,. + 0
 1551              	Timer2:
 1552 0000 00       		.space	1
 1553              		.section	.bss.cnc,"aw",%nobits
 1554              		.align	2
 1555              		.set	.LANCHOR2,. + 0
 1558              	cnc:
 1559 0000 00000000 		.space	248
 1559      00000000 
 1559      00000000 
 1559      00000000 
 1559      00000000 
 1560              		.section	.bss.defaultTaskHandle,"aw",%nobits
 1561              		.align	2
 1562              		.set	.LANCHOR11,. + 0
 1565              	defaultTaskHandle:
 1566 0000 00000000 		.space	4
 1567              		.section	.bss.hi2c1,"aw",%nobits
 1568              		.align	2
 1569              		.set	.LANCHOR8,. + 0
 1572              	hi2c1:
 1573 0000 00000000 		.space	84
 1573      00000000 
 1573      00000000 
 1573      00000000 
 1573      00000000 
 1574              		.section	.bss.hspi1,"aw",%nobits
 1575              		.align	2
 1576              		.set	.LANCHOR9,. + 0
 1579              	hspi1:
 1580 0000 00000000 		.space	88
 1580      00000000 
 1580      00000000 
 1580      00000000 
 1580      00000000 
 1581              		.section	.bss.huart2,"aw",%nobits
 1582              		.align	2
 1583              		.set	.LANCHOR4,. + 0
 1586              	huart2:
 1587 0000 00000000 		.space	68
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 46


 1587      00000000 
 1587      00000000 
 1587      00000000 
 1587      00000000 
 1588              		.section	.bss.xSemaphoreBtn,"aw",%nobits
 1589              		.align	2
 1590              		.set	.LANCHOR3,. + 0
 1593              	xSemaphoreBtn:
 1594 0000 00000000 		.space	4
 1595              		.section	.bss.xSemaphoreMode,"aw",%nobits
 1596              		.align	2
 1597              		.set	.LANCHOR1,. + 0
 1600              	xSemaphoreMode:
 1601 0000 00000000 		.space	4
 1602              		.section	.bss.xSemaphoreUSB,"aw",%nobits
 1603              		.align	2
 1604              		.set	.LANCHOR0,. + 0
 1607              	xSemaphoreUSB:
 1608 0000 00000000 		.space	4
 1609              		.text
 1610              	.Letext0:
 1611              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1612              		.file 4 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1613              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1614              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1615              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1616              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1617              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1618              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1619              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1620              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1621              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1622              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1623              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1624              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1625              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1626              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1627              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1628              		.file 20 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1629              		.file 21 "Middlewares/Third_Party/FatFs/src/integer.h"
 1630              		.file 22 "Middlewares/Third_Party/FatFs/src/ff.h"
 1631              		.file 23 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1632              		.file 24 "Lib/Inc/TaskCNC.h"
 1633              		.file 25 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1634              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1635              		.file 27 "FATFS/App/fatfs.h"
 1636              		.file 28 "USB_DEVICE/App/usb_device.h"
 1637              		.file 29 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 47


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:15     .rodata.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:34     .text.MX_GPIO_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:39     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:243    .text.MX_GPIO_Init:000000fc $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:251    .text.StartReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:257    .text.StartReceiveDataFromGUI:00000000 StartReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:306    .text.StartReceiveDataFromGUI:00000030 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:313    .text.StartCheckUSBConnect:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:319    .text.StartCheckUSBConnect:00000000 StartCheckUSBConnect
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:376    .text.StartCheckUSBConnect:00000040 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:383    .text.StartDefaultTask:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:389    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:416    .text.StartProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:422    .text.StartProcessBtnPress:00000000 StartProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:469    .text.StartProcessBtnPress:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:475    .text.StartProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:481    .text.StartProcessMode:00000000 StartProcessMode
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:528    .text.StartProcessMode:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:534    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:540    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:626    .text.HAL_GPIO_EXTI_Callback:0000004c $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:632    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:638    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:712    .text.HAL_UART_RxCpltCallback:00000040 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:720    .text.SDTimer_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:726    .text.SDTimer_Handler:00000000 SDTimer_Handler
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:762    .text.SDTimer_Handler:00000020 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:768    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:774    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:848    .text.HAL_TIM_PeriodElapsedCallback:00000040 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:854    .text.Error_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:860    .text.Error_Handler:00000000 Error_Handler
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:892    .text.MX_I2C1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:897    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:955    .text.MX_I2C1_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:962    .text.MX_SPI1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:967    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1036   .text.MX_SPI1_Init:00000038 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1042   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1047   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1102   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1108   .text.SystemClock_Config:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1114   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1244   .text.main:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1250   .text.main:00000000 main
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1429   .text.main:00000124 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1551   .bss.Timer2:00000000 Timer2
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1545   .bss.Timer1:00000000 Timer1
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1518   .bss.FatFsCnt:00000000 FatFsCnt
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1558   .bss.cnc:00000000 cnc
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1532   .bss.ProcessModeTaskHandle:00000000 ProcessModeTaskHandle
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1600   .bss.xSemaphoreMode:00000000 xSemaphoreMode
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1525   .bss.ProcessBtnPressTaskHandle:00000000 ProcessBtnPressTaskHandle
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1593   .bss.xSemaphoreBtn:00000000 xSemaphoreBtn
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1512   .bss.CheckUSBConnectTaskHandle:00000000 CheckUSBConnectTaskHandle
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s 			page 48


C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1539   .bss.ReceiveDataFromGUITaksHandle:00000000 ReceiveDataFromGUITaksHandle
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1607   .bss.xSemaphoreUSB:00000000 xSemaphoreUSB
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1565   .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1586   .bss.huart2:00000000 huart2
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1579   .bss.hspi1:00000000 hspi1
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1572   .bss.hi2c1:00000000 hi2c1
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1460   .rodata:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1508   .bss.CheckUSBConnectTaskHandle:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1519   .bss.FatFsCnt:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1521   .bss.ProcessBtnPressTaskHandle:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1528   .bss.ProcessModeTaskHandle:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1535   .bss.ReceiveDataFromGUITaksHandle:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1546   .bss.Timer1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1552   .bss.Timer2:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1554   .bss.cnc:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1561   .bss.defaultTaskHandle:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1568   .bss.hi2c1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1575   .bss.hspi1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1582   .bss.huart2:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1589   .bss.xSemaphoreBtn:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1596   .bss.xSemaphoreMode:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccrHStHe.s:1603   .bss.xSemaphoreUSB:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
osSemaphoreWait
ReceiveDataFromGUI
osDelay
hUsbDeviceFS
ProcessBtnPress
ProcessMode
osSemaphoreRelease
HAL_UART_Receive_IT
HAL_IncTick
HAL_I2C_Init
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_FATFS_Init
MX_USB_DEVICE_Init
InitCNC
osSemaphoreCreate
osThreadCreate
osKernelStart
