ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB81:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** //#include "fatfs.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "TaskCNC.h"
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** //#include "fatfs_sd.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** TaskHandle_t defaultTask;
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreUSB;
  57:Core/Src/main.c **** TaskHandle_t ReceiveDataFromGUITask;
  58:Core/Src/main.c **** TaskHandle_t CheckUSBConnectTask;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreBtn;
  61:Core/Src/main.c **** TaskHandle_t ProcessBtnPressTask;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreMode;
  64:Core/Src/main.c **** TaskHandle_t ProcessModeTask;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreUART;
  67:Core/Src/main.c **** TaskHandle_t ReceiveDataFromCNCTask;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** CNC cnc;
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** static void MX_I2C1_Init(void);
  76:Core/Src/main.c **** static void MX_SPI1_Init(void);
  77:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  78:Core/Src/main.c **** void DefaultTask(void *pvParameters);
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** void StartReceiveDataFromGUI(void *pvParameters);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** void StartCheckUSBConnect(void *pvParameters);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** void StartProcessBtnPress(void *pvParameters);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void StartProcessMode(void *pvParameters);
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** void StartProcessSD(void *pvParameters);
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 3


  91:Core/Src/main.c **** void StartReceiveDataFromCNC(void *pvParameters);
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END PFP */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  96:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  97:Core/Src/main.c **** void uart_clear_receive_buffer_and_start_receive_IT() 
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****     // Đọc dữ liệu trong bộ nhận cho đến khi không còn dữ liệu trong buffer
 100:Core/Src/main.c ****     while (__HAL_UART_GET_FLAG(&huart2, UART_FLAG_RXNE)) {
 101:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 104:Core/Src/main.c **** }
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 107:Core/Src/main.c **** {
 108:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 109:Core/Src/main.c ****   UNUSED(GPIO_Pin);
 110:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     cnc.btnPress = 1;
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnExit)
 115:Core/Src/main.c ****   {
 116:Core/Src/main.c ****     cnc.btnPress = 2;
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnUp)
 119:Core/Src/main.c ****   {
 120:Core/Src/main.c ****     cnc.btnPress = 3;
 121:Core/Src/main.c ****   }
 122:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnDown)
 123:Core/Src/main.c ****   {
 124:Core/Src/main.c ****     cnc.btnPress = 4;
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 127:Core/Src/main.c ****   xSemaphoreGiveFromISR(xSemaphoreBtn, xHigherPriorityTaskWoken);
 128:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 129:Core/Src/main.c **** }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 132:Core/Src/main.c **** {
 133:Core/Src/main.c ****   UNUSED(huart);
 134:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 135:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '!') //line feed Ascii
 136:Core/Src/main.c **** 		{
 137:Core/Src/main.c **** 			cnc.uart.ReceiveFromControl[cnc.uart.index++] = cnc.uart.Receive; //Save data in Rxbuff
 138:Core/Src/main.c **** 		}
 139:Core/Src/main.c **** 		else if (cnc.uart.Receive == '!')
 140:Core/Src/main.c **** 		{
 141:Core/Src/main.c **** 			//cnc.uart.index = 0;
 142:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);
 143:Core/Src/main.c ****       BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 144:Core/Src/main.c ****       xSemaphoreGiveFromISR(xSemaphoreUART, xHigherPriorityTaskWoken);
 145:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 146:Core/Src/main.c ****       return;	
 147:Core/Src/main.c **** 		}	
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 4


 148:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 149:Core/Src/main.c **** 	}
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /* USER CODE END 0 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief  The application entry point.
 156:Core/Src/main.c ****   * @retval int
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** int main(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE END 1 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 167:Core/Src/main.c ****   HAL_Init();
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END Init */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Configure the system clock */
 174:Core/Src/main.c ****   SystemClock_Config();
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END SysInit */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* Initialize all configured peripherals */
 181:Core/Src/main.c ****   MX_GPIO_Init();
 182:Core/Src/main.c ****   MX_I2C1_Init();
 183:Core/Src/main.c ****   //MX_SPI1_Init();
 184:Core/Src/main.c ****   MX_USART2_UART_Init();
 185:Core/Src/main.c ****   //MX_FATFS_Init();
 186:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 187:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 188:Core/Src/main.c ****   InitCNC(&cnc);
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   cnc.uart.huart = &huart2;
 191:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END 2 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 198:Core/Src/main.c ****   /* add mutexes, ... */
 199:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 202:Core/Src/main.c ****   /* add semaphores, ... */
 203:Core/Src/main.c ****   
 204:Core/Src/main.c ****   xSemaphoreUSB = xSemaphoreCreateBinary();
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   xSemaphoreBtn = xSemaphoreCreateBinary();
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   xSemaphoreMode = xSemaphoreCreateBinary();
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   xSemaphoreUART = xSemaphoreCreateBinary();
 211:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 214:Core/Src/main.c ****   /* start timers, add new ones, ... */
 215:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 218:Core/Src/main.c ****   /* add queues, ... */
 219:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* Create the thread(s) */
 222:Core/Src/main.c ****   /* definition and creation of defaultTask */
 223:Core/Src/main.c ****   xTaskCreate(&DefaultTask, "Default", 128, NULL, 1, &defaultTask);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 226:Core/Src/main.c ****   /* add threads, ... */  
 227:Core/Src/main.c ****   xTaskCreate(&StartReceiveDataFromGUI, "ReceiveDataFromGUI", 128, NULL, 2, &ReceiveDataFromGUITask
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   xTaskCreate(&StartCheckUSBConnect, "CheckUSBConnect", 128, NULL, 2, &CheckUSBConnectTask);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   xTaskCreate(&StartProcessBtnPress, "ProcessBtnPress", 128, NULL, 2, &ProcessBtnPressTask);
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   xTaskCreate(&StartProcessMode, "ProcessMode", 128, NULL, 2, &ProcessModeTask);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   xTaskCreate(&StartReceiveDataFromCNC, "ReceiveDataFromCNC", 128, NULL, 2, &ReceiveDataFromCNCTask
 236:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* Start scheduler */
 239:Core/Src/main.c ****   vTaskStartScheduler();
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 242:Core/Src/main.c ****   /* Infinite loop */
 243:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 244:Core/Src/main.c ****   while (1)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     /* USER CODE END WHILE */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   /* USER CODE END 3 */
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief System Clock Configuration
 255:Core/Src/main.c ****   * @retval None
 256:Core/Src/main.c ****   */
 257:Core/Src/main.c **** void SystemClock_Config(void)
 258:Core/Src/main.c **** {
 259:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 260:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 261:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 264:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 269:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 272:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 273:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 278:Core/Src/main.c ****   */
 279:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 280:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 282:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 284:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 287:Core/Src/main.c ****   {
 288:Core/Src/main.c ****     Error_Handler();
 289:Core/Src/main.c ****   }
 290:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 291:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 292:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c **** }
 297:Core/Src/main.c **** 
 298:Core/Src/main.c **** /**
 299:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 300:Core/Src/main.c ****   * @param None
 301:Core/Src/main.c ****   * @retval None
 302:Core/Src/main.c ****   */
 303:Core/Src/main.c **** static void MX_I2C1_Init(void)
 304:Core/Src/main.c **** {
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 313:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 314:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 315:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 316:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 317:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 318:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 7


 319:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 320:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 321:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 322:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****     Error_Handler();
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 327:Core/Src/main.c **** 
 328:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c **** }
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 334:Core/Src/main.c ****   * @param None
 335:Core/Src/main.c ****   * @retval None
 336:Core/Src/main.c ****   */
 337:Core/Src/main.c **** static void MX_SPI1_Init(void)
 338:Core/Src/main.c **** {
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 347:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 348:Core/Src/main.c ****   hspi1.Instance = SPI1;
 349:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 350:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 351:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 352:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 353:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 354:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 355:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 356:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 357:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 358:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 359:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 360:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 361:Core/Src/main.c ****   {
 362:Core/Src/main.c ****     Error_Handler();
 363:Core/Src/main.c ****   }
 364:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** }
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** /**
 371:Core/Src/main.c ****   * @brief USART2 Initialization Function
 372:Core/Src/main.c ****   * @param None
 373:Core/Src/main.c ****   * @retval None
 374:Core/Src/main.c ****   */
 375:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 8


 376:Core/Src/main.c **** {
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 385:Core/Src/main.c ****   huart2.Instance = USART2;
 386:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 387:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 388:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 389:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 390:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 391:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 392:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 393:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief GPIO Initialization Function
 405:Core/Src/main.c ****   * @param None
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_GPIO_Init(void)
 409:Core/Src/main.c **** {
  26              		.loc 1 409 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 410:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 410 3 view .LVU1
  43              		.loc 1 410 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 9


  48 000e 0794     		str	r4, [sp, #28]
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 413:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  49              		.loc 1 413 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 413 3 view .LVU4
  52              		.loc 1 413 3 view .LVU5
  53 0010 3A4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F02002 		orr	r2, r2, #32
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 413 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F02002 		and	r2, r2, #32
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 413 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 413 3 view .LVU8
 414:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 414 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 414 3 view .LVU10
  68              		.loc 1 414 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00402 		orr	r2, r2, #4
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 414 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F00402 		and	r2, r2, #4
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 414 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 414 3 view .LVU14
 415:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 415 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 415 3 view .LVU16
  83              		.loc 1 415 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00802 		orr	r2, r2, #8
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 415 3 view .LVU18
  88 003e 9B69     		ldr	r3, [r3, #24]
  89 0040 03F00803 		and	r3, r3, #8
  90 0044 0393     		str	r3, [sp, #12]
  91              		.loc 1 415 3 view .LVU19
  92 0046 039B     		ldr	r3, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 415 3 view .LVU20
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 418:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
  95              		.loc 1 418 3 view .LVU21
  96 0048 2D4E     		ldr	r6, .L3+4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 10


  97 004a 2246     		mov	r2, r4
  98 004c 1021     		movs	r1, #16
  99 004e 3046     		mov	r0, r6
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 421:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 102              		.loc 1 421 3 view .LVU22
 103 0054 2B4D     		ldr	r5, .L3+8
 104 0056 2246     		mov	r2, r4
 105 0058 0321     		movs	r1, #3
 106 005a 2846     		mov	r0, r5
 107 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 424:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 109              		.loc 1 424 3 view .LVU23
 110              		.loc 1 424 23 is_stmt 0 view .LVU24
 111 0060 1023     		movs	r3, #16
 112 0062 0493     		str	r3, [sp, #16]
 425:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 425 3 is_stmt 1 view .LVU25
 114              		.loc 1 425 24 is_stmt 0 view .LVU26
 115 0064 4FF00108 		mov	r8, #1
 116 0068 CDF81480 		str	r8, [sp, #20]
 426:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 426 3 is_stmt 1 view .LVU27
 118              		.loc 1 426 24 is_stmt 0 view .LVU28
 119 006c 0694     		str	r4, [sp, #24]
 427:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 427 3 is_stmt 1 view .LVU29
 121              		.loc 1 427 25 is_stmt 0 view .LVU30
 122 006e 0227     		movs	r7, #2
 123 0070 0797     		str	r7, [sp, #28]
 428:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 428 3 is_stmt 1 view .LVU31
 125 0072 0DEB0301 		add	r1, sp, r3
 126 0076 3046     		mov	r0, r6
 127 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 431:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 129              		.loc 1 431 3 view .LVU32
 130              		.loc 1 431 23 is_stmt 0 view .LVU33
 131 007c 0323     		movs	r3, #3
 132 007e 0493     		str	r3, [sp, #16]
 432:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 133              		.loc 1 432 3 is_stmt 1 view .LVU34
 134              		.loc 1 432 24 is_stmt 0 view .LVU35
 135 0080 CDF81480 		str	r8, [sp, #20]
 433:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 433 3 is_stmt 1 view .LVU36
 137              		.loc 1 433 24 is_stmt 0 view .LVU37
 138 0084 0694     		str	r4, [sp, #24]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 11


 434:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 434 3 is_stmt 1 view .LVU38
 140              		.loc 1 434 25 is_stmt 0 view .LVU39
 141 0086 0797     		str	r7, [sp, #28]
 435:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 435 3 is_stmt 1 view .LVU40
 143 0088 04A9     		add	r1, sp, #16
 144 008a 2846     		mov	r0, r5
 145 008c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 438:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 147              		.loc 1 438 3 view .LVU41
 148              		.loc 1 438 23 is_stmt 0 view .LVU42
 149 0090 4FF40043 		mov	r3, #32768
 150 0094 0493     		str	r3, [sp, #16]
 439:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 151              		.loc 1 439 3 is_stmt 1 view .LVU43
 152              		.loc 1 439 24 is_stmt 0 view .LVU44
 153 0096 1C4F     		ldr	r7, .L3+12
 154 0098 0597     		str	r7, [sp, #20]
 440:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 440 3 is_stmt 1 view .LVU45
 156              		.loc 1 440 24 is_stmt 0 view .LVU46
 157 009a 0694     		str	r4, [sp, #24]
 441:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 158              		.loc 1 441 3 is_stmt 1 view .LVU47
 159 009c 04A9     		add	r1, sp, #16
 160 009e 3046     		mov	r0, r6
 161 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL4:
 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 PB5 */
 444:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 163              		.loc 1 444 3 view .LVU48
 164              		.loc 1 444 23 is_stmt 0 view .LVU49
 165 00a4 3823     		movs	r3, #56
 166 00a6 0493     		str	r3, [sp, #16]
 445:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 167              		.loc 1 445 3 is_stmt 1 view .LVU50
 168              		.loc 1 445 24 is_stmt 0 view .LVU51
 169 00a8 0597     		str	r7, [sp, #20]
 446:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 446 3 is_stmt 1 view .LVU52
 171              		.loc 1 446 24 is_stmt 0 view .LVU53
 172 00aa 0694     		str	r4, [sp, #24]
 447:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 173              		.loc 1 447 3 is_stmt 1 view .LVU54
 174 00ac 04A9     		add	r1, sp, #16
 175 00ae 2846     		mov	r0, r5
 176 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL5:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   /* EXTI interrupt init*/
 450:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 178              		.loc 1 450 3 view .LVU55
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 12


 179 00b4 2246     		mov	r2, r4
 180 00b6 0521     		movs	r1, #5
 181 00b8 0920     		movs	r0, #9
 182 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183              	.LVL6:
 451:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 184              		.loc 1 451 3 view .LVU56
 185 00be 0920     		movs	r0, #9
 186 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 187              	.LVL7:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 188              		.loc 1 453 3 view .LVU57
 189 00c4 2246     		mov	r2, r4
 190 00c6 0521     		movs	r1, #5
 191 00c8 0A20     		movs	r0, #10
 192 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL8:
 454:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 194              		.loc 1 454 3 view .LVU58
 195 00ce 0A20     		movs	r0, #10
 196 00d0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL9:
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 198              		.loc 1 456 3 view .LVU59
 199 00d4 2246     		mov	r2, r4
 200 00d6 0521     		movs	r1, #5
 201 00d8 1720     		movs	r0, #23
 202 00da FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL10:
 457:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 204              		.loc 1 457 3 view .LVU60
 205 00de 1720     		movs	r0, #23
 206 00e0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL11:
 458:Core/Src/main.c **** 
 459:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 208              		.loc 1 459 3 view .LVU61
 209 00e4 2246     		mov	r2, r4
 210 00e6 0521     		movs	r1, #5
 211 00e8 2820     		movs	r0, #40
 212 00ea FFF7FEFF 		bl	HAL_NVIC_SetPriority
 213              	.LVL12:
 460:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 214              		.loc 1 460 3 view .LVU62
 215 00ee 2820     		movs	r0, #40
 216 00f0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 217              	.LVL13:
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** }
 218              		.loc 1 462 1 is_stmt 0 view .LVU63
 219 00f4 08B0     		add	sp, sp, #32
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 24
 222              		@ sp needed
 223 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 13


 224              	.L4:
 225 00fa 00BF     		.align	2
 226              	.L3:
 227 00fc 00100240 		.word	1073876992
 228 0100 00080140 		.word	1073809408
 229 0104 000C0140 		.word	1073810432
 230 0108 00001110 		.word	269549568
 231              		.cfi_endproc
 232              	.LFE81:
 234              		.section	.text.StartReceiveDataFromGUI,"ax",%progbits
 235              		.align	1
 236              		.global	StartReceiveDataFromGUI
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	StartReceiveDataFromGUI:
 242              	.LFB82:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** void StartReceiveDataFromGUI(void *pvParameters)
 467:Core/Src/main.c **** {
 243              		.loc 1 467 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL14:
 249              		.loc 1 467 1 is_stmt 0 view .LVU65
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 255              	.LVL15:
 256              	.L6:
 468:Core/Src/main.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
 469:Core/Src/main.c ****   for(;;)
 257              		.loc 1 469 3 is_stmt 1 view .LVU66
 470:Core/Src/main.c ****   {
 471:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreUSB, portMAX_DELAY) == pdTRUE)
 258              		.loc 1 471 5 view .LVU67
 259              		.loc 1 471 8 is_stmt 0 view .LVU68
 260 0002 4FF0FF31 		mov	r1, #-1
 261 0006 064B     		ldr	r3, .L9
 262 0008 1868     		ldr	r0, [r3]
 263 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 264              	.LVL16:
 265              		.loc 1 471 7 view .LVU69
 266 000e 0128     		cmp	r0, #1
 267 0010 F7D1     		bne	.L6
 472:Core/Src/main.c ****     {
 473:Core/Src/main.c ****       ReceiveDataFromGUI(&cnc, xSemaphoreMode); 
 268              		.loc 1 473 7 is_stmt 1 view .LVU70
 269 0012 044B     		ldr	r3, .L9+4
 270 0014 1968     		ldr	r1, [r3]
 271 0016 0448     		ldr	r0, .L9+8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 14


 272 0018 FFF7FEFF 		bl	ReceiveDataFromGUI
 273              	.LVL17:
 274 001c F1E7     		b	.L6
 275              	.L10:
 276 001e 00BF     		.align	2
 277              	.L9:
 278 0020 00000000 		.word	.LANCHOR0
 279 0024 00000000 		.word	.LANCHOR1
 280 0028 00000000 		.word	.LANCHOR2
 281              		.cfi_endproc
 282              	.LFE82:
 284              		.section	.text.StartCheckUSBConnect,"ax",%progbits
 285              		.align	1
 286              		.global	StartCheckUSBConnect
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	StartCheckUSBConnect:
 292              	.LFB83:
 474:Core/Src/main.c ****     }
 475:Core/Src/main.c ****   }
 476:Core/Src/main.c **** }
 477:Core/Src/main.c **** 
 478:Core/Src/main.c **** void StartCheckUSBConnect(void *pvParameters)
 479:Core/Src/main.c **** {
 293              		.loc 1 479 1 view -0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              	.LVL18:
 299              		.loc 1 479 1 is_stmt 0 view .LVU72
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI4:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 305              	.LVL19:
 306              	.L12:
 480:Core/Src/main.c ****   for(;;)
 307              		.loc 1 480 3 is_stmt 1 view .LVU73
 308              	.LBB7:
 481:Core/Src/main.c ****     {
 482:Core/Src/main.c ****       osDelay(1000);
 309              		.loc 1 482 7 view .LVU74
 310 0002 4FF47A70 		mov	r0, #1000
 311 0006 FFF7FEFF 		bl	osDelay
 312              	.LVL20:
 483:Core/Src/main.c ****       if(cnc.state == 1) 
 313              		.loc 1 483 7 view .LVU75
 314              		.loc 1 483 13 is_stmt 0 view .LVU76
 315 000a 0D4B     		ldr	r3, .L15
 316 000c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 317              		.loc 1 483 9 view .LVU77
 318 0010 012B     		cmp	r3, #1
 319 0012 F6D1     		bne	.L12
 484:Core/Src/main.c ****       {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 15


 485:Core/Src/main.c ****         if(!(hUsbDeviceFS.dev_state == USBD_STATE_CONFIGURED))
 320              		.loc 1 485 9 is_stmt 1 view .LVU78
 321              		.loc 1 485 26 is_stmt 0 view .LVU79
 322 0014 0B4B     		ldr	r3, .L15+4
 323 0016 93F89C32 		ldrb	r3, [r3, #668]	@ zero_extendqisi2
 324              		.loc 1 485 11 view .LVU80
 325 001a 032B     		cmp	r3, #3
 326 001c F1D0     		beq	.L12
 486:Core/Src/main.c ****         {
 487:Core/Src/main.c ****           // alarm when error connect 
 488:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Led, GPIO_PIN_RESET);
 327              		.loc 1 488 11 is_stmt 1 view .LVU81
 328 001e 084C     		ldr	r4, .L15
 329 0020 094D     		ldr	r5, .L15+8
 330 0022 0022     		movs	r2, #0
 331 0024 6189     		ldrh	r1, [r4, #10]
 332 0026 2846     		mov	r0, r5
 333 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL21:
 489:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Buzzer, GPIO_PIN_SET);
 335              		.loc 1 489 11 view .LVU82
 336 002c 0122     		movs	r2, #1
 337 002e A189     		ldrh	r1, [r4, #12]
 338 0030 2846     		mov	r0, r5
 339 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 340              	.LVL22:
 490:Core/Src/main.c ****           cnc.state = 2; // mode error connect with GUI
 341              		.loc 1 490 11 view .LVU83
 342              		.loc 1 490 21 is_stmt 0 view .LVU84
 343 0036 0223     		movs	r3, #2
 344 0038 84F86830 		strb	r3, [r4, #104]
 345 003c E1E7     		b	.L12
 346              	.L16:
 347 003e 00BF     		.align	2
 348              	.L15:
 349 0040 00000000 		.word	.LANCHOR2
 350 0044 00000000 		.word	hUsbDeviceFS
 351 0048 000C0140 		.word	1073810432
 352              	.LBE7:
 353              		.cfi_endproc
 354              	.LFE83:
 356              		.section	.text.StartProcessBtnPress,"ax",%progbits
 357              		.align	1
 358              		.global	StartProcessBtnPress
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	StartProcessBtnPress:
 364              	.LFB84:
 491:Core/Src/main.c ****         }    
 492:Core/Src/main.c ****       }
 493:Core/Src/main.c ****       // else if(cnc.state == 2)
 494:Core/Src/main.c ****       // {
 495:Core/Src/main.c ****       //   HAL_GPIO_TogglePin(GPIOB, cnc.Led);
 496:Core/Src/main.c ****       // }      
 497:Core/Src/main.c ****     } 
 498:Core/Src/main.c **** }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 16


 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** void StartProcessBtnPress(void *pvParameters)
 501:Core/Src/main.c **** {
 365              		.loc 1 501 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ Volatile: function does not return.
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              	.LVL23:
 371              		.loc 1 501 1 is_stmt 0 view .LVU86
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 377              	.LVL24:
 378              	.L18:
 502:Core/Src/main.c ****   for(;;)
 379              		.loc 1 502 3 is_stmt 1 view .LVU87
 503:Core/Src/main.c ****   {
 504:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreBtn, portMAX_DELAY) == pdTRUE)
 380              		.loc 1 504 5 view .LVU88
 381              		.loc 1 504 8 is_stmt 0 view .LVU89
 382 0002 4FF0FF31 		mov	r1, #-1
 383 0006 054B     		ldr	r3, .L21
 384 0008 1868     		ldr	r0, [r3]
 385 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 386              	.LVL25:
 387              		.loc 1 504 7 view .LVU90
 388 000e 0128     		cmp	r0, #1
 389 0010 F7D1     		bne	.L18
 505:Core/Src/main.c ****     {
 506:Core/Src/main.c ****       ProcessBtnPress(&cnc);
 390              		.loc 1 506 7 is_stmt 1 view .LVU91
 391 0012 0348     		ldr	r0, .L21+4
 392 0014 FFF7FEFF 		bl	ProcessBtnPress
 393              	.LVL26:
 394 0018 F3E7     		b	.L18
 395              	.L22:
 396 001a 00BF     		.align	2
 397              	.L21:
 398 001c 00000000 		.word	.LANCHOR3
 399 0020 00000000 		.word	.LANCHOR2
 400              		.cfi_endproc
 401              	.LFE84:
 403              		.section	.text.StartProcessMode,"ax",%progbits
 404              		.align	1
 405              		.global	StartProcessMode
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	StartProcessMode:
 411              	.LFB85:
 507:Core/Src/main.c ****     }
 508:Core/Src/main.c ****   }    
 509:Core/Src/main.c **** }
 510:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 17


 511:Core/Src/main.c **** void StartProcessMode(void *pvParameters)
 512:Core/Src/main.c **** {
 412              		.loc 1 512 1 view -0
 413              		.cfi_startproc
 414              		@ Volatile: function does not return.
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL27:
 418              		.loc 1 512 1 is_stmt 0 view .LVU93
 419 0000 08B5     		push	{r3, lr}
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
 424              	.LVL28:
 425              	.L24:
 513:Core/Src/main.c ****   for(;;)
 426              		.loc 1 513 3 is_stmt 1 view .LVU94
 514:Core/Src/main.c ****   {
 515:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreMode, portMAX_DELAY) == pdTRUE)
 427              		.loc 1 515 5 view .LVU95
 428              		.loc 1 515 8 is_stmt 0 view .LVU96
 429 0002 4FF0FF31 		mov	r1, #-1
 430 0006 054B     		ldr	r3, .L27
 431 0008 1868     		ldr	r0, [r3]
 432 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 433              	.LVL29:
 434              		.loc 1 515 7 view .LVU97
 435 000e 0128     		cmp	r0, #1
 436 0010 F7D1     		bne	.L24
 516:Core/Src/main.c ****     {
 517:Core/Src/main.c ****       ProcessMode(&cnc);
 437              		.loc 1 517 7 is_stmt 1 view .LVU98
 438 0012 0348     		ldr	r0, .L27+4
 439 0014 FFF7FEFF 		bl	ProcessMode
 440              	.LVL30:
 441 0018 F3E7     		b	.L24
 442              	.L28:
 443 001a 00BF     		.align	2
 444              	.L27:
 445 001c 00000000 		.word	.LANCHOR1
 446 0020 00000000 		.word	.LANCHOR2
 447              		.cfi_endproc
 448              	.LFE85:
 450              		.section	.text.DefaultTask,"ax",%progbits
 451              		.align	1
 452              		.global	DefaultTask
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	DefaultTask:
 458              	.LFB87:
 518:Core/Src/main.c ****     }
 519:Core/Src/main.c ****   }
 520:Core/Src/main.c **** }
 521:Core/Src/main.c **** 
 522:Core/Src/main.c **** void StartReceiveDataFromCNC(void *pvParameters)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 18


 523:Core/Src/main.c **** {
 524:Core/Src/main.c ****   for(;;)
 525:Core/Src/main.c ****   {
 526:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreUART, portMAX_DELAY) == pdTRUE)
 527:Core/Src/main.c ****     {
 528:Core/Src/main.c ****       ReceiveDataFromCNC(&cnc);
 529:Core/Src/main.c ****       uart_clear_receive_buffer_and_start_receive_IT();
 530:Core/Src/main.c ****     }
 531:Core/Src/main.c ****   }
 532:Core/Src/main.c **** }
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** //-----------SD config-------------------------
 535:Core/Src/main.c **** 
 536:Core/Src/main.c **** // volatile uint8_t FatFsCnt = 0;
 537:Core/Src/main.c **** // volatile uint8_t Timer1, Timer2;
 538:Core/Src/main.c **** 
 539:Core/Src/main.c **** // void SDTimer_Handler(void)
 540:Core/Src/main.c **** // {
 541:Core/Src/main.c **** //   if(Timer1 > 0)
 542:Core/Src/main.c **** //     Timer1--;
 543:Core/Src/main.c **** //   if(Timer2 > 0);
 544:Core/Src/main.c **** //     Timer2--;
 545:Core/Src/main.c **** // }
 546:Core/Src/main.c **** 
 547:Core/Src/main.c **** /* USER CODE END 4 */
 548:Core/Src/main.c **** 
 549:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 550:Core/Src/main.c **** /**
 551:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 552:Core/Src/main.c ****   * @param  argument: Not used
 553:Core/Src/main.c ****   * @retval None
 554:Core/Src/main.c ****   */
 555:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 556:Core/Src/main.c **** void DefaultTask(void *pvParameters)
 557:Core/Src/main.c **** {
 459              		.loc 1 557 1 view -0
 460              		.cfi_startproc
 461              		@ Volatile: function does not return.
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	.LVL31:
 465              		.loc 1 557 1 is_stmt 0 view .LVU100
 466 0000 08B5     		push	{r3, lr}
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 3, -8
 470              		.cfi_offset 14, -4
 471              	.LVL32:
 472              	.L30:
 558:Core/Src/main.c ****   /* init code for USB_DEVICE */
 559:Core/Src/main.c ****   //MX_USB_DEVICE_Init();
 560:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 561:Core/Src/main.c ****   /* Infinite loop */
 562:Core/Src/main.c ****   for(;;)
 473              		.loc 1 562 3 is_stmt 1 discriminator 1 view .LVU101
 563:Core/Src/main.c ****   {
 564:Core/Src/main.c ****     vTaskDelay(1);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 19


 474              		.loc 1 564 5 discriminator 1 view .LVU102
 475 0002 0120     		movs	r0, #1
 476 0004 FFF7FEFF 		bl	vTaskDelay
 477              	.LVL33:
 562:Core/Src/main.c ****   {
 478              		.loc 1 562 8 discriminator 1 view .LVU103
 479 0008 FBE7     		b	.L30
 480              		.cfi_endproc
 481              	.LFE87:
 483              		.section	.text.uart_clear_receive_buffer_and_start_receive_IT,"ax",%progbits
 484              		.align	1
 485              		.global	uart_clear_receive_buffer_and_start_receive_IT
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 490              	uart_clear_receive_buffer_and_start_receive_IT:
 491              	.LFB73:
  98:Core/Src/main.c ****     // Đọc dữ liệu trong bộ nhận cho đến khi không còn dữ liệu trong buffer
 492              		.loc 1 98 1 view -0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 0
 495              		@ frame_needed = 0, uses_anonymous_args = 0
 496 0000 08B5     		push	{r3, lr}
 497              	.LCFI8:
 498              		.cfi_def_cfa_offset 8
 499              		.cfi_offset 3, -8
 500              		.cfi_offset 14, -4
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 501              		.loc 1 100 5 view .LVU105
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 502              		.loc 1 100 11 is_stmt 0 view .LVU106
 503 0002 00E0     		b	.L33
 504              	.L34:
 505              	.LBB8:
 101:Core/Src/main.c ****     }
 506              		.loc 1 101 9 is_stmt 1 view .LVU107
 101:Core/Src/main.c ****     }
 507              		.loc 1 101 42 is_stmt 0 view .LVU108
 508 0004 5B68     		ldr	r3, [r3, #4]
 509              	.L33:
 510              	.LBE8:
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 511              		.loc 1 100 11 is_stmt 1 view .LVU109
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 512              		.loc 1 100 12 is_stmt 0 view .LVU110
 513 0006 064B     		ldr	r3, .L36
 514 0008 1B68     		ldr	r3, [r3]
 515 000a 1A68     		ldr	r2, [r3]
 100:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 516              		.loc 1 100 11 view .LVU111
 517 000c 12F0200F 		tst	r2, #32
 518 0010 F8D1     		bne	.L34
 103:Core/Src/main.c **** }
 519              		.loc 1 103 5 is_stmt 1 view .LVU112
 520 0012 0122     		movs	r2, #1
 521 0014 0349     		ldr	r1, .L36+4
 522 0016 0248     		ldr	r0, .L36
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 20


 523 0018 FFF7FEFF 		bl	HAL_UART_Receive_IT
 524              	.LVL34:
 104:Core/Src/main.c **** 
 525              		.loc 1 104 1 is_stmt 0 view .LVU113
 526 001c 08BD     		pop	{r3, pc}
 527              	.L37:
 528 001e 00BF     		.align	2
 529              	.L36:
 530 0020 00000000 		.word	.LANCHOR4
 531 0024 7F000000 		.word	.LANCHOR2+127
 532              		.cfi_endproc
 533              	.LFE73:
 535              		.section	.text.StartReceiveDataFromCNC,"ax",%progbits
 536              		.align	1
 537              		.global	StartReceiveDataFromCNC
 538              		.syntax unified
 539              		.thumb
 540              		.thumb_func
 542              	StartReceiveDataFromCNC:
 543              	.LFB86:
 523:Core/Src/main.c ****   for(;;)
 544              		.loc 1 523 1 is_stmt 1 view -0
 545              		.cfi_startproc
 546              		@ Volatile: function does not return.
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL35:
 523:Core/Src/main.c ****   for(;;)
 550              		.loc 1 523 1 is_stmt 0 view .LVU115
 551 0000 08B5     		push	{r3, lr}
 552              	.LCFI9:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 3, -8
 555              		.cfi_offset 14, -4
 556              	.LVL36:
 557              	.L39:
 524:Core/Src/main.c ****   {
 558              		.loc 1 524 3 is_stmt 1 view .LVU116
 526:Core/Src/main.c ****     {
 559              		.loc 1 526 5 view .LVU117
 526:Core/Src/main.c ****     {
 560              		.loc 1 526 8 is_stmt 0 view .LVU118
 561 0002 4FF0FF31 		mov	r1, #-1
 562 0006 064B     		ldr	r3, .L42
 563 0008 1868     		ldr	r0, [r3]
 564 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 565              	.LVL37:
 526:Core/Src/main.c ****     {
 566              		.loc 1 526 7 view .LVU119
 567 000e 0128     		cmp	r0, #1
 568 0010 F7D1     		bne	.L39
 528:Core/Src/main.c ****       uart_clear_receive_buffer_and_start_receive_IT();
 569              		.loc 1 528 7 is_stmt 1 view .LVU120
 570 0012 0448     		ldr	r0, .L42+4
 571 0014 FFF7FEFF 		bl	ReceiveDataFromCNC
 572              	.LVL38:
 529:Core/Src/main.c ****     }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 21


 573              		.loc 1 529 7 view .LVU121
 574 0018 FFF7FEFF 		bl	uart_clear_receive_buffer_and_start_receive_IT
 575              	.LVL39:
 576 001c F1E7     		b	.L39
 577              	.L43:
 578 001e 00BF     		.align	2
 579              	.L42:
 580 0020 00000000 		.word	.LANCHOR5
 581 0024 00000000 		.word	.LANCHOR2
 582              		.cfi_endproc
 583              	.LFE86:
 585              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 586              		.align	1
 587              		.global	HAL_GPIO_EXTI_Callback
 588              		.syntax unified
 589              		.thumb
 590              		.thumb_func
 592              	HAL_GPIO_EXTI_Callback:
 593              	.LVL40:
 594              	.LFB74:
 107:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 595              		.loc 1 107 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 599              		.loc 1 107 1 is_stmt 0 view .LVU123
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI10:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
 109:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 605              		.loc 1 109 3 is_stmt 1 view .LVU124
 110:Core/Src/main.c ****   {
 606              		.loc 1 110 3 view .LVU125
 110:Core/Src/main.c ****   {
 607              		.loc 1 110 21 is_stmt 0 view .LVU126
 608 0002 124B     		ldr	r3, .L53
 609 0004 1B88     		ldrh	r3, [r3]
 110:Core/Src/main.c ****   {
 610              		.loc 1 110 5 view .LVU127
 611 0006 8342     		cmp	r3, r0
 612 0008 0FD0     		beq	.L50
 114:Core/Src/main.c ****   {
 613              		.loc 1 114 8 is_stmt 1 view .LVU128
 114:Core/Src/main.c ****   {
 614              		.loc 1 114 26 is_stmt 0 view .LVU129
 615 000a 104B     		ldr	r3, .L53
 616 000c 5B88     		ldrh	r3, [r3, #2]
 114:Core/Src/main.c ****   {
 617              		.loc 1 114 10 view .LVU130
 618 000e 8342     		cmp	r3, r0
 619 0010 14D0     		beq	.L51
 118:Core/Src/main.c ****   {
 620              		.loc 1 118 8 is_stmt 1 view .LVU131
 118:Core/Src/main.c ****   {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 22


 621              		.loc 1 118 26 is_stmt 0 view .LVU132
 622 0012 0E4B     		ldr	r3, .L53
 623 0014 9B88     		ldrh	r3, [r3, #4]
 118:Core/Src/main.c ****   {
 624              		.loc 1 118 10 view .LVU133
 625 0016 8342     		cmp	r3, r0
 626 0018 14D0     		beq	.L52
 122:Core/Src/main.c ****   {
 627              		.loc 1 122 8 is_stmt 1 view .LVU134
 122:Core/Src/main.c ****   {
 628              		.loc 1 122 26 is_stmt 0 view .LVU135
 629 001a 0C4B     		ldr	r3, .L53
 630 001c DB88     		ldrh	r3, [r3, #6]
 122:Core/Src/main.c ****   {
 631              		.loc 1 122 10 view .LVU136
 632 001e 8342     		cmp	r3, r0
 633 0020 06D1     		bne	.L46
 124:Core/Src/main.c ****   }
 634              		.loc 1 124 5 is_stmt 1 view .LVU137
 124:Core/Src/main.c ****   }
 635              		.loc 1 124 18 is_stmt 0 view .LVU138
 636 0022 0A4B     		ldr	r3, .L53
 637 0024 0422     		movs	r2, #4
 638 0026 1A72     		strb	r2, [r3, #8]
 639 0028 02E0     		b	.L46
 640              	.L50:
 112:Core/Src/main.c ****   }
 641              		.loc 1 112 5 is_stmt 1 view .LVU139
 112:Core/Src/main.c ****   }
 642              		.loc 1 112 18 is_stmt 0 view .LVU140
 643 002a 084B     		ldr	r3, .L53
 644 002c 0122     		movs	r2, #1
 645 002e 1A72     		strb	r2, [r3, #8]
 646              	.L46:
 126:Core/Src/main.c ****   xSemaphoreGiveFromISR(xSemaphoreBtn, xHigherPriorityTaskWoken);
 647              		.loc 1 126 3 is_stmt 1 view .LVU141
 648              	.LVL41:
 127:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 649              		.loc 1 127 3 view .LVU142
 650 0030 0021     		movs	r1, #0
 651 0032 074B     		ldr	r3, .L53+4
 652 0034 1868     		ldr	r0, [r3]
 653              	.LVL42:
 127:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 654              		.loc 1 127 3 is_stmt 0 view .LVU143
 655 0036 FFF7FEFF 		bl	xQueueGiveFromISR
 656              	.LVL43:
 128:Core/Src/main.c **** }
 657              		.loc 1 128 3 is_stmt 1 view .LVU144
 128:Core/Src/main.c **** }
 658              		.loc 1 128 47 view .LVU145
 129:Core/Src/main.c **** 
 659              		.loc 1 129 1 is_stmt 0 view .LVU146
 660 003a 08BD     		pop	{r3, pc}
 661              	.LVL44:
 662              	.L51:
 116:Core/Src/main.c ****   }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 23


 663              		.loc 1 116 5 is_stmt 1 view .LVU147
 116:Core/Src/main.c ****   }
 664              		.loc 1 116 18 is_stmt 0 view .LVU148
 665 003c 034B     		ldr	r3, .L53
 666 003e 0222     		movs	r2, #2
 667 0040 1A72     		strb	r2, [r3, #8]
 668 0042 F5E7     		b	.L46
 669              	.L52:
 120:Core/Src/main.c ****   }
 670              		.loc 1 120 5 is_stmt 1 view .LVU149
 120:Core/Src/main.c ****   }
 671              		.loc 1 120 18 is_stmt 0 view .LVU150
 672 0044 014B     		ldr	r3, .L53
 673 0046 0322     		movs	r2, #3
 674 0048 1A72     		strb	r2, [r3, #8]
 675 004a F1E7     		b	.L46
 676              	.L54:
 677              		.align	2
 678              	.L53:
 679 004c 00000000 		.word	.LANCHOR2
 680 0050 00000000 		.word	.LANCHOR3
 681              		.cfi_endproc
 682              	.LFE74:
 684              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 685              		.align	1
 686              		.global	HAL_UART_RxCpltCallback
 687              		.syntax unified
 688              		.thumb
 689              		.thumb_func
 691              	HAL_UART_RxCpltCallback:
 692              	.LVL45:
 693              	.LFB75:
 132:Core/Src/main.c ****   UNUSED(huart);
 694              		.loc 1 132 1 is_stmt 1 view -0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 132:Core/Src/main.c ****   UNUSED(huart);
 698              		.loc 1 132 1 is_stmt 0 view .LVU152
 699 0000 08B5     		push	{r3, lr}
 700              	.LCFI11:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 3, -8
 703              		.cfi_offset 14, -4
 133:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 704              		.loc 1 133 3 is_stmt 1 view .LVU153
 134:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '!') //line feed Ascii
 705              		.loc 1 134 2 view .LVU154
 134:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '!') //line feed Ascii
 706              		.loc 1 134 10 is_stmt 0 view .LVU155
 707 0002 0268     		ldr	r2, [r0]
 134:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '!') //line feed Ascii
 708              		.loc 1 134 30 view .LVU156
 709 0004 0F4B     		ldr	r3, .L60
 710 0006 1B68     		ldr	r3, [r3]
 134:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '!') //line feed Ascii
 711              		.loc 1 134 4 view .LVU157
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 24


 712 0008 9A42     		cmp	r2, r3
 713 000a 00D0     		beq	.L59
 714              	.LVL46:
 715              	.L55:
 150:Core/Src/main.c **** 
 716              		.loc 1 150 1 view .LVU158
 717 000c 08BD     		pop	{r3, pc}
 718              	.LVL47:
 719              	.L59:
 135:Core/Src/main.c **** 		{
 720              		.loc 1 135 4 is_stmt 1 view .LVU159
 135:Core/Src/main.c **** 		{
 721              		.loc 1 135 15 is_stmt 0 view .LVU160
 722 000e 0E4B     		ldr	r3, .L60+4
 723 0010 93F87F20 		ldrb	r2, [r3, #127]	@ zero_extendqisi2
 135:Core/Src/main.c **** 		{
 724              		.loc 1 135 6 view .LVU161
 725 0014 212A     		cmp	r2, #33
 726 0016 0ED0     		beq	.L57
 137:Core/Src/main.c **** 		}
 727              		.loc 1 137 4 is_stmt 1 view .LVU162
 137:Core/Src/main.c **** 		}
 728              		.loc 1 137 40 is_stmt 0 view .LVU163
 729 0018 1946     		mov	r1, r3
 730 001a 93F88030 		ldrb	r3, [r3, #128]	@ zero_extendqisi2
 137:Core/Src/main.c **** 		}
 731              		.loc 1 137 46 view .LVU164
 732 001e 581C     		adds	r0, r3, #1
 733              	.LVL48:
 137:Core/Src/main.c **** 		}
 734              		.loc 1 137 46 view .LVU165
 735 0020 81F88000 		strb	r0, [r1, #128]
 137:Core/Src/main.c **** 		}
 736              		.loc 1 137 50 view .LVU166
 737 0024 0B44     		add	r3, r3, r1
 738 0026 83F88120 		strb	r2, [r3, #129]
 148:Core/Src/main.c **** 	}
 739              		.loc 1 148 3 is_stmt 1 view .LVU167
 740 002a 0122     		movs	r2, #1
 741 002c 7F31     		adds	r1, r1, #127
 742 002e 0548     		ldr	r0, .L60
 743 0030 FFF7FEFF 		bl	HAL_UART_Receive_IT
 744              	.LVL49:
 745 0034 EAE7     		b	.L55
 746              	.LVL50:
 747              	.L57:
 139:Core/Src/main.c **** 		{
 748              		.loc 1 139 8 view .LVU168
 749              	.LBB9:
 143:Core/Src/main.c ****       xSemaphoreGiveFromISR(xSemaphoreUART, xHigherPriorityTaskWoken);
 750              		.loc 1 143 7 view .LVU169
 144:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 751              		.loc 1 144 7 view .LVU170
 752 0036 0021     		movs	r1, #0
 753 0038 044B     		ldr	r3, .L60+8
 754 003a 1868     		ldr	r0, [r3]
 755              	.LVL51:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 25


 144:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 756              		.loc 1 144 7 is_stmt 0 view .LVU171
 757 003c FFF7FEFF 		bl	xQueueGiveFromISR
 758              	.LVL52:
 145:Core/Src/main.c ****       return;	
 759              		.loc 1 145 7 is_stmt 1 view .LVU172
 145:Core/Src/main.c ****       return;	
 760              		.loc 1 145 51 view .LVU173
 146:Core/Src/main.c **** 		}	
 761              		.loc 1 146 7 view .LVU174
 762 0040 E4E7     		b	.L55
 763              	.L61:
 764 0042 00BF     		.align	2
 765              	.L60:
 766 0044 00000000 		.word	.LANCHOR4
 767 0048 00000000 		.word	.LANCHOR2
 768 004c 00000000 		.word	.LANCHOR5
 769              	.LBE9:
 770              		.cfi_endproc
 771              	.LFE75:
 773              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 774              		.align	1
 775              		.global	HAL_TIM_PeriodElapsedCallback
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 780              	HAL_TIM_PeriodElapsedCallback:
 781              	.LVL53:
 782              	.LFB88:
 565:Core/Src/main.c ****   }
 566:Core/Src/main.c ****   /* USER CODE END 5 */
 567:Core/Src/main.c **** }
 568:Core/Src/main.c **** 
 569:Core/Src/main.c **** /**
 570:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 571:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 572:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 573:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 574:Core/Src/main.c ****   * @param  htim : TIM handle
 575:Core/Src/main.c ****   * @retval None
 576:Core/Src/main.c ****   */
 577:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 578:Core/Src/main.c **** {
 783              		.loc 1 578 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		.loc 1 578 1 is_stmt 0 view .LVU176
 788 0000 08B5     		push	{r3, lr}
 789              	.LCFI12:
 790              		.cfi_def_cfa_offset 8
 791              		.cfi_offset 3, -8
 792              		.cfi_offset 14, -4
 579:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 582:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 26


 583:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 584:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 793              		.loc 1 584 3 is_stmt 1 view .LVU177
 794              		.loc 1 584 11 is_stmt 0 view .LVU178
 795 0002 0268     		ldr	r2, [r0]
 796              		.loc 1 584 6 view .LVU179
 797 0004 034B     		ldr	r3, .L66
 798 0006 9A42     		cmp	r2, r3
 799 0008 00D0     		beq	.L65
 800              	.LVL54:
 801              	.L62:
 585:Core/Src/main.c **** 
 586:Core/Src/main.c ****     // FatFsCnt ++;
 587:Core/Src/main.c ****     // if(FatFsCnt >= 10)
 588:Core/Src/main.c ****     // {
 589:Core/Src/main.c ****     //   FatFsCnt = 0;
 590:Core/Src/main.c ****     //   SDTimer_Handler();
 591:Core/Src/main.c ****     // }
 592:Core/Src/main.c ****     HAL_IncTick();
 593:Core/Src/main.c ****   }
 594:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 595:Core/Src/main.c **** 
 596:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 597:Core/Src/main.c **** }
 802              		.loc 1 597 1 view .LVU180
 803 000a 08BD     		pop	{r3, pc}
 804              	.LVL55:
 805              	.L65:
 592:Core/Src/main.c ****   }
 806              		.loc 1 592 5 is_stmt 1 view .LVU181
 807 000c FFF7FEFF 		bl	HAL_IncTick
 808              	.LVL56:
 809              		.loc 1 597 1 is_stmt 0 view .LVU182
 810 0010 FBE7     		b	.L62
 811              	.L67:
 812 0012 00BF     		.align	2
 813              	.L66:
 814 0014 002C0140 		.word	1073818624
 815              		.cfi_endproc
 816              	.LFE88:
 818              		.section	.text.Error_Handler,"ax",%progbits
 819              		.align	1
 820              		.global	Error_Handler
 821              		.syntax unified
 822              		.thumb
 823              		.thumb_func
 825              	Error_Handler:
 826              	.LFB89:
 598:Core/Src/main.c **** 
 599:Core/Src/main.c **** /**
 600:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 601:Core/Src/main.c ****   * @retval None
 602:Core/Src/main.c ****   */
 603:Core/Src/main.c **** void Error_Handler(void)
 604:Core/Src/main.c **** {
 827              		.loc 1 604 1 is_stmt 1 view -0
 828              		.cfi_startproc
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 27


 829              		@ Volatile: function does not return.
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 605:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 606:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 607:Core/Src/main.c ****   __disable_irq();
 833              		.loc 1 607 3 view .LVU184
 834              	.LBB10:
 835              	.LBI10:
 836              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 28


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 29


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 837              		.loc 2 140 27 view .LVU185
 838              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 839              		.loc 2 142 3 view .LVU186
 840              		.syntax unified
 841              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 842 0000 72B6     		cpsid i
 843              	@ 0 "" 2
 844              		.thumb
 845              		.syntax unified
 846              	.L69:
 847              	.LBE11:
 848              	.LBE10:
 608:Core/Src/main.c ****   while (1)
 849              		.loc 1 608 3 discriminator 1 view .LVU187
 609:Core/Src/main.c ****   {
 610:Core/Src/main.c ****   }
 850              		.loc 1 610 3 discriminator 1 view .LVU188
 608:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 30


 851              		.loc 1 608 9 discriminator 1 view .LVU189
 852 0002 FEE7     		b	.L69
 853              		.cfi_endproc
 854              	.LFE89:
 856              		.section	.text.MX_I2C1_Init,"ax",%progbits
 857              		.align	1
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 862              	MX_I2C1_Init:
 863              	.LFB78:
 304:Core/Src/main.c **** 
 864              		.loc 1 304 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868 0000 08B5     		push	{r3, lr}
 869              	.LCFI13:
 870              		.cfi_def_cfa_offset 8
 871              		.cfi_offset 3, -8
 872              		.cfi_offset 14, -4
 313:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 873              		.loc 1 313 3 view .LVU191
 313:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 874              		.loc 1 313 18 is_stmt 0 view .LVU192
 875 0002 0A48     		ldr	r0, .L74
 876 0004 0A4B     		ldr	r3, .L74+4
 877 0006 0360     		str	r3, [r0]
 314:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 878              		.loc 1 314 3 is_stmt 1 view .LVU193
 314:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 879              		.loc 1 314 25 is_stmt 0 view .LVU194
 880 0008 0A4B     		ldr	r3, .L74+8
 881 000a 4360     		str	r3, [r0, #4]
 315:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 882              		.loc 1 315 3 is_stmt 1 view .LVU195
 315:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 883              		.loc 1 315 24 is_stmt 0 view .LVU196
 884 000c 0023     		movs	r3, #0
 885 000e 8360     		str	r3, [r0, #8]
 316:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 886              		.loc 1 316 3 is_stmt 1 view .LVU197
 316:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 887              		.loc 1 316 26 is_stmt 0 view .LVU198
 888 0010 C360     		str	r3, [r0, #12]
 317:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 889              		.loc 1 317 3 is_stmt 1 view .LVU199
 317:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 890              		.loc 1 317 29 is_stmt 0 view .LVU200
 891 0012 4FF48042 		mov	r2, #16384
 892 0016 0261     		str	r2, [r0, #16]
 318:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 893              		.loc 1 318 3 is_stmt 1 view .LVU201
 318:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 894              		.loc 1 318 30 is_stmt 0 view .LVU202
 895 0018 4361     		str	r3, [r0, #20]
 319:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 31


 896              		.loc 1 319 3 is_stmt 1 view .LVU203
 319:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 897              		.loc 1 319 26 is_stmt 0 view .LVU204
 898 001a 8361     		str	r3, [r0, #24]
 320:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 899              		.loc 1 320 3 is_stmt 1 view .LVU205
 320:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 900              		.loc 1 320 30 is_stmt 0 view .LVU206
 901 001c C361     		str	r3, [r0, #28]
 321:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 902              		.loc 1 321 3 is_stmt 1 view .LVU207
 321:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 903              		.loc 1 321 28 is_stmt 0 view .LVU208
 904 001e 0362     		str	r3, [r0, #32]
 322:Core/Src/main.c ****   {
 905              		.loc 1 322 3 is_stmt 1 view .LVU209
 322:Core/Src/main.c ****   {
 906              		.loc 1 322 7 is_stmt 0 view .LVU210
 907 0020 FFF7FEFF 		bl	HAL_I2C_Init
 908              	.LVL57:
 322:Core/Src/main.c ****   {
 909              		.loc 1 322 6 view .LVU211
 910 0024 00B9     		cbnz	r0, .L73
 330:Core/Src/main.c **** 
 911              		.loc 1 330 1 view .LVU212
 912 0026 08BD     		pop	{r3, pc}
 913              	.L73:
 324:Core/Src/main.c ****   }
 914              		.loc 1 324 5 is_stmt 1 view .LVU213
 915 0028 FFF7FEFF 		bl	Error_Handler
 916              	.LVL58:
 917              	.L75:
 918              		.align	2
 919              	.L74:
 920 002c 00000000 		.word	.LANCHOR6
 921 0030 00540040 		.word	1073763328
 922 0034 A0860100 		.word	100000
 923              		.cfi_endproc
 924              	.LFE78:
 926              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 927              		.align	1
 928              		.syntax unified
 929              		.thumb
 930              		.thumb_func
 932              	MX_USART2_UART_Init:
 933              	.LFB80:
 376:Core/Src/main.c **** 
 934              		.loc 1 376 1 view -0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938 0000 08B5     		push	{r3, lr}
 939              	.LCFI14:
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 3, -8
 942              		.cfi_offset 14, -4
 385:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 32


 943              		.loc 1 385 3 view .LVU215
 385:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 944              		.loc 1 385 19 is_stmt 0 view .LVU216
 945 0002 0A48     		ldr	r0, .L80
 946 0004 0A4B     		ldr	r3, .L80+4
 947 0006 0360     		str	r3, [r0]
 386:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 948              		.loc 1 386 3 is_stmt 1 view .LVU217
 386:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 949              		.loc 1 386 24 is_stmt 0 view .LVU218
 950 0008 4FF4E133 		mov	r3, #115200
 951 000c 4360     		str	r3, [r0, #4]
 387:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 952              		.loc 1 387 3 is_stmt 1 view .LVU219
 387:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 953              		.loc 1 387 26 is_stmt 0 view .LVU220
 954 000e 0023     		movs	r3, #0
 955 0010 8360     		str	r3, [r0, #8]
 388:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 956              		.loc 1 388 3 is_stmt 1 view .LVU221
 388:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 957              		.loc 1 388 24 is_stmt 0 view .LVU222
 958 0012 C360     		str	r3, [r0, #12]
 389:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 959              		.loc 1 389 3 is_stmt 1 view .LVU223
 389:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 960              		.loc 1 389 22 is_stmt 0 view .LVU224
 961 0014 0361     		str	r3, [r0, #16]
 390:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 962              		.loc 1 390 3 is_stmt 1 view .LVU225
 390:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 963              		.loc 1 390 20 is_stmt 0 view .LVU226
 964 0016 0C22     		movs	r2, #12
 965 0018 4261     		str	r2, [r0, #20]
 391:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 966              		.loc 1 391 3 is_stmt 1 view .LVU227
 391:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 967              		.loc 1 391 25 is_stmt 0 view .LVU228
 968 001a 8361     		str	r3, [r0, #24]
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 969              		.loc 1 392 3 is_stmt 1 view .LVU229
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 970              		.loc 1 392 28 is_stmt 0 view .LVU230
 971 001c C361     		str	r3, [r0, #28]
 393:Core/Src/main.c ****   {
 972              		.loc 1 393 3 is_stmt 1 view .LVU231
 393:Core/Src/main.c ****   {
 973              		.loc 1 393 7 is_stmt 0 view .LVU232
 974 001e FFF7FEFF 		bl	HAL_UART_Init
 975              	.LVL59:
 393:Core/Src/main.c ****   {
 976              		.loc 1 393 6 view .LVU233
 977 0022 00B9     		cbnz	r0, .L79
 401:Core/Src/main.c **** 
 978              		.loc 1 401 1 view .LVU234
 979 0024 08BD     		pop	{r3, pc}
 980              	.L79:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 33


 395:Core/Src/main.c ****   }
 981              		.loc 1 395 5 is_stmt 1 view .LVU235
 982 0026 FFF7FEFF 		bl	Error_Handler
 983              	.LVL60:
 984              	.L81:
 985 002a 00BF     		.align	2
 986              	.L80:
 987 002c 00000000 		.word	.LANCHOR4
 988 0030 00440040 		.word	1073759232
 989              		.cfi_endproc
 990              	.LFE80:
 992              		.section	.text.SystemClock_Config,"ax",%progbits
 993              		.align	1
 994              		.global	SystemClock_Config
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 999              	SystemClock_Config:
 1000              	.LFB77:
 258:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1001              		.loc 1 258 1 view -0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 80
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005 0000 00B5     		push	{lr}
 1006              	.LCFI15:
 1007              		.cfi_def_cfa_offset 4
 1008              		.cfi_offset 14, -4
 1009 0002 95B0     		sub	sp, sp, #84
 1010              	.LCFI16:
 1011              		.cfi_def_cfa_offset 88
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1012              		.loc 1 259 3 view .LVU237
 259:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1013              		.loc 1 259 22 is_stmt 0 view .LVU238
 1014 0004 2822     		movs	r2, #40
 1015 0006 0021     		movs	r1, #0
 1016 0008 0DEB0200 		add	r0, sp, r2
 1017 000c FFF7FEFF 		bl	memset
 1018              	.LVL61:
 260:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1019              		.loc 1 260 3 is_stmt 1 view .LVU239
 260:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1020              		.loc 1 260 22 is_stmt 0 view .LVU240
 1021 0010 0023     		movs	r3, #0
 1022 0012 0593     		str	r3, [sp, #20]
 1023 0014 0693     		str	r3, [sp, #24]
 1024 0016 0793     		str	r3, [sp, #28]
 1025 0018 0893     		str	r3, [sp, #32]
 1026 001a 0993     		str	r3, [sp, #36]
 261:Core/Src/main.c **** 
 1027              		.loc 1 261 3 is_stmt 1 view .LVU241
 261:Core/Src/main.c **** 
 1028              		.loc 1 261 28 is_stmt 0 view .LVU242
 1029 001c 0193     		str	r3, [sp, #4]
 1030 001e 0293     		str	r3, [sp, #8]
 1031 0020 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 34


 1032 0022 0493     		str	r3, [sp, #16]
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1033              		.loc 1 266 3 is_stmt 1 view .LVU243
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1034              		.loc 1 266 36 is_stmt 0 view .LVU244
 1035 0024 0122     		movs	r2, #1
 1036 0026 0A92     		str	r2, [sp, #40]
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1037              		.loc 1 267 3 is_stmt 1 view .LVU245
 267:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1038              		.loc 1 267 30 is_stmt 0 view .LVU246
 1039 0028 4FF48033 		mov	r3, #65536
 1040 002c 0B93     		str	r3, [sp, #44]
 268:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1041              		.loc 1 268 3 is_stmt 1 view .LVU247
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1042              		.loc 1 269 3 view .LVU248
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1043              		.loc 1 269 30 is_stmt 0 view .LVU249
 1044 002e 0E92     		str	r2, [sp, #56]
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1045              		.loc 1 270 3 is_stmt 1 view .LVU250
 270:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1046              		.loc 1 270 34 is_stmt 0 view .LVU251
 1047 0030 0222     		movs	r2, #2
 1048 0032 1192     		str	r2, [sp, #68]
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1049              		.loc 1 271 3 is_stmt 1 view .LVU252
 271:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1050              		.loc 1 271 35 is_stmt 0 view .LVU253
 1051 0034 1293     		str	r3, [sp, #72]
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1052              		.loc 1 272 3 is_stmt 1 view .LVU254
 272:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1053              		.loc 1 272 32 is_stmt 0 view .LVU255
 1054 0036 4FF4E013 		mov	r3, #1835008
 1055 003a 1393     		str	r3, [sp, #76]
 273:Core/Src/main.c ****   {
 1056              		.loc 1 273 3 is_stmt 1 view .LVU256
 273:Core/Src/main.c ****   {
 1057              		.loc 1 273 7 is_stmt 0 view .LVU257
 1058 003c 0AA8     		add	r0, sp, #40
 1059 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1060              	.LVL62:
 273:Core/Src/main.c ****   {
 1061              		.loc 1 273 6 view .LVU258
 1062 0042 C0B9     		cbnz	r0, .L87
 279:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1063              		.loc 1 279 3 is_stmt 1 view .LVU259
 279:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1064              		.loc 1 279 31 is_stmt 0 view .LVU260
 1065 0044 0F23     		movs	r3, #15
 1066 0046 0593     		str	r3, [sp, #20]
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1067              		.loc 1 281 3 is_stmt 1 view .LVU261
 281:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1068              		.loc 1 281 34 is_stmt 0 view .LVU262
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 35


 1069 0048 0221     		movs	r1, #2
 1070 004a 0691     		str	r1, [sp, #24]
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1071              		.loc 1 282 3 is_stmt 1 view .LVU263
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1072              		.loc 1 282 35 is_stmt 0 view .LVU264
 1073 004c 0023     		movs	r3, #0
 1074 004e 0793     		str	r3, [sp, #28]
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1075              		.loc 1 283 3 is_stmt 1 view .LVU265
 283:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1076              		.loc 1 283 36 is_stmt 0 view .LVU266
 1077 0050 4FF48062 		mov	r2, #1024
 1078 0054 0892     		str	r2, [sp, #32]
 284:Core/Src/main.c **** 
 1079              		.loc 1 284 3 is_stmt 1 view .LVU267
 284:Core/Src/main.c **** 
 1080              		.loc 1 284 36 is_stmt 0 view .LVU268
 1081 0056 0993     		str	r3, [sp, #36]
 286:Core/Src/main.c ****   {
 1082              		.loc 1 286 3 is_stmt 1 view .LVU269
 286:Core/Src/main.c ****   {
 1083              		.loc 1 286 7 is_stmt 0 view .LVU270
 1084 0058 05A8     		add	r0, sp, #20
 1085 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1086              	.LVL63:
 286:Core/Src/main.c ****   {
 1087              		.loc 1 286 6 view .LVU271
 1088 005e 60B9     		cbnz	r0, .L88
 290:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1089              		.loc 1 290 3 is_stmt 1 view .LVU272
 290:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1090              		.loc 1 290 38 is_stmt 0 view .LVU273
 1091 0060 1023     		movs	r3, #16
 1092 0062 0193     		str	r3, [sp, #4]
 291:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1093              		.loc 1 291 3 is_stmt 1 view .LVU274
 291:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1094              		.loc 1 291 35 is_stmt 0 view .LVU275
 1095 0064 0023     		movs	r3, #0
 1096 0066 0493     		str	r3, [sp, #16]
 292:Core/Src/main.c ****   {
 1097              		.loc 1 292 3 is_stmt 1 view .LVU276
 292:Core/Src/main.c ****   {
 1098              		.loc 1 292 7 is_stmt 0 view .LVU277
 1099 0068 01A8     		add	r0, sp, #4
 1100 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1101              	.LVL64:
 292:Core/Src/main.c ****   {
 1102              		.loc 1 292 6 view .LVU278
 1103 006e 30B9     		cbnz	r0, .L89
 296:Core/Src/main.c **** 
 1104              		.loc 1 296 1 view .LVU279
 1105 0070 15B0     		add	sp, sp, #84
 1106              	.LCFI17:
 1107              		.cfi_remember_state
 1108              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 36


 1109              		@ sp needed
 1110 0072 5DF804FB 		ldr	pc, [sp], #4
 1111              	.L87:
 1112              	.LCFI18:
 1113              		.cfi_restore_state
 275:Core/Src/main.c ****   }
 1114              		.loc 1 275 5 is_stmt 1 view .LVU280
 1115 0076 FFF7FEFF 		bl	Error_Handler
 1116              	.LVL65:
 1117              	.L88:
 288:Core/Src/main.c ****   }
 1118              		.loc 1 288 5 view .LVU281
 1119 007a FFF7FEFF 		bl	Error_Handler
 1120              	.LVL66:
 1121              	.L89:
 294:Core/Src/main.c ****   }
 1122              		.loc 1 294 5 view .LVU282
 1123 007e FFF7FEFF 		bl	Error_Handler
 1124              	.LVL67:
 1125              		.cfi_endproc
 1126              	.LFE77:
 1128              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1129              		.align	2
 1130              	.LC0:
 1131 0000 44656661 		.ascii	"Default\000"
 1131      756C7400 
 1132              		.align	2
 1133              	.LC1:
 1134 0008 52656365 		.ascii	"ReceiveDataFromGUI\000"
 1134      69766544 
 1134      61746146 
 1134      726F6D47 
 1134      554900
 1135 001b 00       		.align	2
 1136              	.LC2:
 1137 001c 43686563 		.ascii	"CheckUSBConnect\000"
 1137      6B555342 
 1137      436F6E6E 
 1137      65637400 
 1138              		.align	2
 1139              	.LC3:
 1140 002c 50726F63 		.ascii	"ProcessBtnPress\000"
 1140      65737342 
 1140      746E5072 
 1140      65737300 
 1141              		.align	2
 1142              	.LC4:
 1143 003c 50726F63 		.ascii	"ProcessMode\000"
 1143      6573734D 
 1143      6F646500 
 1144              		.align	2
 1145              	.LC5:
 1146 0048 52656365 		.ascii	"ReceiveDataFromCNC\000"
 1146      69766544 
 1146      61746146 
 1146      726F6D43 
 1146      4E4300
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 37


 1147              		.section	.text.main,"ax",%progbits
 1148              		.align	1
 1149              		.global	main
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1154              	main:
 1155              	.LFB76:
 159:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1156              		.loc 1 159 1 view -0
 1157              		.cfi_startproc
 1158              		@ Volatile: function does not return.
 1159              		@ args = 0, pretend = 0, frame = 0
 1160              		@ frame_needed = 0, uses_anonymous_args = 0
 1161 0000 00B5     		push	{lr}
 1162              	.LCFI19:
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 14, -4
 1165 0002 83B0     		sub	sp, sp, #12
 1166              	.LCFI20:
 1167              		.cfi_def_cfa_offset 16
 167:Core/Src/main.c **** 
 1168              		.loc 1 167 3 view .LVU284
 1169 0004 FFF7FEFF 		bl	HAL_Init
 1170              	.LVL68:
 174:Core/Src/main.c **** 
 1171              		.loc 1 174 3 view .LVU285
 1172 0008 FFF7FEFF 		bl	SystemClock_Config
 1173              	.LVL69:
 181:Core/Src/main.c ****   MX_I2C1_Init();
 1174              		.loc 1 181 3 view .LVU286
 1175 000c FFF7FEFF 		bl	MX_GPIO_Init
 1176              	.LVL70:
 182:Core/Src/main.c ****   //MX_SPI1_Init();
 1177              		.loc 1 182 3 view .LVU287
 1178 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1179              	.LVL71:
 184:Core/Src/main.c ****   //MX_FATFS_Init();
 1180              		.loc 1 184 3 view .LVU288
 1181 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1182              	.LVL72:
 187:Core/Src/main.c ****   InitCNC(&cnc);
 1183              		.loc 1 187 3 view .LVU289
 1184 0018 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1185              	.LVL73:
 188:Core/Src/main.c **** 
 1186              		.loc 1 188 3 view .LVU290
 1187 001c 314C     		ldr	r4, .L93
 1188 001e 2046     		mov	r0, r4
 1189 0020 FFF7FEFF 		bl	InitCNC
 1190              	.LVL74:
 190:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1191              		.loc 1 190 3 view .LVU291
 190:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1192              		.loc 1 190 18 is_stmt 0 view .LVU292
 1193 0024 3048     		ldr	r0, .L93+4
 1194 0026 E066     		str	r0, [r4, #108]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 38


 191:Core/Src/main.c **** 
 1195              		.loc 1 191 3 is_stmt 1 view .LVU293
 191:Core/Src/main.c **** 
 1196              		.loc 1 191 12 is_stmt 0 view .LVU294
 1197 0028 304B     		ldr	r3, .L93+8
 1198 002a 6366     		str	r3, [r4, #100]
 193:Core/Src/main.c **** 
 1199              		.loc 1 193 3 is_stmt 1 view .LVU295
 1200 002c 0122     		movs	r2, #1
 1201 002e 04F17F01 		add	r1, r4, #127
 1202 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1203              	.LVL75:
 204:Core/Src/main.c **** 
 1204              		.loc 1 204 3 view .LVU296
 204:Core/Src/main.c **** 
 1205              		.loc 1 204 19 is_stmt 0 view .LVU297
 1206 0036 0322     		movs	r2, #3
 1207 0038 0021     		movs	r1, #0
 1208 003a 0120     		movs	r0, #1
 1209 003c FFF7FEFF 		bl	xQueueGenericCreate
 1210              	.LVL76:
 204:Core/Src/main.c **** 
 1211              		.loc 1 204 17 view .LVU298
 1212 0040 2B4B     		ldr	r3, .L93+12
 1213 0042 1860     		str	r0, [r3]
 206:Core/Src/main.c **** 
 1214              		.loc 1 206 3 is_stmt 1 view .LVU299
 206:Core/Src/main.c **** 
 1215              		.loc 1 206 19 is_stmt 0 view .LVU300
 1216 0044 0322     		movs	r2, #3
 1217 0046 0021     		movs	r1, #0
 1218 0048 0120     		movs	r0, #1
 1219 004a FFF7FEFF 		bl	xQueueGenericCreate
 1220              	.LVL77:
 206:Core/Src/main.c **** 
 1221              		.loc 1 206 17 view .LVU301
 1222 004e 294B     		ldr	r3, .L93+16
 1223 0050 1860     		str	r0, [r3]
 208:Core/Src/main.c **** 
 1224              		.loc 1 208 3 is_stmt 1 view .LVU302
 208:Core/Src/main.c **** 
 1225              		.loc 1 208 20 is_stmt 0 view .LVU303
 1226 0052 0322     		movs	r2, #3
 1227 0054 0021     		movs	r1, #0
 1228 0056 0120     		movs	r0, #1
 1229 0058 FFF7FEFF 		bl	xQueueGenericCreate
 1230              	.LVL78:
 208:Core/Src/main.c **** 
 1231              		.loc 1 208 18 view .LVU304
 1232 005c 264B     		ldr	r3, .L93+20
 1233 005e 1860     		str	r0, [r3]
 210:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1234              		.loc 1 210 3 is_stmt 1 view .LVU305
 210:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1235              		.loc 1 210 20 is_stmt 0 view .LVU306
 1236 0060 0322     		movs	r2, #3
 1237 0062 0021     		movs	r1, #0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 39


 1238 0064 0120     		movs	r0, #1
 1239 0066 FFF7FEFF 		bl	xQueueGenericCreate
 1240              	.LVL79:
 210:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1241              		.loc 1 210 18 view .LVU307
 1242 006a 244B     		ldr	r3, .L93+24
 1243 006c 1860     		str	r0, [r3]
 223:Core/Src/main.c **** 
 1244              		.loc 1 223 3 is_stmt 1 view .LVU308
 1245 006e 244B     		ldr	r3, .L93+28
 1246 0070 0193     		str	r3, [sp, #4]
 1247 0072 0123     		movs	r3, #1
 1248 0074 0093     		str	r3, [sp]
 1249 0076 0023     		movs	r3, #0
 1250 0078 8022     		movs	r2, #128
 1251 007a 2249     		ldr	r1, .L93+32
 1252 007c 2248     		ldr	r0, .L93+36
 1253 007e FFF7FEFF 		bl	xTaskCreate
 1254              	.LVL80:
 227:Core/Src/main.c **** 
 1255              		.loc 1 227 3 view .LVU309
 1256 0082 224B     		ldr	r3, .L93+40
 1257 0084 0193     		str	r3, [sp, #4]
 1258 0086 0224     		movs	r4, #2
 1259 0088 0094     		str	r4, [sp]
 1260 008a 0023     		movs	r3, #0
 1261 008c 8022     		movs	r2, #128
 1262 008e 2049     		ldr	r1, .L93+44
 1263 0090 2048     		ldr	r0, .L93+48
 1264 0092 FFF7FEFF 		bl	xTaskCreate
 1265              	.LVL81:
 229:Core/Src/main.c **** 
 1266              		.loc 1 229 3 view .LVU310
 1267 0096 204B     		ldr	r3, .L93+52
 1268 0098 0193     		str	r3, [sp, #4]
 1269 009a 0094     		str	r4, [sp]
 1270 009c 0023     		movs	r3, #0
 1271 009e 8022     		movs	r2, #128
 1272 00a0 1E49     		ldr	r1, .L93+56
 1273 00a2 1F48     		ldr	r0, .L93+60
 1274 00a4 FFF7FEFF 		bl	xTaskCreate
 1275              	.LVL82:
 231:Core/Src/main.c **** 
 1276              		.loc 1 231 3 view .LVU311
 1277 00a8 1E4B     		ldr	r3, .L93+64
 1278 00aa 0193     		str	r3, [sp, #4]
 1279 00ac 0094     		str	r4, [sp]
 1280 00ae 0023     		movs	r3, #0
 1281 00b0 8022     		movs	r2, #128
 1282 00b2 1D49     		ldr	r1, .L93+68
 1283 00b4 1D48     		ldr	r0, .L93+72
 1284 00b6 FFF7FEFF 		bl	xTaskCreate
 1285              	.LVL83:
 233:Core/Src/main.c **** 
 1286              		.loc 1 233 3 view .LVU312
 1287 00ba 1D4B     		ldr	r3, .L93+76
 1288 00bc 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 40


 1289 00be 0094     		str	r4, [sp]
 1290 00c0 0023     		movs	r3, #0
 1291 00c2 8022     		movs	r2, #128
 1292 00c4 1B49     		ldr	r1, .L93+80
 1293 00c6 1C48     		ldr	r0, .L93+84
 1294 00c8 FFF7FEFF 		bl	xTaskCreate
 1295              	.LVL84:
 235:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1296              		.loc 1 235 3 view .LVU313
 1297 00cc 1B4B     		ldr	r3, .L93+88
 1298 00ce 0193     		str	r3, [sp, #4]
 1299 00d0 0094     		str	r4, [sp]
 1300 00d2 0023     		movs	r3, #0
 1301 00d4 8022     		movs	r2, #128
 1302 00d6 1A49     		ldr	r1, .L93+92
 1303 00d8 1A48     		ldr	r0, .L93+96
 1304 00da FFF7FEFF 		bl	xTaskCreate
 1305              	.LVL85:
 239:Core/Src/main.c **** 
 1306              		.loc 1 239 3 view .LVU314
 1307 00de FFF7FEFF 		bl	vTaskStartScheduler
 1308              	.LVL86:
 1309              	.L91:
 244:Core/Src/main.c ****   {
 1310              		.loc 1 244 3 discriminator 1 view .LVU315
 249:Core/Src/main.c ****   /* USER CODE END 3 */
 1311              		.loc 1 249 3 discriminator 1 view .LVU316
 244:Core/Src/main.c ****   {
 1312              		.loc 1 244 9 discriminator 1 view .LVU317
 1313 00e2 FEE7     		b	.L91
 1314              	.L94:
 1315              		.align	2
 1316              	.L93:
 1317 00e4 00000000 		.word	.LANCHOR2
 1318 00e8 00000000 		.word	.LANCHOR4
 1319 00ec 00000000 		.word	hUsbDeviceFS
 1320 00f0 00000000 		.word	.LANCHOR0
 1321 00f4 00000000 		.word	.LANCHOR3
 1322 00f8 00000000 		.word	.LANCHOR1
 1323 00fc 00000000 		.word	.LANCHOR5
 1324 0100 00000000 		.word	.LANCHOR7
 1325 0104 00000000 		.word	.LC0
 1326 0108 00000000 		.word	DefaultTask
 1327 010c 00000000 		.word	.LANCHOR8
 1328 0110 08000000 		.word	.LC1
 1329 0114 00000000 		.word	StartReceiveDataFromGUI
 1330 0118 00000000 		.word	.LANCHOR9
 1331 011c 1C000000 		.word	.LC2
 1332 0120 00000000 		.word	StartCheckUSBConnect
 1333 0124 00000000 		.word	.LANCHOR10
 1334 0128 2C000000 		.word	.LC3
 1335 012c 00000000 		.word	StartProcessBtnPress
 1336 0130 00000000 		.word	.LANCHOR11
 1337 0134 3C000000 		.word	.LC4
 1338 0138 00000000 		.word	StartProcessMode
 1339 013c 00000000 		.word	.LANCHOR12
 1340 0140 48000000 		.word	.LC5
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 41


 1341 0144 00000000 		.word	StartReceiveDataFromCNC
 1342              		.cfi_endproc
 1343              	.LFE76:
 1345              		.global	cnc
 1346              		.global	ReceiveDataFromCNCTask
 1347              		.global	xSemaphoreUART
 1348              		.global	ProcessModeTask
 1349              		.global	xSemaphoreMode
 1350              		.global	ProcessBtnPressTask
 1351              		.global	xSemaphoreBtn
 1352              		.global	CheckUSBConnectTask
 1353              		.global	ReceiveDataFromGUITask
 1354              		.global	xSemaphoreUSB
 1355              		.global	defaultTask
 1356              		.global	huart2
 1357              		.global	hspi1
 1358              		.global	hi2c1
 1359              		.section	.bss.CheckUSBConnectTask,"aw",%nobits
 1360              		.align	2
 1361              		.set	.LANCHOR9,. + 0
 1364              	CheckUSBConnectTask:
 1365 0000 00000000 		.space	4
 1366              		.section	.bss.ProcessBtnPressTask,"aw",%nobits
 1367              		.align	2
 1368              		.set	.LANCHOR10,. + 0
 1371              	ProcessBtnPressTask:
 1372 0000 00000000 		.space	4
 1373              		.section	.bss.ProcessModeTask,"aw",%nobits
 1374              		.align	2
 1375              		.set	.LANCHOR11,. + 0
 1378              	ProcessModeTask:
 1379 0000 00000000 		.space	4
 1380              		.section	.bss.ReceiveDataFromCNCTask,"aw",%nobits
 1381              		.align	2
 1382              		.set	.LANCHOR12,. + 0
 1385              	ReceiveDataFromCNCTask:
 1386 0000 00000000 		.space	4
 1387              		.section	.bss.ReceiveDataFromGUITask,"aw",%nobits
 1388              		.align	2
 1389              		.set	.LANCHOR8,. + 0
 1392              	ReceiveDataFromGUITask:
 1393 0000 00000000 		.space	4
 1394              		.section	.bss.cnc,"aw",%nobits
 1395              		.align	2
 1396              		.set	.LANCHOR2,. + 0
 1399              	cnc:
 1400 0000 00000000 		.space	144
 1400      00000000 
 1400      00000000 
 1400      00000000 
 1400      00000000 
 1401              		.section	.bss.defaultTask,"aw",%nobits
 1402              		.align	2
 1403              		.set	.LANCHOR7,. + 0
 1406              	defaultTask:
 1407 0000 00000000 		.space	4
 1408              		.section	.bss.hi2c1,"aw",%nobits
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 42


 1409              		.align	2
 1410              		.set	.LANCHOR6,. + 0
 1413              	hi2c1:
 1414 0000 00000000 		.space	84
 1414      00000000 
 1414      00000000 
 1414      00000000 
 1414      00000000 
 1415              		.section	.bss.hspi1,"aw",%nobits
 1416              		.align	2
 1419              	hspi1:
 1420 0000 00000000 		.space	88
 1420      00000000 
 1420      00000000 
 1420      00000000 
 1420      00000000 
 1421              		.section	.bss.huart2,"aw",%nobits
 1422              		.align	2
 1423              		.set	.LANCHOR4,. + 0
 1426              	huart2:
 1427 0000 00000000 		.space	68
 1427      00000000 
 1427      00000000 
 1427      00000000 
 1427      00000000 
 1428              		.section	.bss.xSemaphoreBtn,"aw",%nobits
 1429              		.align	2
 1430              		.set	.LANCHOR3,. + 0
 1433              	xSemaphoreBtn:
 1434 0000 00000000 		.space	4
 1435              		.section	.bss.xSemaphoreMode,"aw",%nobits
 1436              		.align	2
 1437              		.set	.LANCHOR1,. + 0
 1440              	xSemaphoreMode:
 1441 0000 00000000 		.space	4
 1442              		.section	.bss.xSemaphoreUART,"aw",%nobits
 1443              		.align	2
 1444              		.set	.LANCHOR5,. + 0
 1447              	xSemaphoreUART:
 1448 0000 00000000 		.space	4
 1449              		.section	.bss.xSemaphoreUSB,"aw",%nobits
 1450              		.align	2
 1451              		.set	.LANCHOR0,. + 0
 1454              	xSemaphoreUSB:
 1455 0000 00000000 		.space	4
 1456              		.text
 1457              	.Letext0:
 1458              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1459              		.file 4 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1460              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1461              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1462              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1463              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1464              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1465              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1466              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1467              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 43


 1468              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1469              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1470              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1471              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1472              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1473              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1474              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1475              		.file 20 "Lib/Inc/TaskCNC.h"
 1476              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1477              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1478              		.file 23 "USB_DEVICE/App/usb_device.h"
 1479              		.file 24 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:227    .text.MX_GPIO_Init:000000fc $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:235    .text.StartReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:241    .text.StartReceiveDataFromGUI:00000000 StartReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:278    .text.StartReceiveDataFromGUI:00000020 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:285    .text.StartCheckUSBConnect:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:291    .text.StartCheckUSBConnect:00000000 StartCheckUSBConnect
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:349    .text.StartCheckUSBConnect:00000040 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:357    .text.StartProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:363    .text.StartProcessBtnPress:00000000 StartProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:398    .text.StartProcessBtnPress:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:404    .text.StartProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:410    .text.StartProcessMode:00000000 StartProcessMode
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:445    .text.StartProcessMode:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:451    .text.DefaultTask:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:457    .text.DefaultTask:00000000 DefaultTask
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:484    .text.uart_clear_receive_buffer_and_start_receive_IT:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:490    .text.uart_clear_receive_buffer_and_start_receive_IT:00000000 uart_clear_receive_buffer_and_start_receive_IT
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:530    .text.uart_clear_receive_buffer_and_start_receive_IT:00000020 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:536    .text.StartReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:542    .text.StartReceiveDataFromCNC:00000000 StartReceiveDataFromCNC
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:580    .text.StartReceiveDataFromCNC:00000020 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:586    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:592    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:679    .text.HAL_GPIO_EXTI_Callback:0000004c $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:685    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:691    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:766    .text.HAL_UART_RxCpltCallback:00000044 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:774    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:780    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:814    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:819    .text.Error_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:825    .text.Error_Handler:00000000 Error_Handler
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:857    .text.MX_I2C1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:862    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:920    .text.MX_I2C1_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:927    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:932    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:987    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:993    .text.SystemClock_Config:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:999    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1129   .rodata.main.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1148   .text.main:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1154   .text.main:00000000 main
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1317   .text.main:000000e4 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1399   .bss.cnc:00000000 cnc
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1385   .bss.ReceiveDataFromCNCTask:00000000 ReceiveDataFromCNCTask
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1447   .bss.xSemaphoreUART:00000000 xSemaphoreUART
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1378   .bss.ProcessModeTask:00000000 ProcessModeTask
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1440   .bss.xSemaphoreMode:00000000 xSemaphoreMode
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1371   .bss.ProcessBtnPressTask:00000000 ProcessBtnPressTask
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1433   .bss.xSemaphoreBtn:00000000 xSemaphoreBtn
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1364   .bss.CheckUSBConnectTask:00000000 CheckUSBConnectTask
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1392   .bss.ReceiveDataFromGUITask:00000000 ReceiveDataFromGUITask
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s 			page 45


C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1454   .bss.xSemaphoreUSB:00000000 xSemaphoreUSB
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1406   .bss.defaultTask:00000000 defaultTask
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1426   .bss.huart2:00000000 huart2
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1419   .bss.hspi1:00000000 hspi1
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1413   .bss.hi2c1:00000000 hi2c1
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1360   .bss.CheckUSBConnectTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1367   .bss.ProcessBtnPressTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1374   .bss.ProcessModeTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1381   .bss.ReceiveDataFromCNCTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1388   .bss.ReceiveDataFromGUITask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1395   .bss.cnc:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1402   .bss.defaultTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1409   .bss.hi2c1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1416   .bss.hspi1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1422   .bss.huart2:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1429   .bss.xSemaphoreBtn:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1436   .bss.xSemaphoreMode:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1443   .bss.xSemaphoreUART:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccGIRWZI.s:1450   .bss.xSemaphoreUSB:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
xQueueSemaphoreTake
ReceiveDataFromGUI
osDelay
hUsbDeviceFS
ProcessBtnPress
ProcessMode
vTaskDelay
HAL_UART_Receive_IT
ReceiveDataFromCNC
xQueueGiveFromISR
HAL_IncTick
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
InitCNC
xQueueGenericCreate
xTaskCreate
vTaskStartScheduler
