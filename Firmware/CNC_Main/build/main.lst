ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB80:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** //#include "fatfs.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "TaskCNC.h"
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** //#include "fatfs_sd.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** UART_HandleTypeDef huart2;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** TaskHandle_t defaultTask;
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreUSB;
  57:Core/Src/main.c **** TaskHandle_t ReceiveDataFromGUITask;
  58:Core/Src/main.c **** TaskHandle_t CheckUSBConnectTask;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreBtn;
  61:Core/Src/main.c **** TaskHandle_t ProcessBtnPressTask;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreMode;
  64:Core/Src/main.c **** TaskHandle_t ProcessModeTask;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** SemaphoreHandle_t xSemaphoreUART;
  67:Core/Src/main.c **** TaskHandle_t ReceiveDataFromCNCTask;
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** CNC cnc;
  70:Core/Src/main.c **** /* USER CODE END PV */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/main.c **** void SystemClock_Config(void);
  74:Core/Src/main.c **** static void MX_GPIO_Init(void);
  75:Core/Src/main.c **** static void MX_I2C1_Init(void);
  76:Core/Src/main.c **** static void MX_SPI1_Init(void);
  77:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  78:Core/Src/main.c **** void DefaultTask(void *pvParameters);
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  81:Core/Src/main.c **** void StartReceiveDataFromGUI(void *pvParameters);
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** void StartCheckUSBConnect(void *pvParameters);
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** void StartProcessBtnPress(void *pvParameters);
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** void StartProcessMode(void *pvParameters);
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** void StartProcessSD(void *pvParameters);
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 3


  91:Core/Src/main.c **** void StartReceiveDataFromCNC(void *pvParameters);
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* USER CODE END PFP */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  96:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  97:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 100:Core/Src/main.c ****   UNUSED(GPIO_Pin);
 101:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 102:Core/Src/main.c ****   {
 103:Core/Src/main.c ****     cnc.btnPress = 1;
 104:Core/Src/main.c ****   }
 105:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnExit)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     cnc.btnPress = 2;
 108:Core/Src/main.c ****   }
 109:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnUp)
 110:Core/Src/main.c ****   {
 111:Core/Src/main.c ****     cnc.btnPress = 3;
 112:Core/Src/main.c ****   }
 113:Core/Src/main.c ****   else if(GPIO_Pin == cnc.btnDown)
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     cnc.btnPress = 4;
 116:Core/Src/main.c ****   }
 117:Core/Src/main.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 118:Core/Src/main.c ****   xSemaphoreGiveFromISR(xSemaphoreBtn, xHigherPriorityTaskWoken);
 119:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****   UNUSED(huart);
 125:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 126:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 127:Core/Src/main.c **** 		{
 128:Core/Src/main.c **** 			cnc.uart.ReceiveFromControl[cnc.uart.index++] = cnc.uart.Receive; //Save data in Rxbuff
 129:Core/Src/main.c **** 		}
 130:Core/Src/main.c **** 		else if (cnc.uart.Receive == '.')
 131:Core/Src/main.c **** 		{
 132:Core/Src/main.c **** 			cnc.uart.index = 0;
 133:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);
 134:Core/Src/main.c ****       BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 135:Core/Src/main.c ****       xSemaphoreGiveFromISR(xSemaphoreUART, xHigherPriorityTaskWoken);
 136:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);	
 137:Core/Src/main.c **** 		}	
 138:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 139:Core/Src/main.c **** 	}
 140:Core/Src/main.c **** }
 141:Core/Src/main.c **** 
 142:Core/Src/main.c **** /* USER CODE END 0 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief  The application entry point.
 146:Core/Src/main.c ****   * @retval int
 147:Core/Src/main.c ****   */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 4


 148:Core/Src/main.c **** int main(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE END 1 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 157:Core/Src/main.c ****   HAL_Init();
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE END Init */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* Configure the system clock */
 164:Core/Src/main.c ****   SystemClock_Config();
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END SysInit */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* Initialize all configured peripherals */
 171:Core/Src/main.c ****   MX_GPIO_Init();
 172:Core/Src/main.c ****   MX_I2C1_Init();
 173:Core/Src/main.c ****   //MX_SPI1_Init();
 174:Core/Src/main.c ****   MX_USART2_UART_Init();
 175:Core/Src/main.c ****   //MX_FATFS_Init();
 176:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 177:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 178:Core/Src/main.c ****   InitCNC(&cnc);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   cnc.uart.huart = &huart2;
 181:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &cnc.uart.Receive, 1);
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 188:Core/Src/main.c ****   /* add mutexes, ... */
 189:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 192:Core/Src/main.c ****   /* add semaphores, ... */
 193:Core/Src/main.c ****   
 194:Core/Src/main.c ****   xSemaphoreUSB = xSemaphoreCreateBinary();
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   xSemaphoreBtn = xSemaphoreCreateBinary();
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   xSemaphoreMode = xSemaphoreCreateBinary();
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   xSemaphoreUART = xSemaphoreCreateBinary();
 201:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 204:Core/Src/main.c ****   /* start timers, add new ones, ... */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 5


 205:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 208:Core/Src/main.c ****   /* add queues, ... */
 209:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* Create the thread(s) */
 212:Core/Src/main.c ****   /* definition and creation of defaultTask */
 213:Core/Src/main.c ****   xTaskCreate(&DefaultTask, "Default", 128, NULL, 1, &defaultTask);
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 216:Core/Src/main.c ****   /* add threads, ... */  
 217:Core/Src/main.c ****   xTaskCreate(&StartReceiveDataFromGUI, "ReceiveDataFromGUI", 128, NULL, 2, &ReceiveDataFromGUITask
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   xTaskCreate(&StartCheckUSBConnect, "CheckUSBConnect", 128, NULL, 2, &CheckUSBConnectTask);
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   xTaskCreate(&StartProcessBtnPress, "ProcessBtnPress", 128, NULL, 2, &ProcessBtnPressTask);
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   xTaskCreate(&StartProcessMode, "ProcessMode", 128, NULL, 2, &ProcessModeTask);
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   xTaskCreate(&StartReceiveDataFromCNC, "ReceiveDataFromCNC", 128, NULL, 2, &ReceiveDataFromCNCTask
 226:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* Start scheduler */
 229:Core/Src/main.c ****   vTaskStartScheduler();
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 232:Core/Src/main.c ****   /* Infinite loop */
 233:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 234:Core/Src/main.c ****   while (1)
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     /* USER CODE END WHILE */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   /* USER CODE END 3 */
 241:Core/Src/main.c **** }
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief System Clock Configuration
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** void SystemClock_Config(void)
 248:Core/Src/main.c **** {
 249:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 250:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 251:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 254:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 255:Core/Src/main.c ****   */
 256:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 257:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 258:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 259:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 261:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 6


 262:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 263:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 270:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 271:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 272:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 273:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 277:Core/Src/main.c ****   {
 278:Core/Src/main.c ****     Error_Handler();
 279:Core/Src/main.c ****   }
 280:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 281:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 282:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_I2C1_Init(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 303:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 304:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 305:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 306:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 307:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 308:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 309:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 310:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 311:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 312:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
 316:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** }
 321:Core/Src/main.c **** 
 322:Core/Src/main.c **** /**
 323:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 324:Core/Src/main.c ****   * @param None
 325:Core/Src/main.c ****   * @retval None
 326:Core/Src/main.c ****   */
 327:Core/Src/main.c **** static void MX_SPI1_Init(void)
 328:Core/Src/main.c **** {
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 337:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 338:Core/Src/main.c ****   hspi1.Instance = SPI1;
 339:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 340:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 341:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 342:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 343:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 344:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 345:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 346:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 347:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 348:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 349:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 350:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     Error_Handler();
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** }
 359:Core/Src/main.c **** 
 360:Core/Src/main.c **** /**
 361:Core/Src/main.c ****   * @brief USART2 Initialization Function
 362:Core/Src/main.c ****   * @param None
 363:Core/Src/main.c ****   * @retval None
 364:Core/Src/main.c ****   */
 365:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 366:Core/Src/main.c **** {
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 369:Core/Src/main.c **** 
 370:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 375:Core/Src/main.c ****   huart2.Instance = USART2;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 8


 376:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 377:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 378:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 379:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 380:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 381:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 382:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 383:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 384:Core/Src/main.c ****   {
 385:Core/Src/main.c ****     Error_Handler();
 386:Core/Src/main.c ****   }
 387:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** }
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /**
 394:Core/Src/main.c ****   * @brief GPIO Initialization Function
 395:Core/Src/main.c ****   * @param None
 396:Core/Src/main.c ****   * @retval None
 397:Core/Src/main.c ****   */
 398:Core/Src/main.c **** static void MX_GPIO_Init(void)
 399:Core/Src/main.c **** {
  26              		.loc 1 399 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 400:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 400 3 view .LVU1
  43              		.loc 1 400 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 403:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  49              		.loc 1 403 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 403 3 view .LVU4
  52              		.loc 1 403 3 view .LVU5
  53 0010 3A4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 9


  55 0014 42F02002 		orr	r2, r2, #32
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 403 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F02002 		and	r2, r2, #32
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 403 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 403 3 view .LVU8
 404:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 404 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 404 3 view .LVU10
  68              		.loc 1 404 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00402 		orr	r2, r2, #4
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 404 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F00402 		and	r2, r2, #4
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 404 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 404 3 view .LVU14
 405:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 405 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 405 3 view .LVU16
  83              		.loc 1 405 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00802 		orr	r2, r2, #8
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 405 3 view .LVU18
  88 003e 9B69     		ldr	r3, [r3, #24]
  89 0040 03F00803 		and	r3, r3, #8
  90 0044 0393     		str	r3, [sp, #12]
  91              		.loc 1 405 3 view .LVU19
  92 0046 039B     		ldr	r3, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 405 3 view .LVU20
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 408:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
  95              		.loc 1 408 3 view .LVU21
  96 0048 2D4E     		ldr	r6, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 1021     		movs	r1, #16
  99 004e 3046     		mov	r0, r6
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 411:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 102              		.loc 1 411 3 view .LVU22
 103 0054 2B4D     		ldr	r5, .L3+8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 10


 104 0056 2246     		mov	r2, r4
 105 0058 0321     		movs	r1, #3
 106 005a 2846     		mov	r0, r5
 107 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 414:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 109              		.loc 1 414 3 view .LVU23
 110              		.loc 1 414 23 is_stmt 0 view .LVU24
 111 0060 1023     		movs	r3, #16
 112 0062 0493     		str	r3, [sp, #16]
 415:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 415 3 is_stmt 1 view .LVU25
 114              		.loc 1 415 24 is_stmt 0 view .LVU26
 115 0064 4FF00108 		mov	r8, #1
 116 0068 CDF81480 		str	r8, [sp, #20]
 416:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 416 3 is_stmt 1 view .LVU27
 118              		.loc 1 416 24 is_stmt 0 view .LVU28
 119 006c 0694     		str	r4, [sp, #24]
 417:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 417 3 is_stmt 1 view .LVU29
 121              		.loc 1 417 25 is_stmt 0 view .LVU30
 122 006e 0227     		movs	r7, #2
 123 0070 0797     		str	r7, [sp, #28]
 418:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 418 3 is_stmt 1 view .LVU31
 125 0072 0DEB0301 		add	r1, sp, r3
 126 0076 3046     		mov	r0, r6
 127 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 419:Core/Src/main.c **** 
 420:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 421:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 129              		.loc 1 421 3 view .LVU32
 130              		.loc 1 421 23 is_stmt 0 view .LVU33
 131 007c 0323     		movs	r3, #3
 132 007e 0493     		str	r3, [sp, #16]
 422:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 133              		.loc 1 422 3 is_stmt 1 view .LVU34
 134              		.loc 1 422 24 is_stmt 0 view .LVU35
 135 0080 CDF81480 		str	r8, [sp, #20]
 423:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 423 3 is_stmt 1 view .LVU36
 137              		.loc 1 423 24 is_stmt 0 view .LVU37
 138 0084 0694     		str	r4, [sp, #24]
 424:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 139              		.loc 1 424 3 is_stmt 1 view .LVU38
 140              		.loc 1 424 25 is_stmt 0 view .LVU39
 141 0086 0797     		str	r7, [sp, #28]
 425:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 425 3 is_stmt 1 view .LVU40
 143 0088 04A9     		add	r1, sp, #16
 144 008a 2846     		mov	r0, r5
 145 008c FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 11


 426:Core/Src/main.c **** 
 427:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 428:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 147              		.loc 1 428 3 view .LVU41
 148              		.loc 1 428 23 is_stmt 0 view .LVU42
 149 0090 4FF40043 		mov	r3, #32768
 150 0094 0493     		str	r3, [sp, #16]
 429:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 151              		.loc 1 429 3 is_stmt 1 view .LVU43
 152              		.loc 1 429 24 is_stmt 0 view .LVU44
 153 0096 1C4F     		ldr	r7, .L3+12
 154 0098 0597     		str	r7, [sp, #20]
 430:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 155              		.loc 1 430 3 is_stmt 1 view .LVU45
 156              		.loc 1 430 24 is_stmt 0 view .LVU46
 157 009a 0694     		str	r4, [sp, #24]
 431:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 158              		.loc 1 431 3 is_stmt 1 view .LVU47
 159 009c 04A9     		add	r1, sp, #16
 160 009e 3046     		mov	r0, r6
 161 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL4:
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 PB5 */
 434:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 163              		.loc 1 434 3 view .LVU48
 164              		.loc 1 434 23 is_stmt 0 view .LVU49
 165 00a4 3823     		movs	r3, #56
 166 00a6 0493     		str	r3, [sp, #16]
 435:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 167              		.loc 1 435 3 is_stmt 1 view .LVU50
 168              		.loc 1 435 24 is_stmt 0 view .LVU51
 169 00a8 0597     		str	r7, [sp, #20]
 436:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 436 3 is_stmt 1 view .LVU52
 171              		.loc 1 436 24 is_stmt 0 view .LVU53
 172 00aa 0694     		str	r4, [sp, #24]
 437:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 173              		.loc 1 437 3 is_stmt 1 view .LVU54
 174 00ac 04A9     		add	r1, sp, #16
 175 00ae 2846     		mov	r0, r5
 176 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL5:
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   /* EXTI interrupt init*/
 440:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 178              		.loc 1 440 3 view .LVU55
 179 00b4 2246     		mov	r2, r4
 180 00b6 0521     		movs	r1, #5
 181 00b8 0920     		movs	r0, #9
 182 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 183              	.LVL6:
 441:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 184              		.loc 1 441 3 view .LVU56
 185 00be 0920     		movs	r0, #9
 186 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 187              	.LVL7:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 12


 442:Core/Src/main.c **** 
 443:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI4_IRQn, 5, 0);
 188              		.loc 1 443 3 view .LVU57
 189 00c4 2246     		mov	r2, r4
 190 00c6 0521     		movs	r1, #5
 191 00c8 0A20     		movs	r0, #10
 192 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL8:
 444:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 194              		.loc 1 444 3 view .LVU58
 195 00ce 0A20     		movs	r0, #10
 196 00d0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL9:
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 5, 0);
 198              		.loc 1 446 3 view .LVU59
 199 00d4 2246     		mov	r2, r4
 200 00d6 0521     		movs	r1, #5
 201 00d8 1720     		movs	r0, #23
 202 00da FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL10:
 447:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 204              		.loc 1 447 3 view .LVU60
 205 00de 1720     		movs	r0, #23
 206 00e0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL11:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 208              		.loc 1 449 3 view .LVU61
 209 00e4 2246     		mov	r2, r4
 210 00e6 0521     		movs	r1, #5
 211 00e8 2820     		movs	r0, #40
 212 00ea FFF7FEFF 		bl	HAL_NVIC_SetPriority
 213              	.LVL12:
 450:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 214              		.loc 1 450 3 view .LVU62
 215 00ee 2820     		movs	r0, #40
 216 00f0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 217              	.LVL13:
 451:Core/Src/main.c **** 
 452:Core/Src/main.c **** }
 218              		.loc 1 452 1 is_stmt 0 view .LVU63
 219 00f4 08B0     		add	sp, sp, #32
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 24
 222              		@ sp needed
 223 00f6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 224              	.L4:
 225 00fa 00BF     		.align	2
 226              	.L3:
 227 00fc 00100240 		.word	1073876992
 228 0100 00080140 		.word	1073809408
 229 0104 000C0140 		.word	1073810432
 230 0108 00001110 		.word	269549568
 231              		.cfi_endproc
 232              	.LFE80:
 234              		.section	.text.StartReceiveDataFromGUI,"ax",%progbits
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 13


 235              		.align	1
 236              		.global	StartReceiveDataFromGUI
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	StartReceiveDataFromGUI:
 242              	.LFB81:
 453:Core/Src/main.c **** 
 454:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c **** void StartReceiveDataFromGUI(void *pvParameters)
 457:Core/Src/main.c **** {
 243              		.loc 1 457 1 is_stmt 1 view -0
 244              		.cfi_startproc
 245              		@ Volatile: function does not return.
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              	.LVL14:
 249              		.loc 1 457 1 is_stmt 0 view .LVU65
 250 0000 08B5     		push	{r3, lr}
 251              	.LCFI3:
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 3, -8
 254              		.cfi_offset 14, -4
 255              	.LVL15:
 256              	.L6:
 458:Core/Src/main.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
 459:Core/Src/main.c ****   for(;;)
 257              		.loc 1 459 3 is_stmt 1 view .LVU66
 460:Core/Src/main.c ****   {
 461:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreUSB, portMAX_DELAY) == pdTRUE)
 258              		.loc 1 461 5 view .LVU67
 259              		.loc 1 461 8 is_stmt 0 view .LVU68
 260 0002 4FF0FF31 		mov	r1, #-1
 261 0006 064B     		ldr	r3, .L9
 262 0008 1868     		ldr	r0, [r3]
 263 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 264              	.LVL16:
 265              		.loc 1 461 7 view .LVU69
 266 000e 0128     		cmp	r0, #1
 267 0010 F7D1     		bne	.L6
 462:Core/Src/main.c ****     {
 463:Core/Src/main.c ****       ReceiveDataFromGUI(&cnc, xSemaphoreMode); 
 268              		.loc 1 463 7 is_stmt 1 view .LVU70
 269 0012 044B     		ldr	r3, .L9+4
 270 0014 1968     		ldr	r1, [r3]
 271 0016 0448     		ldr	r0, .L9+8
 272 0018 FFF7FEFF 		bl	ReceiveDataFromGUI
 273              	.LVL17:
 274 001c F1E7     		b	.L6
 275              	.L10:
 276 001e 00BF     		.align	2
 277              	.L9:
 278 0020 00000000 		.word	.LANCHOR0
 279 0024 00000000 		.word	.LANCHOR1
 280 0028 00000000 		.word	.LANCHOR2
 281              		.cfi_endproc
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 14


 282              	.LFE81:
 284              		.section	.text.StartCheckUSBConnect,"ax",%progbits
 285              		.align	1
 286              		.global	StartCheckUSBConnect
 287              		.syntax unified
 288              		.thumb
 289              		.thumb_func
 291              	StartCheckUSBConnect:
 292              	.LFB82:
 464:Core/Src/main.c ****     }
 465:Core/Src/main.c ****   }
 466:Core/Src/main.c **** }
 467:Core/Src/main.c **** 
 468:Core/Src/main.c **** void StartCheckUSBConnect(void *pvParameters)
 469:Core/Src/main.c **** {
 293              		.loc 1 469 1 view -0
 294              		.cfi_startproc
 295              		@ Volatile: function does not return.
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              	.LVL18:
 299              		.loc 1 469 1 is_stmt 0 view .LVU72
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI4:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 305              	.LVL19:
 306              	.L12:
 470:Core/Src/main.c ****   for(;;)
 307              		.loc 1 470 3 is_stmt 1 view .LVU73
 308              	.LBB7:
 471:Core/Src/main.c ****     {
 472:Core/Src/main.c ****       osDelay(1000);
 309              		.loc 1 472 7 view .LVU74
 310 0002 4FF47A70 		mov	r0, #1000
 311 0006 FFF7FEFF 		bl	osDelay
 312              	.LVL20:
 473:Core/Src/main.c ****       if(cnc.state == 1) 
 313              		.loc 1 473 7 view .LVU75
 314              		.loc 1 473 13 is_stmt 0 view .LVU76
 315 000a 0D4B     		ldr	r3, .L15
 316 000c 93F86830 		ldrb	r3, [r3, #104]	@ zero_extendqisi2
 317              		.loc 1 473 9 view .LVU77
 318 0010 012B     		cmp	r3, #1
 319 0012 F6D1     		bne	.L12
 474:Core/Src/main.c ****       {
 475:Core/Src/main.c ****         if(!(hUsbDeviceFS.dev_state == USBD_STATE_CONFIGURED))
 320              		.loc 1 475 9 is_stmt 1 view .LVU78
 321              		.loc 1 475 26 is_stmt 0 view .LVU79
 322 0014 0B4B     		ldr	r3, .L15+4
 323 0016 93F89C32 		ldrb	r3, [r3, #668]	@ zero_extendqisi2
 324              		.loc 1 475 11 view .LVU80
 325 001a 032B     		cmp	r3, #3
 326 001c F1D0     		beq	.L12
 476:Core/Src/main.c ****         {
 477:Core/Src/main.c ****           // alarm when error connect 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 15


 478:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Led, GPIO_PIN_RESET);
 327              		.loc 1 478 11 is_stmt 1 view .LVU81
 328 001e 084C     		ldr	r4, .L15
 329 0020 094D     		ldr	r5, .L15+8
 330 0022 0022     		movs	r2, #0
 331 0024 6189     		ldrh	r1, [r4, #10]
 332 0026 2846     		mov	r0, r5
 333 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 334              	.LVL21:
 479:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, cnc.Buzzer, GPIO_PIN_SET);
 335              		.loc 1 479 11 view .LVU82
 336 002c 0122     		movs	r2, #1
 337 002e A189     		ldrh	r1, [r4, #12]
 338 0030 2846     		mov	r0, r5
 339 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 340              	.LVL22:
 480:Core/Src/main.c ****           cnc.state = 2; // mode error connect with GUI
 341              		.loc 1 480 11 view .LVU83
 342              		.loc 1 480 21 is_stmt 0 view .LVU84
 343 0036 0223     		movs	r3, #2
 344 0038 84F86830 		strb	r3, [r4, #104]
 345 003c E1E7     		b	.L12
 346              	.L16:
 347 003e 00BF     		.align	2
 348              	.L15:
 349 0040 00000000 		.word	.LANCHOR2
 350 0044 00000000 		.word	hUsbDeviceFS
 351 0048 000C0140 		.word	1073810432
 352              	.LBE7:
 353              		.cfi_endproc
 354              	.LFE82:
 356              		.section	.text.StartProcessBtnPress,"ax",%progbits
 357              		.align	1
 358              		.global	StartProcessBtnPress
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	StartProcessBtnPress:
 364              	.LFB83:
 481:Core/Src/main.c ****         }    
 482:Core/Src/main.c ****       }      
 483:Core/Src/main.c ****     } 
 484:Core/Src/main.c **** }
 485:Core/Src/main.c **** 
 486:Core/Src/main.c **** void StartProcessBtnPress(void *pvParameters)
 487:Core/Src/main.c **** {
 365              		.loc 1 487 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ Volatile: function does not return.
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              	.LVL23:
 371              		.loc 1 487 1 is_stmt 0 view .LVU86
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 16


 376              		.cfi_offset 14, -4
 377              	.LVL24:
 378              	.L18:
 488:Core/Src/main.c ****   for(;;)
 379              		.loc 1 488 3 is_stmt 1 view .LVU87
 489:Core/Src/main.c ****   {
 490:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreBtn, portMAX_DELAY) == pdTRUE)
 380              		.loc 1 490 5 view .LVU88
 381              		.loc 1 490 8 is_stmt 0 view .LVU89
 382 0002 4FF0FF31 		mov	r1, #-1
 383 0006 054B     		ldr	r3, .L21
 384 0008 1868     		ldr	r0, [r3]
 385 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 386              	.LVL25:
 387              		.loc 1 490 7 view .LVU90
 388 000e 0128     		cmp	r0, #1
 389 0010 F7D1     		bne	.L18
 491:Core/Src/main.c ****     {
 492:Core/Src/main.c ****       ProcessBtnPress(&cnc);
 390              		.loc 1 492 7 is_stmt 1 view .LVU91
 391 0012 0348     		ldr	r0, .L21+4
 392 0014 FFF7FEFF 		bl	ProcessBtnPress
 393              	.LVL26:
 394 0018 F3E7     		b	.L18
 395              	.L22:
 396 001a 00BF     		.align	2
 397              	.L21:
 398 001c 00000000 		.word	.LANCHOR3
 399 0020 00000000 		.word	.LANCHOR2
 400              		.cfi_endproc
 401              	.LFE83:
 403              		.section	.text.StartProcessMode,"ax",%progbits
 404              		.align	1
 405              		.global	StartProcessMode
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	StartProcessMode:
 411              	.LFB84:
 493:Core/Src/main.c ****     }
 494:Core/Src/main.c ****   }    
 495:Core/Src/main.c **** }
 496:Core/Src/main.c **** 
 497:Core/Src/main.c **** void StartProcessMode(void *pvParameters)
 498:Core/Src/main.c **** {
 412              		.loc 1 498 1 view -0
 413              		.cfi_startproc
 414              		@ Volatile: function does not return.
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              	.LVL27:
 418              		.loc 1 498 1 is_stmt 0 view .LVU93
 419 0000 08B5     		push	{r3, lr}
 420              	.LCFI6:
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 3, -8
 423              		.cfi_offset 14, -4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 17


 424              	.LVL28:
 425              	.L24:
 499:Core/Src/main.c ****   for(;;)
 426              		.loc 1 499 3 is_stmt 1 view .LVU94
 500:Core/Src/main.c ****   {
 501:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreMode, portMAX_DELAY) == pdTRUE)
 427              		.loc 1 501 5 view .LVU95
 428              		.loc 1 501 8 is_stmt 0 view .LVU96
 429 0002 4FF0FF31 		mov	r1, #-1
 430 0006 054B     		ldr	r3, .L27
 431 0008 1868     		ldr	r0, [r3]
 432 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 433              	.LVL29:
 434              		.loc 1 501 7 view .LVU97
 435 000e 0128     		cmp	r0, #1
 436 0010 F7D1     		bne	.L24
 502:Core/Src/main.c ****     {
 503:Core/Src/main.c ****       ProcessMode(&cnc);
 437              		.loc 1 503 7 is_stmt 1 view .LVU98
 438 0012 0348     		ldr	r0, .L27+4
 439 0014 FFF7FEFF 		bl	ProcessMode
 440              	.LVL30:
 441 0018 F3E7     		b	.L24
 442              	.L28:
 443 001a 00BF     		.align	2
 444              	.L27:
 445 001c 00000000 		.word	.LANCHOR1
 446 0020 00000000 		.word	.LANCHOR2
 447              		.cfi_endproc
 448              	.LFE84:
 450              		.section	.text.StartReceiveDataFromCNC,"ax",%progbits
 451              		.align	1
 452              		.global	StartReceiveDataFromCNC
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 457              	StartReceiveDataFromCNC:
 458              	.LFB85:
 504:Core/Src/main.c ****     }
 505:Core/Src/main.c ****   }
 506:Core/Src/main.c **** }
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** void StartReceiveDataFromCNC(void *pvParameters)
 509:Core/Src/main.c **** {
 459              		.loc 1 509 1 view -0
 460              		.cfi_startproc
 461              		@ Volatile: function does not return.
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	.LVL31:
 465              		.loc 1 509 1 is_stmt 0 view .LVU100
 466 0000 08B5     		push	{r3, lr}
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 8
 469              		.cfi_offset 3, -8
 470              		.cfi_offset 14, -4
 471              	.LVL32:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 18


 472              	.L30:
 510:Core/Src/main.c ****   for(;;)
 473              		.loc 1 510 3 is_stmt 1 view .LVU101
 511:Core/Src/main.c ****   {
 512:Core/Src/main.c ****     if(xSemaphoreTake(xSemaphoreUART, portMAX_DELAY) == pdTRUE)
 474              		.loc 1 512 5 view .LVU102
 475              		.loc 1 512 8 is_stmt 0 view .LVU103
 476 0002 4FF0FF31 		mov	r1, #-1
 477 0006 054B     		ldr	r3, .L33
 478 0008 1868     		ldr	r0, [r3]
 479 000a FFF7FEFF 		bl	xQueueSemaphoreTake
 480              	.LVL33:
 481              		.loc 1 512 7 view .LVU104
 482 000e 0128     		cmp	r0, #1
 483 0010 F7D1     		bne	.L30
 513:Core/Src/main.c ****     {
 514:Core/Src/main.c ****       ReceiveDataFromCNC(&cnc);
 484              		.loc 1 514 7 is_stmt 1 view .LVU105
 485 0012 0348     		ldr	r0, .L33+4
 486 0014 FFF7FEFF 		bl	ReceiveDataFromCNC
 487              	.LVL34:
 488 0018 F3E7     		b	.L30
 489              	.L34:
 490 001a 00BF     		.align	2
 491              	.L33:
 492 001c 00000000 		.word	.LANCHOR4
 493 0020 00000000 		.word	.LANCHOR2
 494              		.cfi_endproc
 495              	.LFE85:
 497              		.section	.text.DefaultTask,"ax",%progbits
 498              		.align	1
 499              		.global	DefaultTask
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 504              	DefaultTask:
 505              	.LFB86:
 515:Core/Src/main.c ****     }
 516:Core/Src/main.c ****   }
 517:Core/Src/main.c **** }
 518:Core/Src/main.c **** 
 519:Core/Src/main.c **** //-----------SD config-------------------------
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** // volatile uint8_t FatFsCnt = 0;
 522:Core/Src/main.c **** // volatile uint8_t Timer1, Timer2;
 523:Core/Src/main.c **** 
 524:Core/Src/main.c **** // void SDTimer_Handler(void)
 525:Core/Src/main.c **** // {
 526:Core/Src/main.c **** //   if(Timer1 > 0)
 527:Core/Src/main.c **** //     Timer1--;
 528:Core/Src/main.c **** //   if(Timer2 > 0);
 529:Core/Src/main.c **** //     Timer2--;
 530:Core/Src/main.c **** // }
 531:Core/Src/main.c **** 
 532:Core/Src/main.c **** /* USER CODE END 4 */
 533:Core/Src/main.c **** 
 534:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 19


 535:Core/Src/main.c **** /**
 536:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 537:Core/Src/main.c ****   * @param  argument: Not used
 538:Core/Src/main.c ****   * @retval None
 539:Core/Src/main.c ****   */
 540:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 541:Core/Src/main.c **** void DefaultTask(void *pvParameters)
 542:Core/Src/main.c **** {
 506              		.loc 1 542 1 view -0
 507              		.cfi_startproc
 508              		@ Volatile: function does not return.
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              	.LVL35:
 512              		.loc 1 542 1 is_stmt 0 view .LVU107
 513 0000 08B5     		push	{r3, lr}
 514              	.LCFI8:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 3, -8
 517              		.cfi_offset 14, -4
 518              	.LVL36:
 519              	.L36:
 543:Core/Src/main.c ****   /* init code for USB_DEVICE */
 544:Core/Src/main.c ****   //MX_USB_DEVICE_Init();
 545:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 546:Core/Src/main.c ****   /* Infinite loop */
 547:Core/Src/main.c ****   for(;;)
 520              		.loc 1 547 3 is_stmt 1 discriminator 1 view .LVU108
 548:Core/Src/main.c ****   {
 549:Core/Src/main.c ****     vTaskDelay(1);
 521              		.loc 1 549 5 discriminator 1 view .LVU109
 522 0002 0120     		movs	r0, #1
 523 0004 FFF7FEFF 		bl	vTaskDelay
 524              	.LVL37:
 547:Core/Src/main.c ****   {
 525              		.loc 1 547 8 discriminator 1 view .LVU110
 526 0008 FBE7     		b	.L36
 527              		.cfi_endproc
 528              	.LFE86:
 530              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_GPIO_EXTI_Callback
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	HAL_GPIO_EXTI_Callback:
 538              	.LVL38:
 539              	.LFB73:
  98:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 540              		.loc 1 98 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
  98:Core/Src/main.c ****   /* Prevent unused argument(s) compilation warning */
 544              		.loc 1 98 1 is_stmt 0 view .LVU112
 545 0000 08B5     		push	{r3, lr}
 546              	.LCFI9:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 20


 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 3, -8
 549              		.cfi_offset 14, -4
 100:Core/Src/main.c ****   if(GPIO_Pin == cnc.btnOK)
 550              		.loc 1 100 3 is_stmt 1 view .LVU113
 101:Core/Src/main.c ****   {
 551              		.loc 1 101 3 view .LVU114
 101:Core/Src/main.c ****   {
 552              		.loc 1 101 21 is_stmt 0 view .LVU115
 553 0002 124B     		ldr	r3, .L47
 554 0004 1B88     		ldrh	r3, [r3]
 101:Core/Src/main.c ****   {
 555              		.loc 1 101 5 view .LVU116
 556 0006 8342     		cmp	r3, r0
 557 0008 0FD0     		beq	.L44
 105:Core/Src/main.c ****   {
 558              		.loc 1 105 8 is_stmt 1 view .LVU117
 105:Core/Src/main.c ****   {
 559              		.loc 1 105 26 is_stmt 0 view .LVU118
 560 000a 104B     		ldr	r3, .L47
 561 000c 5B88     		ldrh	r3, [r3, #2]
 105:Core/Src/main.c ****   {
 562              		.loc 1 105 10 view .LVU119
 563 000e 8342     		cmp	r3, r0
 564 0010 14D0     		beq	.L45
 109:Core/Src/main.c ****   {
 565              		.loc 1 109 8 is_stmt 1 view .LVU120
 109:Core/Src/main.c ****   {
 566              		.loc 1 109 26 is_stmt 0 view .LVU121
 567 0012 0E4B     		ldr	r3, .L47
 568 0014 9B88     		ldrh	r3, [r3, #4]
 109:Core/Src/main.c ****   {
 569              		.loc 1 109 10 view .LVU122
 570 0016 8342     		cmp	r3, r0
 571 0018 14D0     		beq	.L46
 113:Core/Src/main.c ****   {
 572              		.loc 1 113 8 is_stmt 1 view .LVU123
 113:Core/Src/main.c ****   {
 573              		.loc 1 113 26 is_stmt 0 view .LVU124
 574 001a 0C4B     		ldr	r3, .L47
 575 001c DB88     		ldrh	r3, [r3, #6]
 113:Core/Src/main.c ****   {
 576              		.loc 1 113 10 view .LVU125
 577 001e 8342     		cmp	r3, r0
 578 0020 06D1     		bne	.L40
 115:Core/Src/main.c ****   }
 579              		.loc 1 115 5 is_stmt 1 view .LVU126
 115:Core/Src/main.c ****   }
 580              		.loc 1 115 18 is_stmt 0 view .LVU127
 581 0022 0A4B     		ldr	r3, .L47
 582 0024 0422     		movs	r2, #4
 583 0026 1A72     		strb	r2, [r3, #8]
 584 0028 02E0     		b	.L40
 585              	.L44:
 103:Core/Src/main.c ****   }
 586              		.loc 1 103 5 is_stmt 1 view .LVU128
 103:Core/Src/main.c ****   }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 21


 587              		.loc 1 103 18 is_stmt 0 view .LVU129
 588 002a 084B     		ldr	r3, .L47
 589 002c 0122     		movs	r2, #1
 590 002e 1A72     		strb	r2, [r3, #8]
 591              	.L40:
 117:Core/Src/main.c ****   xSemaphoreGiveFromISR(xSemaphoreBtn, xHigherPriorityTaskWoken);
 592              		.loc 1 117 3 is_stmt 1 view .LVU130
 593              	.LVL39:
 118:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 594              		.loc 1 118 3 view .LVU131
 595 0030 0021     		movs	r1, #0
 596 0032 074B     		ldr	r3, .L47+4
 597 0034 1868     		ldr	r0, [r3]
 598              	.LVL40:
 118:Core/Src/main.c ****   portYIELD_FROM_ISR(xHigherPriorityTaskWoken);
 599              		.loc 1 118 3 is_stmt 0 view .LVU132
 600 0036 FFF7FEFF 		bl	xQueueGiveFromISR
 601              	.LVL41:
 119:Core/Src/main.c **** }
 602              		.loc 1 119 3 is_stmt 1 view .LVU133
 119:Core/Src/main.c **** }
 603              		.loc 1 119 47 view .LVU134
 120:Core/Src/main.c **** 
 604              		.loc 1 120 1 is_stmt 0 view .LVU135
 605 003a 08BD     		pop	{r3, pc}
 606              	.LVL42:
 607              	.L45:
 107:Core/Src/main.c ****   }
 608              		.loc 1 107 5 is_stmt 1 view .LVU136
 107:Core/Src/main.c ****   }
 609              		.loc 1 107 18 is_stmt 0 view .LVU137
 610 003c 034B     		ldr	r3, .L47
 611 003e 0222     		movs	r2, #2
 612 0040 1A72     		strb	r2, [r3, #8]
 613 0042 F5E7     		b	.L40
 614              	.L46:
 111:Core/Src/main.c ****   }
 615              		.loc 1 111 5 is_stmt 1 view .LVU138
 111:Core/Src/main.c ****   }
 616              		.loc 1 111 18 is_stmt 0 view .LVU139
 617 0044 014B     		ldr	r3, .L47
 618 0046 0322     		movs	r2, #3
 619 0048 1A72     		strb	r2, [r3, #8]
 620 004a F1E7     		b	.L40
 621              	.L48:
 622              		.align	2
 623              	.L47:
 624 004c 00000000 		.word	.LANCHOR2
 625 0050 00000000 		.word	.LANCHOR3
 626              		.cfi_endproc
 627              	.LFE73:
 629              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 630              		.align	1
 631              		.global	HAL_UART_RxCpltCallback
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 22


 636              	HAL_UART_RxCpltCallback:
 637              	.LVL43:
 638              	.LFB74:
 123:Core/Src/main.c ****   UNUSED(huart);
 639              		.loc 1 123 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/main.c ****   UNUSED(huart);
 643              		.loc 1 123 1 is_stmt 0 view .LVU141
 644 0000 08B5     		push	{r3, lr}
 645              	.LCFI10:
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 3, -8
 648              		.cfi_offset 14, -4
 124:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 649              		.loc 1 124 3 is_stmt 1 view .LVU142
 125:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 650              		.loc 1 125 2 view .LVU143
 125:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 651              		.loc 1 125 10 is_stmt 0 view .LVU144
 652 0002 0268     		ldr	r2, [r0]
 125:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 653              		.loc 1 125 30 view .LVU145
 654 0004 104B     		ldr	r3, .L55
 655 0006 1B68     		ldr	r3, [r3]
 125:Core/Src/main.c **** 	{	if(cnc.uart.Receive != '.') //line feed Ascii
 656              		.loc 1 125 4 view .LVU146
 657 0008 9A42     		cmp	r2, r3
 658 000a 00D0     		beq	.L54
 659              	.LVL44:
 660              	.L49:
 140:Core/Src/main.c **** 
 661              		.loc 1 140 1 view .LVU147
 662 000c 08BD     		pop	{r3, pc}
 663              	.LVL45:
 664              	.L54:
 126:Core/Src/main.c **** 		{
 665              		.loc 1 126 4 is_stmt 1 view .LVU148
 126:Core/Src/main.c **** 		{
 666              		.loc 1 126 15 is_stmt 0 view .LVU149
 667 000e 0F4B     		ldr	r3, .L55+4
 668 0010 93F87A20 		ldrb	r2, [r3, #122]	@ zero_extendqisi2
 126:Core/Src/main.c **** 		{
 669              		.loc 1 126 6 view .LVU150
 670 0014 2E2A     		cmp	r2, #46
 671 0016 0DD0     		beq	.L51
 128:Core/Src/main.c **** 		}
 672              		.loc 1 128 4 is_stmt 1 view .LVU151
 128:Core/Src/main.c **** 		}
 673              		.loc 1 128 40 is_stmt 0 view .LVU152
 674 0018 93F87B10 		ldrb	r1, [r3, #123]	@ zero_extendqisi2
 128:Core/Src/main.c **** 		}
 675              		.loc 1 128 46 view .LVU153
 676 001c 481C     		adds	r0, r1, #1
 677              	.LVL46:
 128:Core/Src/main.c **** 		}
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 23


 678              		.loc 1 128 46 view .LVU154
 679 001e 83F87B00 		strb	r0, [r3, #123]
 128:Core/Src/main.c **** 		}
 680              		.loc 1 128 50 view .LVU155
 681 0022 0B44     		add	r3, r3, r1
 682 0024 83F87C20 		strb	r2, [r3, #124]
 683              	.L52:
 684              	.LBB8:
 136:Core/Src/main.c **** 		}	
 685              		.loc 1 136 51 is_stmt 1 discriminator 3 view .LVU156
 686              	.LBE8:
 138:Core/Src/main.c **** 	}
 687              		.loc 1 138 3 discriminator 3 view .LVU157
 688 0028 0122     		movs	r2, #1
 689 002a 0949     		ldr	r1, .L55+8
 690 002c 0648     		ldr	r0, .L55
 691 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 692              	.LVL47:
 140:Core/Src/main.c **** 
 693              		.loc 1 140 1 is_stmt 0 discriminator 3 view .LVU158
 694 0032 EBE7     		b	.L49
 695              	.LVL48:
 696              	.L51:
 130:Core/Src/main.c **** 		{
 697              		.loc 1 130 8 is_stmt 1 view .LVU159
 698              	.LBB9:
 132:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);
 699              		.loc 1 132 4 view .LVU160
 132:Core/Src/main.c **** 			//ProcessData(&data, &x_axis, &y_axis, &z_axis, &Mode);
 700              		.loc 1 132 19 is_stmt 0 view .LVU161
 701 0034 0021     		movs	r1, #0
 702 0036 054B     		ldr	r3, .L55+4
 703 0038 83F87B10 		strb	r1, [r3, #123]
 134:Core/Src/main.c ****       xSemaphoreGiveFromISR(xSemaphoreUART, xHigherPriorityTaskWoken);
 704              		.loc 1 134 7 is_stmt 1 view .LVU162
 705              	.LVL49:
 135:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);	
 706              		.loc 1 135 7 view .LVU163
 707 003c 054B     		ldr	r3, .L55+12
 708 003e 1868     		ldr	r0, [r3]
 709              	.LVL50:
 135:Core/Src/main.c ****       portYIELD_FROM_ISR(xHigherPriorityTaskWoken);	
 710              		.loc 1 135 7 is_stmt 0 view .LVU164
 711 0040 FFF7FEFF 		bl	xQueueGiveFromISR
 712              	.LVL51:
 136:Core/Src/main.c **** 		}	
 713              		.loc 1 136 7 is_stmt 1 view .LVU165
 714 0044 F0E7     		b	.L52
 715              	.L56:
 716 0046 00BF     		.align	2
 717              	.L55:
 718 0048 00000000 		.word	.LANCHOR5
 719 004c 00000000 		.word	.LANCHOR2
 720 0050 7A000000 		.word	.LANCHOR2+122
 721 0054 00000000 		.word	.LANCHOR4
 722              	.LBE9:
 723              		.cfi_endproc
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 24


 724              	.LFE74:
 726              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 727              		.align	1
 728              		.global	HAL_TIM_PeriodElapsedCallback
 729              		.syntax unified
 730              		.thumb
 731              		.thumb_func
 733              	HAL_TIM_PeriodElapsedCallback:
 734              	.LVL52:
 735              	.LFB87:
 550:Core/Src/main.c ****   }
 551:Core/Src/main.c ****   /* USER CODE END 5 */
 552:Core/Src/main.c **** }
 553:Core/Src/main.c **** 
 554:Core/Src/main.c **** /**
 555:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 556:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 557:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 558:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 559:Core/Src/main.c ****   * @param  htim : TIM handle
 560:Core/Src/main.c ****   * @retval None
 561:Core/Src/main.c ****   */
 562:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 563:Core/Src/main.c **** {
 736              		.loc 1 563 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		.loc 1 563 1 is_stmt 0 view .LVU167
 741 0000 08B5     		push	{r3, lr}
 742              	.LCFI11:
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 3, -8
 745              		.cfi_offset 14, -4
 564:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 565:Core/Src/main.c **** 
 566:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 567:Core/Src/main.c **** 
 568:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 569:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 746              		.loc 1 569 3 is_stmt 1 view .LVU168
 747              		.loc 1 569 11 is_stmt 0 view .LVU169
 748 0002 0268     		ldr	r2, [r0]
 749              		.loc 1 569 6 view .LVU170
 750 0004 034B     		ldr	r3, .L61
 751 0006 9A42     		cmp	r2, r3
 752 0008 00D0     		beq	.L60
 753              	.LVL53:
 754              	.L57:
 570:Core/Src/main.c **** 
 571:Core/Src/main.c ****     // FatFsCnt ++;
 572:Core/Src/main.c ****     // if(FatFsCnt >= 10)
 573:Core/Src/main.c ****     // {
 574:Core/Src/main.c ****     //   FatFsCnt = 0;
 575:Core/Src/main.c ****     //   SDTimer_Handler();
 576:Core/Src/main.c ****     // }
 577:Core/Src/main.c ****     HAL_IncTick();
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 25


 578:Core/Src/main.c ****   }
 579:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 582:Core/Src/main.c **** }
 755              		.loc 1 582 1 view .LVU171
 756 000a 08BD     		pop	{r3, pc}
 757              	.LVL54:
 758              	.L60:
 577:Core/Src/main.c ****   }
 759              		.loc 1 577 5 is_stmt 1 view .LVU172
 760 000c FFF7FEFF 		bl	HAL_IncTick
 761              	.LVL55:
 762              		.loc 1 582 1 is_stmt 0 view .LVU173
 763 0010 FBE7     		b	.L57
 764              	.L62:
 765 0012 00BF     		.align	2
 766              	.L61:
 767 0014 002C0140 		.word	1073818624
 768              		.cfi_endproc
 769              	.LFE87:
 771              		.section	.text.Error_Handler,"ax",%progbits
 772              		.align	1
 773              		.global	Error_Handler
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 778              	Error_Handler:
 779              	.LFB88:
 583:Core/Src/main.c **** 
 584:Core/Src/main.c **** /**
 585:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 586:Core/Src/main.c ****   * @retval None
 587:Core/Src/main.c ****   */
 588:Core/Src/main.c **** void Error_Handler(void)
 589:Core/Src/main.c **** {
 780              		.loc 1 589 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ Volatile: function does not return.
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              		@ link register save eliminated.
 590:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 591:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 592:Core/Src/main.c ****   __disable_irq();
 786              		.loc 1 592 3 view .LVU175
 787              	.LBB10:
 788              	.LBI10:
 789              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 26


   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 27


  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 28


 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 790              		.loc 2 140 27 view .LVU176
 791              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 792              		.loc 2 142 3 view .LVU177
 793              		.syntax unified
 794              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 795 0000 72B6     		cpsid i
 796              	@ 0 "" 2
 797              		.thumb
 798              		.syntax unified
 799              	.L64:
 800              	.LBE11:
 801              	.LBE10:
 593:Core/Src/main.c ****   while (1)
 802              		.loc 1 593 3 discriminator 1 view .LVU178
 594:Core/Src/main.c ****   {
 595:Core/Src/main.c ****   }
 803              		.loc 1 595 3 discriminator 1 view .LVU179
 593:Core/Src/main.c ****   while (1)
 804              		.loc 1 593 9 discriminator 1 view .LVU180
 805 0002 FEE7     		b	.L64
 806              		.cfi_endproc
 807              	.LFE88:
 809              		.section	.text.MX_I2C1_Init,"ax",%progbits
 810              		.align	1
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 815              	MX_I2C1_Init:
 816              	.LFB77:
 294:Core/Src/main.c **** 
 817              		.loc 1 294 1 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821 0000 08B5     		push	{r3, lr}
 822              	.LCFI12:
 823              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 29


 824              		.cfi_offset 3, -8
 825              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 826              		.loc 1 303 3 view .LVU182
 303:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 827              		.loc 1 303 18 is_stmt 0 view .LVU183
 828 0002 0A48     		ldr	r0, .L69
 829 0004 0A4B     		ldr	r3, .L69+4
 830 0006 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 831              		.loc 1 304 3 is_stmt 1 view .LVU184
 304:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 832              		.loc 1 304 25 is_stmt 0 view .LVU185
 833 0008 0A4B     		ldr	r3, .L69+8
 834 000a 4360     		str	r3, [r0, #4]
 305:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 835              		.loc 1 305 3 is_stmt 1 view .LVU186
 305:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 836              		.loc 1 305 24 is_stmt 0 view .LVU187
 837 000c 0023     		movs	r3, #0
 838 000e 8360     		str	r3, [r0, #8]
 306:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 839              		.loc 1 306 3 is_stmt 1 view .LVU188
 306:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 840              		.loc 1 306 26 is_stmt 0 view .LVU189
 841 0010 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 842              		.loc 1 307 3 is_stmt 1 view .LVU190
 307:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 843              		.loc 1 307 29 is_stmt 0 view .LVU191
 844 0012 4FF48042 		mov	r2, #16384
 845 0016 0261     		str	r2, [r0, #16]
 308:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 846              		.loc 1 308 3 is_stmt 1 view .LVU192
 308:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 847              		.loc 1 308 30 is_stmt 0 view .LVU193
 848 0018 4361     		str	r3, [r0, #20]
 309:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 849              		.loc 1 309 3 is_stmt 1 view .LVU194
 309:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 850              		.loc 1 309 26 is_stmt 0 view .LVU195
 851 001a 8361     		str	r3, [r0, #24]
 310:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 852              		.loc 1 310 3 is_stmt 1 view .LVU196
 310:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 853              		.loc 1 310 30 is_stmt 0 view .LVU197
 854 001c C361     		str	r3, [r0, #28]
 311:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 855              		.loc 1 311 3 is_stmt 1 view .LVU198
 311:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 856              		.loc 1 311 28 is_stmt 0 view .LVU199
 857 001e 0362     		str	r3, [r0, #32]
 312:Core/Src/main.c ****   {
 858              		.loc 1 312 3 is_stmt 1 view .LVU200
 312:Core/Src/main.c ****   {
 859              		.loc 1 312 7 is_stmt 0 view .LVU201
 860 0020 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 30


 861              	.LVL56:
 312:Core/Src/main.c ****   {
 862              		.loc 1 312 6 view .LVU202
 863 0024 00B9     		cbnz	r0, .L68
 320:Core/Src/main.c **** 
 864              		.loc 1 320 1 view .LVU203
 865 0026 08BD     		pop	{r3, pc}
 866              	.L68:
 314:Core/Src/main.c ****   }
 867              		.loc 1 314 5 is_stmt 1 view .LVU204
 868 0028 FFF7FEFF 		bl	Error_Handler
 869              	.LVL57:
 870              	.L70:
 871              		.align	2
 872              	.L69:
 873 002c 00000000 		.word	.LANCHOR6
 874 0030 00540040 		.word	1073763328
 875 0034 A0860100 		.word	100000
 876              		.cfi_endproc
 877              	.LFE77:
 879              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 880              		.align	1
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	MX_USART2_UART_Init:
 886              	.LFB79:
 366:Core/Src/main.c **** 
 887              		.loc 1 366 1 view -0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891 0000 08B5     		push	{r3, lr}
 892              	.LCFI13:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 3, -8
 895              		.cfi_offset 14, -4
 375:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 896              		.loc 1 375 3 view .LVU206
 375:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 897              		.loc 1 375 19 is_stmt 0 view .LVU207
 898 0002 0A48     		ldr	r0, .L75
 899 0004 0A4B     		ldr	r3, .L75+4
 900 0006 0360     		str	r3, [r0]
 376:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 901              		.loc 1 376 3 is_stmt 1 view .LVU208
 376:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 902              		.loc 1 376 24 is_stmt 0 view .LVU209
 903 0008 4FF4E133 		mov	r3, #115200
 904 000c 4360     		str	r3, [r0, #4]
 377:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 905              		.loc 1 377 3 is_stmt 1 view .LVU210
 377:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 906              		.loc 1 377 26 is_stmt 0 view .LVU211
 907 000e 0023     		movs	r3, #0
 908 0010 8360     		str	r3, [r0, #8]
 378:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 31


 909              		.loc 1 378 3 is_stmt 1 view .LVU212
 378:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 910              		.loc 1 378 24 is_stmt 0 view .LVU213
 911 0012 C360     		str	r3, [r0, #12]
 379:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 912              		.loc 1 379 3 is_stmt 1 view .LVU214
 379:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 913              		.loc 1 379 22 is_stmt 0 view .LVU215
 914 0014 0361     		str	r3, [r0, #16]
 380:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 915              		.loc 1 380 3 is_stmt 1 view .LVU216
 380:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 916              		.loc 1 380 20 is_stmt 0 view .LVU217
 917 0016 0C22     		movs	r2, #12
 918 0018 4261     		str	r2, [r0, #20]
 381:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 919              		.loc 1 381 3 is_stmt 1 view .LVU218
 381:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 920              		.loc 1 381 25 is_stmt 0 view .LVU219
 921 001a 8361     		str	r3, [r0, #24]
 382:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 922              		.loc 1 382 3 is_stmt 1 view .LVU220
 382:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 923              		.loc 1 382 28 is_stmt 0 view .LVU221
 924 001c C361     		str	r3, [r0, #28]
 383:Core/Src/main.c ****   {
 925              		.loc 1 383 3 is_stmt 1 view .LVU222
 383:Core/Src/main.c ****   {
 926              		.loc 1 383 7 is_stmt 0 view .LVU223
 927 001e FFF7FEFF 		bl	HAL_UART_Init
 928              	.LVL58:
 383:Core/Src/main.c ****   {
 929              		.loc 1 383 6 view .LVU224
 930 0022 00B9     		cbnz	r0, .L74
 391:Core/Src/main.c **** 
 931              		.loc 1 391 1 view .LVU225
 932 0024 08BD     		pop	{r3, pc}
 933              	.L74:
 385:Core/Src/main.c ****   }
 934              		.loc 1 385 5 is_stmt 1 view .LVU226
 935 0026 FFF7FEFF 		bl	Error_Handler
 936              	.LVL59:
 937              	.L76:
 938 002a 00BF     		.align	2
 939              	.L75:
 940 002c 00000000 		.word	.LANCHOR5
 941 0030 00440040 		.word	1073759232
 942              		.cfi_endproc
 943              	.LFE79:
 945              		.section	.text.SystemClock_Config,"ax",%progbits
 946              		.align	1
 947              		.global	SystemClock_Config
 948              		.syntax unified
 949              		.thumb
 950              		.thumb_func
 952              	SystemClock_Config:
 953              	.LFB76:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 32


 248:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 954              		.loc 1 248 1 view -0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 80
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958 0000 00B5     		push	{lr}
 959              	.LCFI14:
 960              		.cfi_def_cfa_offset 4
 961              		.cfi_offset 14, -4
 962 0002 95B0     		sub	sp, sp, #84
 963              	.LCFI15:
 964              		.cfi_def_cfa_offset 88
 249:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 965              		.loc 1 249 3 view .LVU228
 249:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 966              		.loc 1 249 22 is_stmt 0 view .LVU229
 967 0004 2822     		movs	r2, #40
 968 0006 0021     		movs	r1, #0
 969 0008 0DEB0200 		add	r0, sp, r2
 970 000c FFF7FEFF 		bl	memset
 971              	.LVL60:
 250:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 972              		.loc 1 250 3 is_stmt 1 view .LVU230
 250:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 973              		.loc 1 250 22 is_stmt 0 view .LVU231
 974 0010 0023     		movs	r3, #0
 975 0012 0593     		str	r3, [sp, #20]
 976 0014 0693     		str	r3, [sp, #24]
 977 0016 0793     		str	r3, [sp, #28]
 978 0018 0893     		str	r3, [sp, #32]
 979 001a 0993     		str	r3, [sp, #36]
 251:Core/Src/main.c **** 
 980              		.loc 1 251 3 is_stmt 1 view .LVU232
 251:Core/Src/main.c **** 
 981              		.loc 1 251 28 is_stmt 0 view .LVU233
 982 001c 0193     		str	r3, [sp, #4]
 983 001e 0293     		str	r3, [sp, #8]
 984 0020 0393     		str	r3, [sp, #12]
 985 0022 0493     		str	r3, [sp, #16]
 256:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 986              		.loc 1 256 3 is_stmt 1 view .LVU234
 256:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 987              		.loc 1 256 36 is_stmt 0 view .LVU235
 988 0024 0122     		movs	r2, #1
 989 0026 0A92     		str	r2, [sp, #40]
 257:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 990              		.loc 1 257 3 is_stmt 1 view .LVU236
 257:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 991              		.loc 1 257 30 is_stmt 0 view .LVU237
 992 0028 4FF48033 		mov	r3, #65536
 993 002c 0B93     		str	r3, [sp, #44]
 258:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 994              		.loc 1 258 3 is_stmt 1 view .LVU238
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 995              		.loc 1 259 3 view .LVU239
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 996              		.loc 1 259 30 is_stmt 0 view .LVU240
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 33


 997 002e 0E92     		str	r2, [sp, #56]
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 998              		.loc 1 260 3 is_stmt 1 view .LVU241
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 999              		.loc 1 260 34 is_stmt 0 view .LVU242
 1000 0030 0222     		movs	r2, #2
 1001 0032 1192     		str	r2, [sp, #68]
 261:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1002              		.loc 1 261 3 is_stmt 1 view .LVU243
 261:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1003              		.loc 1 261 35 is_stmt 0 view .LVU244
 1004 0034 1293     		str	r3, [sp, #72]
 262:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1005              		.loc 1 262 3 is_stmt 1 view .LVU245
 262:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1006              		.loc 1 262 32 is_stmt 0 view .LVU246
 1007 0036 4FF4E013 		mov	r3, #1835008
 1008 003a 1393     		str	r3, [sp, #76]
 263:Core/Src/main.c ****   {
 1009              		.loc 1 263 3 is_stmt 1 view .LVU247
 263:Core/Src/main.c ****   {
 1010              		.loc 1 263 7 is_stmt 0 view .LVU248
 1011 003c 0AA8     		add	r0, sp, #40
 1012 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 1013              	.LVL61:
 263:Core/Src/main.c ****   {
 1014              		.loc 1 263 6 view .LVU249
 1015 0042 C0B9     		cbnz	r0, .L82
 269:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1016              		.loc 1 269 3 is_stmt 1 view .LVU250
 269:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1017              		.loc 1 269 31 is_stmt 0 view .LVU251
 1018 0044 0F23     		movs	r3, #15
 1019 0046 0593     		str	r3, [sp, #20]
 271:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1020              		.loc 1 271 3 is_stmt 1 view .LVU252
 271:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1021              		.loc 1 271 34 is_stmt 0 view .LVU253
 1022 0048 0221     		movs	r1, #2
 1023 004a 0691     		str	r1, [sp, #24]
 272:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1024              		.loc 1 272 3 is_stmt 1 view .LVU254
 272:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1025              		.loc 1 272 35 is_stmt 0 view .LVU255
 1026 004c 0023     		movs	r3, #0
 1027 004e 0793     		str	r3, [sp, #28]
 273:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1028              		.loc 1 273 3 is_stmt 1 view .LVU256
 273:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1029              		.loc 1 273 36 is_stmt 0 view .LVU257
 1030 0050 4FF48062 		mov	r2, #1024
 1031 0054 0892     		str	r2, [sp, #32]
 274:Core/Src/main.c **** 
 1032              		.loc 1 274 3 is_stmt 1 view .LVU258
 274:Core/Src/main.c **** 
 1033              		.loc 1 274 36 is_stmt 0 view .LVU259
 1034 0056 0993     		str	r3, [sp, #36]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 34


 276:Core/Src/main.c ****   {
 1035              		.loc 1 276 3 is_stmt 1 view .LVU260
 276:Core/Src/main.c ****   {
 1036              		.loc 1 276 7 is_stmt 0 view .LVU261
 1037 0058 05A8     		add	r0, sp, #20
 1038 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1039              	.LVL62:
 276:Core/Src/main.c ****   {
 1040              		.loc 1 276 6 view .LVU262
 1041 005e 60B9     		cbnz	r0, .L83
 280:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1042              		.loc 1 280 3 is_stmt 1 view .LVU263
 280:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 1043              		.loc 1 280 38 is_stmt 0 view .LVU264
 1044 0060 1023     		movs	r3, #16
 1045 0062 0193     		str	r3, [sp, #4]
 281:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1046              		.loc 1 281 3 is_stmt 1 view .LVU265
 281:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 1047              		.loc 1 281 35 is_stmt 0 view .LVU266
 1048 0064 0023     		movs	r3, #0
 1049 0066 0493     		str	r3, [sp, #16]
 282:Core/Src/main.c ****   {
 1050              		.loc 1 282 3 is_stmt 1 view .LVU267
 282:Core/Src/main.c ****   {
 1051              		.loc 1 282 7 is_stmt 0 view .LVU268
 1052 0068 01A8     		add	r0, sp, #4
 1053 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1054              	.LVL63:
 282:Core/Src/main.c ****   {
 1055              		.loc 1 282 6 view .LVU269
 1056 006e 30B9     		cbnz	r0, .L84
 286:Core/Src/main.c **** 
 1057              		.loc 1 286 1 view .LVU270
 1058 0070 15B0     		add	sp, sp, #84
 1059              	.LCFI16:
 1060              		.cfi_remember_state
 1061              		.cfi_def_cfa_offset 4
 1062              		@ sp needed
 1063 0072 5DF804FB 		ldr	pc, [sp], #4
 1064              	.L82:
 1065              	.LCFI17:
 1066              		.cfi_restore_state
 265:Core/Src/main.c ****   }
 1067              		.loc 1 265 5 is_stmt 1 view .LVU271
 1068 0076 FFF7FEFF 		bl	Error_Handler
 1069              	.LVL64:
 1070              	.L83:
 278:Core/Src/main.c ****   }
 1071              		.loc 1 278 5 view .LVU272
 1072 007a FFF7FEFF 		bl	Error_Handler
 1073              	.LVL65:
 1074              	.L84:
 284:Core/Src/main.c ****   }
 1075              		.loc 1 284 5 view .LVU273
 1076 007e FFF7FEFF 		bl	Error_Handler
 1077              	.LVL66:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 35


 1078              		.cfi_endproc
 1079              	.LFE76:
 1081              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1082              		.align	2
 1083              	.LC0:
 1084 0000 44656661 		.ascii	"Default\000"
 1084      756C7400 
 1085              		.align	2
 1086              	.LC1:
 1087 0008 52656365 		.ascii	"ReceiveDataFromGUI\000"
 1087      69766544 
 1087      61746146 
 1087      726F6D47 
 1087      554900
 1088 001b 00       		.align	2
 1089              	.LC2:
 1090 001c 43686563 		.ascii	"CheckUSBConnect\000"
 1090      6B555342 
 1090      436F6E6E 
 1090      65637400 
 1091              		.align	2
 1092              	.LC3:
 1093 002c 50726F63 		.ascii	"ProcessBtnPress\000"
 1093      65737342 
 1093      746E5072 
 1093      65737300 
 1094              		.align	2
 1095              	.LC4:
 1096 003c 50726F63 		.ascii	"ProcessMode\000"
 1096      6573734D 
 1096      6F646500 
 1097              		.align	2
 1098              	.LC5:
 1099 0048 52656365 		.ascii	"ReceiveDataFromCNC\000"
 1099      69766544 
 1099      61746146 
 1099      726F6D43 
 1099      4E4300
 1100              		.section	.text.main,"ax",%progbits
 1101              		.align	1
 1102              		.global	main
 1103              		.syntax unified
 1104              		.thumb
 1105              		.thumb_func
 1107              	main:
 1108              	.LFB75:
 149:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1109              		.loc 1 149 1 view -0
 1110              		.cfi_startproc
 1111              		@ Volatile: function does not return.
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114 0000 00B5     		push	{lr}
 1115              	.LCFI18:
 1116              		.cfi_def_cfa_offset 4
 1117              		.cfi_offset 14, -4
 1118 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 36


 1119              	.LCFI19:
 1120              		.cfi_def_cfa_offset 16
 157:Core/Src/main.c **** 
 1121              		.loc 1 157 3 view .LVU275
 1122 0004 FFF7FEFF 		bl	HAL_Init
 1123              	.LVL67:
 164:Core/Src/main.c **** 
 1124              		.loc 1 164 3 view .LVU276
 1125 0008 FFF7FEFF 		bl	SystemClock_Config
 1126              	.LVL68:
 171:Core/Src/main.c ****   MX_I2C1_Init();
 1127              		.loc 1 171 3 view .LVU277
 1128 000c FFF7FEFF 		bl	MX_GPIO_Init
 1129              	.LVL69:
 172:Core/Src/main.c ****   //MX_SPI1_Init();
 1130              		.loc 1 172 3 view .LVU278
 1131 0010 FFF7FEFF 		bl	MX_I2C1_Init
 1132              	.LVL70:
 174:Core/Src/main.c ****   //MX_FATFS_Init();
 1133              		.loc 1 174 3 view .LVU279
 1134 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 1135              	.LVL71:
 177:Core/Src/main.c ****   InitCNC(&cnc);
 1136              		.loc 1 177 3 view .LVU280
 1137 0018 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1138              	.LVL72:
 178:Core/Src/main.c **** 
 1139              		.loc 1 178 3 view .LVU281
 1140 001c 314C     		ldr	r4, .L88
 1141 001e 2046     		mov	r0, r4
 1142 0020 FFF7FEFF 		bl	InitCNC
 1143              	.LVL73:
 180:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1144              		.loc 1 180 3 view .LVU282
 180:Core/Src/main.c ****   cnc.husb = &hUsbDeviceFS;
 1145              		.loc 1 180 18 is_stmt 0 view .LVU283
 1146 0024 3048     		ldr	r0, .L88+4
 1147 0026 E066     		str	r0, [r4, #108]
 181:Core/Src/main.c **** 
 1148              		.loc 1 181 3 is_stmt 1 view .LVU284
 181:Core/Src/main.c **** 
 1149              		.loc 1 181 12 is_stmt 0 view .LVU285
 1150 0028 304B     		ldr	r3, .L88+8
 1151 002a 6366     		str	r3, [r4, #100]
 183:Core/Src/main.c **** 
 1152              		.loc 1 183 3 is_stmt 1 view .LVU286
 1153 002c 0122     		movs	r2, #1
 1154 002e 04F17A01 		add	r1, r4, #122
 1155 0032 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1156              	.LVL74:
 194:Core/Src/main.c **** 
 1157              		.loc 1 194 3 view .LVU287
 194:Core/Src/main.c **** 
 1158              		.loc 1 194 19 is_stmt 0 view .LVU288
 1159 0036 0322     		movs	r2, #3
 1160 0038 0021     		movs	r1, #0
 1161 003a 0120     		movs	r0, #1
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 37


 1162 003c FFF7FEFF 		bl	xQueueGenericCreate
 1163              	.LVL75:
 194:Core/Src/main.c **** 
 1164              		.loc 1 194 17 view .LVU289
 1165 0040 2B4B     		ldr	r3, .L88+12
 1166 0042 1860     		str	r0, [r3]
 196:Core/Src/main.c **** 
 1167              		.loc 1 196 3 is_stmt 1 view .LVU290
 196:Core/Src/main.c **** 
 1168              		.loc 1 196 19 is_stmt 0 view .LVU291
 1169 0044 0322     		movs	r2, #3
 1170 0046 0021     		movs	r1, #0
 1171 0048 0120     		movs	r0, #1
 1172 004a FFF7FEFF 		bl	xQueueGenericCreate
 1173              	.LVL76:
 196:Core/Src/main.c **** 
 1174              		.loc 1 196 17 view .LVU292
 1175 004e 294B     		ldr	r3, .L88+16
 1176 0050 1860     		str	r0, [r3]
 198:Core/Src/main.c **** 
 1177              		.loc 1 198 3 is_stmt 1 view .LVU293
 198:Core/Src/main.c **** 
 1178              		.loc 1 198 20 is_stmt 0 view .LVU294
 1179 0052 0322     		movs	r2, #3
 1180 0054 0021     		movs	r1, #0
 1181 0056 0120     		movs	r0, #1
 1182 0058 FFF7FEFF 		bl	xQueueGenericCreate
 1183              	.LVL77:
 198:Core/Src/main.c **** 
 1184              		.loc 1 198 18 view .LVU295
 1185 005c 264B     		ldr	r3, .L88+20
 1186 005e 1860     		str	r0, [r3]
 200:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1187              		.loc 1 200 3 is_stmt 1 view .LVU296
 200:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1188              		.loc 1 200 20 is_stmt 0 view .LVU297
 1189 0060 0322     		movs	r2, #3
 1190 0062 0021     		movs	r1, #0
 1191 0064 0120     		movs	r0, #1
 1192 0066 FFF7FEFF 		bl	xQueueGenericCreate
 1193              	.LVL78:
 200:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 1194              		.loc 1 200 18 view .LVU298
 1195 006a 244B     		ldr	r3, .L88+24
 1196 006c 1860     		str	r0, [r3]
 213:Core/Src/main.c **** 
 1197              		.loc 1 213 3 is_stmt 1 view .LVU299
 1198 006e 244B     		ldr	r3, .L88+28
 1199 0070 0193     		str	r3, [sp, #4]
 1200 0072 0123     		movs	r3, #1
 1201 0074 0093     		str	r3, [sp]
 1202 0076 0023     		movs	r3, #0
 1203 0078 8022     		movs	r2, #128
 1204 007a 2249     		ldr	r1, .L88+32
 1205 007c 2248     		ldr	r0, .L88+36
 1206 007e FFF7FEFF 		bl	xTaskCreate
 1207              	.LVL79:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 38


 217:Core/Src/main.c **** 
 1208              		.loc 1 217 3 view .LVU300
 1209 0082 224B     		ldr	r3, .L88+40
 1210 0084 0193     		str	r3, [sp, #4]
 1211 0086 0224     		movs	r4, #2
 1212 0088 0094     		str	r4, [sp]
 1213 008a 0023     		movs	r3, #0
 1214 008c 8022     		movs	r2, #128
 1215 008e 2049     		ldr	r1, .L88+44
 1216 0090 2048     		ldr	r0, .L88+48
 1217 0092 FFF7FEFF 		bl	xTaskCreate
 1218              	.LVL80:
 219:Core/Src/main.c **** 
 1219              		.loc 1 219 3 view .LVU301
 1220 0096 204B     		ldr	r3, .L88+52
 1221 0098 0193     		str	r3, [sp, #4]
 1222 009a 0094     		str	r4, [sp]
 1223 009c 0023     		movs	r3, #0
 1224 009e 8022     		movs	r2, #128
 1225 00a0 1E49     		ldr	r1, .L88+56
 1226 00a2 1F48     		ldr	r0, .L88+60
 1227 00a4 FFF7FEFF 		bl	xTaskCreate
 1228              	.LVL81:
 221:Core/Src/main.c **** 
 1229              		.loc 1 221 3 view .LVU302
 1230 00a8 1E4B     		ldr	r3, .L88+64
 1231 00aa 0193     		str	r3, [sp, #4]
 1232 00ac 0094     		str	r4, [sp]
 1233 00ae 0023     		movs	r3, #0
 1234 00b0 8022     		movs	r2, #128
 1235 00b2 1D49     		ldr	r1, .L88+68
 1236 00b4 1D48     		ldr	r0, .L88+72
 1237 00b6 FFF7FEFF 		bl	xTaskCreate
 1238              	.LVL82:
 223:Core/Src/main.c **** 
 1239              		.loc 1 223 3 view .LVU303
 1240 00ba 1D4B     		ldr	r3, .L88+76
 1241 00bc 0193     		str	r3, [sp, #4]
 1242 00be 0094     		str	r4, [sp]
 1243 00c0 0023     		movs	r3, #0
 1244 00c2 8022     		movs	r2, #128
 1245 00c4 1B49     		ldr	r1, .L88+80
 1246 00c6 1C48     		ldr	r0, .L88+84
 1247 00c8 FFF7FEFF 		bl	xTaskCreate
 1248              	.LVL83:
 225:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 1249              		.loc 1 225 3 view .LVU304
 1250 00cc 1B4B     		ldr	r3, .L88+88
 1251 00ce 0193     		str	r3, [sp, #4]
 1252 00d0 0094     		str	r4, [sp]
 1253 00d2 0023     		movs	r3, #0
 1254 00d4 8022     		movs	r2, #128
 1255 00d6 1A49     		ldr	r1, .L88+92
 1256 00d8 1A48     		ldr	r0, .L88+96
 1257 00da FFF7FEFF 		bl	xTaskCreate
 1258              	.LVL84:
 229:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 39


 1259              		.loc 1 229 3 view .LVU305
 1260 00de FFF7FEFF 		bl	vTaskStartScheduler
 1261              	.LVL85:
 1262              	.L86:
 234:Core/Src/main.c ****   {
 1263              		.loc 1 234 3 discriminator 1 view .LVU306
 239:Core/Src/main.c ****   /* USER CODE END 3 */
 1264              		.loc 1 239 3 discriminator 1 view .LVU307
 234:Core/Src/main.c ****   {
 1265              		.loc 1 234 9 discriminator 1 view .LVU308
 1266 00e2 FEE7     		b	.L86
 1267              	.L89:
 1268              		.align	2
 1269              	.L88:
 1270 00e4 00000000 		.word	.LANCHOR2
 1271 00e8 00000000 		.word	.LANCHOR5
 1272 00ec 00000000 		.word	hUsbDeviceFS
 1273 00f0 00000000 		.word	.LANCHOR0
 1274 00f4 00000000 		.word	.LANCHOR3
 1275 00f8 00000000 		.word	.LANCHOR1
 1276 00fc 00000000 		.word	.LANCHOR4
 1277 0100 00000000 		.word	.LANCHOR7
 1278 0104 00000000 		.word	.LC0
 1279 0108 00000000 		.word	DefaultTask
 1280 010c 00000000 		.word	.LANCHOR8
 1281 0110 08000000 		.word	.LC1
 1282 0114 00000000 		.word	StartReceiveDataFromGUI
 1283 0118 00000000 		.word	.LANCHOR9
 1284 011c 1C000000 		.word	.LC2
 1285 0120 00000000 		.word	StartCheckUSBConnect
 1286 0124 00000000 		.word	.LANCHOR10
 1287 0128 2C000000 		.word	.LC3
 1288 012c 00000000 		.word	StartProcessBtnPress
 1289 0130 00000000 		.word	.LANCHOR11
 1290 0134 3C000000 		.word	.LC4
 1291 0138 00000000 		.word	StartProcessMode
 1292 013c 00000000 		.word	.LANCHOR12
 1293 0140 48000000 		.word	.LC5
 1294 0144 00000000 		.word	StartReceiveDataFromCNC
 1295              		.cfi_endproc
 1296              	.LFE75:
 1298              		.global	cnc
 1299              		.global	ReceiveDataFromCNCTask
 1300              		.global	xSemaphoreUART
 1301              		.global	ProcessModeTask
 1302              		.global	xSemaphoreMode
 1303              		.global	ProcessBtnPressTask
 1304              		.global	xSemaphoreBtn
 1305              		.global	CheckUSBConnectTask
 1306              		.global	ReceiveDataFromGUITask
 1307              		.global	xSemaphoreUSB
 1308              		.global	defaultTask
 1309              		.global	huart2
 1310              		.global	hspi1
 1311              		.global	hi2c1
 1312              		.section	.bss.CheckUSBConnectTask,"aw",%nobits
 1313              		.align	2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 40


 1314              		.set	.LANCHOR9,. + 0
 1317              	CheckUSBConnectTask:
 1318 0000 00000000 		.space	4
 1319              		.section	.bss.ProcessBtnPressTask,"aw",%nobits
 1320              		.align	2
 1321              		.set	.LANCHOR10,. + 0
 1324              	ProcessBtnPressTask:
 1325 0000 00000000 		.space	4
 1326              		.section	.bss.ProcessModeTask,"aw",%nobits
 1327              		.align	2
 1328              		.set	.LANCHOR11,. + 0
 1331              	ProcessModeTask:
 1332 0000 00000000 		.space	4
 1333              		.section	.bss.ReceiveDataFromCNCTask,"aw",%nobits
 1334              		.align	2
 1335              		.set	.LANCHOR12,. + 0
 1338              	ReceiveDataFromCNCTask:
 1339 0000 00000000 		.space	4
 1340              		.section	.bss.ReceiveDataFromGUITask,"aw",%nobits
 1341              		.align	2
 1342              		.set	.LANCHOR8,. + 0
 1345              	ReceiveDataFromGUITask:
 1346 0000 00000000 		.space	4
 1347              		.section	.bss.cnc,"aw",%nobits
 1348              		.align	2
 1349              		.set	.LANCHOR2,. + 0
 1352              	cnc:
 1353 0000 00000000 		.space	136
 1353      00000000 
 1353      00000000 
 1353      00000000 
 1353      00000000 
 1354              		.section	.bss.defaultTask,"aw",%nobits
 1355              		.align	2
 1356              		.set	.LANCHOR7,. + 0
 1359              	defaultTask:
 1360 0000 00000000 		.space	4
 1361              		.section	.bss.hi2c1,"aw",%nobits
 1362              		.align	2
 1363              		.set	.LANCHOR6,. + 0
 1366              	hi2c1:
 1367 0000 00000000 		.space	84
 1367      00000000 
 1367      00000000 
 1367      00000000 
 1367      00000000 
 1368              		.section	.bss.hspi1,"aw",%nobits
 1369              		.align	2
 1372              	hspi1:
 1373 0000 00000000 		.space	88
 1373      00000000 
 1373      00000000 
 1373      00000000 
 1373      00000000 
 1374              		.section	.bss.huart2,"aw",%nobits
 1375              		.align	2
 1376              		.set	.LANCHOR5,. + 0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 41


 1379              	huart2:
 1380 0000 00000000 		.space	68
 1380      00000000 
 1380      00000000 
 1380      00000000 
 1380      00000000 
 1381              		.section	.bss.xSemaphoreBtn,"aw",%nobits
 1382              		.align	2
 1383              		.set	.LANCHOR3,. + 0
 1386              	xSemaphoreBtn:
 1387 0000 00000000 		.space	4
 1388              		.section	.bss.xSemaphoreMode,"aw",%nobits
 1389              		.align	2
 1390              		.set	.LANCHOR1,. + 0
 1393              	xSemaphoreMode:
 1394 0000 00000000 		.space	4
 1395              		.section	.bss.xSemaphoreUART,"aw",%nobits
 1396              		.align	2
 1397              		.set	.LANCHOR4,. + 0
 1400              	xSemaphoreUART:
 1401 0000 00000000 		.space	4
 1402              		.section	.bss.xSemaphoreUSB,"aw",%nobits
 1403              		.align	2
 1404              		.set	.LANCHOR0,. + 0
 1407              	xSemaphoreUSB:
 1408 0000 00000000 		.space	4
 1409              		.text
 1410              	.Letext0:
 1411              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1412              		.file 4 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 1413              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1414              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1415              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1416              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1417              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1418              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1419              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1420              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1421              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1422              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1423              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 1424              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 1425              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1426              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1427              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1428              		.file 20 "Lib/Inc/TaskCNC.h"
 1429              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1430              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1431              		.file 23 "USB_DEVICE/App/usb_device.h"
 1432              		.file 24 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:227    .text.MX_GPIO_Init:000000fc $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:235    .text.StartReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:241    .text.StartReceiveDataFromGUI:00000000 StartReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:278    .text.StartReceiveDataFromGUI:00000020 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:285    .text.StartCheckUSBConnect:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:291    .text.StartCheckUSBConnect:00000000 StartCheckUSBConnect
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:349    .text.StartCheckUSBConnect:00000040 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:357    .text.StartProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:363    .text.StartProcessBtnPress:00000000 StartProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:398    .text.StartProcessBtnPress:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:404    .text.StartProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:410    .text.StartProcessMode:00000000 StartProcessMode
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:445    .text.StartProcessMode:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:451    .text.StartReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:457    .text.StartReceiveDataFromCNC:00000000 StartReceiveDataFromCNC
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:492    .text.StartReceiveDataFromCNC:0000001c $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:498    .text.DefaultTask:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:504    .text.DefaultTask:00000000 DefaultTask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:531    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:537    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:624    .text.HAL_GPIO_EXTI_Callback:0000004c $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:630    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:636    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:718    .text.HAL_UART_RxCpltCallback:00000048 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:727    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:733    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:767    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:772    .text.Error_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:778    .text.Error_Handler:00000000 Error_Handler
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:810    .text.MX_I2C1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:815    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:873    .text.MX_I2C1_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:880    .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:885    .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:940    .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:946    .text.SystemClock_Config:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:952    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1082   .rodata.main.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1101   .text.main:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1107   .text.main:00000000 main
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1270   .text.main:000000e4 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1352   .bss.cnc:00000000 cnc
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1338   .bss.ReceiveDataFromCNCTask:00000000 ReceiveDataFromCNCTask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1400   .bss.xSemaphoreUART:00000000 xSemaphoreUART
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1331   .bss.ProcessModeTask:00000000 ProcessModeTask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1393   .bss.xSemaphoreMode:00000000 xSemaphoreMode
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1324   .bss.ProcessBtnPressTask:00000000 ProcessBtnPressTask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1386   .bss.xSemaphoreBtn:00000000 xSemaphoreBtn
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1317   .bss.CheckUSBConnectTask:00000000 CheckUSBConnectTask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1345   .bss.ReceiveDataFromGUITask:00000000 ReceiveDataFromGUITask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1407   .bss.xSemaphoreUSB:00000000 xSemaphoreUSB
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1359   .bss.defaultTask:00000000 defaultTask
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1379   .bss.huart2:00000000 huart2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s 			page 43


C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1372   .bss.hspi1:00000000 hspi1
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1366   .bss.hi2c1:00000000 hi2c1
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1313   .bss.CheckUSBConnectTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1320   .bss.ProcessBtnPressTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1327   .bss.ProcessModeTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1334   .bss.ReceiveDataFromCNCTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1341   .bss.ReceiveDataFromGUITask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1348   .bss.cnc:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1355   .bss.defaultTask:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1362   .bss.hi2c1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1369   .bss.hspi1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1375   .bss.huart2:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1382   .bss.xSemaphoreBtn:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1389   .bss.xSemaphoreMode:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1396   .bss.xSemaphoreUART:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccdOUWbv.s:1403   .bss.xSemaphoreUSB:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
xQueueSemaphoreTake
ReceiveDataFromGUI
osDelay
hUsbDeviceFS
ProcessBtnPress
ProcessMode
ReceiveDataFromCNC
vTaskDelay
xQueueGiveFromISR
HAL_UART_Receive_IT
HAL_IncTick
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
InitCNC
xQueueGenericCreate
xTaskCreate
vTaskStartScheduler
