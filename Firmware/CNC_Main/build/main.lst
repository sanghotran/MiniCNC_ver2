ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 64656661 		.ascii	"defaultTask\000"
  17      756C7454 
  17      61736B00 
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_GPIO_Init:
  28              	.LFB78:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usb_device.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 2


  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef huart1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** osThreadId defaultTaskHandle;
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_I2C1_Init(void);
  59:Core/Src/main.c **** static void MX_SPI1_Init(void);
  60:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  61:Core/Src/main.c **** void StartDefaultTask(void const * argument);
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 3


  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_I2C1_Init();
 101:Core/Src/main.c ****   MX_SPI1_Init();
 102:Core/Src/main.c ****   MX_USART1_UART_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 108:Core/Src/main.c ****   /* add mutexes, ... */
 109:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 112:Core/Src/main.c ****   /* add semaphores, ... */
 113:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 116:Core/Src/main.c ****   /* start timers, add new ones, ... */
 117:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 120:Core/Src/main.c ****   /* add queues, ... */
 121:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Create the thread(s) */
 124:Core/Src/main.c ****   /* definition and creation of defaultTask */
 125:Core/Src/main.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 126:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 129:Core/Src/main.c ****   /* add threads, ... */
 130:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /* Start scheduler */
 133:Core/Src/main.c ****   osKernelStart();
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 136:Core/Src/main.c ****   /* Infinite loop */
 137:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 138:Core/Src/main.c ****   while (1)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     /* USER CODE END WHILE */
 141:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 4


 142:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 143:Core/Src/main.c ****   }
 144:Core/Src/main.c ****   /* USER CODE END 3 */
 145:Core/Src/main.c **** }
 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** /**
 148:Core/Src/main.c ****   * @brief System Clock Configuration
 149:Core/Src/main.c ****   * @retval None
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c **** void SystemClock_Config(void)
 152:Core/Src/main.c **** {
 153:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 154:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 155:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 158:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 163:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 167:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 174:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 176:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 178:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 185:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 186:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_I2C1_Init(void)
 198:Core/Src/main.c **** {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 5


 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 207:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 208:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 209:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 210:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 211:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 212:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 213:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 214:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 215:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 216:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c **** }
 225:Core/Src/main.c **** 
 226:Core/Src/main.c **** /**
 227:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 228:Core/Src/main.c ****   * @param None
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** static void MX_SPI1_Init(void)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 241:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 242:Core/Src/main.c ****   hspi1.Instance = SPI1;
 243:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 244:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 245:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 246:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 247:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 248:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 249:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 250:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 251:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 252:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 253:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 254:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 255:Core/Src/main.c ****   {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 6


 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** /**
 265:Core/Src/main.c ****   * @brief USART1 Initialization Function
 266:Core/Src/main.c ****   * @param None
 267:Core/Src/main.c ****   * @retval None
 268:Core/Src/main.c ****   */
 269:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 270:Core/Src/main.c **** {
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 279:Core/Src/main.c ****   huart1.Instance = USART1;
 280:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 281:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 282:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 283:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 284:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 285:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 286:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 287:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** }
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /**
 298:Core/Src/main.c ****   * @brief GPIO Initialization Function
 299:Core/Src/main.c ****   * @param None
 300:Core/Src/main.c ****   * @retval None
 301:Core/Src/main.c ****   */
 302:Core/Src/main.c **** static void MX_GPIO_Init(void)
 303:Core/Src/main.c **** {
  30              		.loc 1 303 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 4, -24
  38              		.cfi_offset 5, -20
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 7


  39              		.cfi_offset 6, -16
  40              		.cfi_offset 7, -12
  41              		.cfi_offset 8, -8
  42              		.cfi_offset 14, -4
  43 0004 88B0     		sub	sp, sp, #32
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 56
 304:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 304 3 view .LVU1
  47              		.loc 1 304 20 is_stmt 0 view .LVU2
  48 0006 0024     		movs	r4, #0
  49 0008 0494     		str	r4, [sp, #16]
  50 000a 0594     		str	r4, [sp, #20]
  51 000c 0694     		str	r4, [sp, #24]
  52 000e 0794     		str	r4, [sp, #28]
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 307:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  53              		.loc 1 307 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 307 3 view .LVU4
  56              		.loc 1 307 3 view .LVU5
  57 0010 2E4B     		ldr	r3, .L3
  58 0012 9A69     		ldr	r2, [r3, #24]
  59 0014 42F02002 		orr	r2, r2, #32
  60 0018 9A61     		str	r2, [r3, #24]
  61              		.loc 1 307 3 view .LVU6
  62 001a 9A69     		ldr	r2, [r3, #24]
  63 001c 02F02002 		and	r2, r2, #32
  64 0020 0192     		str	r2, [sp, #4]
  65              		.loc 1 307 3 view .LVU7
  66 0022 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 307 3 view .LVU8
 308:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  69              		.loc 1 308 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 308 3 view .LVU10
  72              		.loc 1 308 3 view .LVU11
  73 0024 9A69     		ldr	r2, [r3, #24]
  74 0026 42F00402 		orr	r2, r2, #4
  75 002a 9A61     		str	r2, [r3, #24]
  76              		.loc 1 308 3 view .LVU12
  77 002c 9A69     		ldr	r2, [r3, #24]
  78 002e 02F00402 		and	r2, r2, #4
  79 0032 0292     		str	r2, [sp, #8]
  80              		.loc 1 308 3 view .LVU13
  81 0034 029A     		ldr	r2, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 308 3 view .LVU14
 309:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  84              		.loc 1 309 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 309 3 view .LVU16
  87              		.loc 1 309 3 view .LVU17
  88 0036 9A69     		ldr	r2, [r3, #24]
  89 0038 42F00802 		orr	r2, r2, #8
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 8


  90 003c 9A61     		str	r2, [r3, #24]
  91              		.loc 1 309 3 view .LVU18
  92 003e 9B69     		ldr	r3, [r3, #24]
  93 0040 03F00803 		and	r3, r3, #8
  94 0044 0393     		str	r3, [sp, #12]
  95              		.loc 1 309 3 view .LVU19
  96 0046 039B     		ldr	r3, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 309 3 view .LVU20
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 312:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET);
  99              		.loc 1 312 3 view .LVU21
 100 0048 214E     		ldr	r6, .L3+4
 101 004a 2246     		mov	r2, r4
 102 004c 1021     		movs	r1, #16
 103 004e 3046     		mov	r0, r6
 104 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL0:
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 315:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
 106              		.loc 1 315 3 view .LVU22
 107 0054 1F4D     		ldr	r5, .L3+8
 108 0056 2246     		mov	r2, r4
 109 0058 0321     		movs	r1, #3
 110 005a 2846     		mov	r0, r5
 111 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL1:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /*Configure GPIO pin : PA4 */
 318:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4;
 113              		.loc 1 318 3 view .LVU23
 114              		.loc 1 318 23 is_stmt 0 view .LVU24
 115 0060 1023     		movs	r3, #16
 116 0062 0493     		str	r3, [sp, #16]
 319:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 117              		.loc 1 319 3 is_stmt 1 view .LVU25
 118              		.loc 1 319 24 is_stmt 0 view .LVU26
 119 0064 4FF00108 		mov	r8, #1
 120 0068 CDF81480 		str	r8, [sp, #20]
 320:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 320 3 is_stmt 1 view .LVU27
 122              		.loc 1 320 24 is_stmt 0 view .LVU28
 123 006c 0694     		str	r4, [sp, #24]
 321:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 124              		.loc 1 321 3 is_stmt 1 view .LVU29
 125              		.loc 1 321 25 is_stmt 0 view .LVU30
 126 006e 0227     		movs	r7, #2
 127 0070 0797     		str	r7, [sp, #28]
 322:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 128              		.loc 1 322 3 is_stmt 1 view .LVU31
 129 0072 0DEB0301 		add	r1, sp, r3
 130 0076 3046     		mov	r0, r6
 131 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL2:
 323:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 9


 324:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 325:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 133              		.loc 1 325 3 view .LVU32
 134              		.loc 1 325 23 is_stmt 0 view .LVU33
 135 007c 0323     		movs	r3, #3
 136 007e 0493     		str	r3, [sp, #16]
 326:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 137              		.loc 1 326 3 is_stmt 1 view .LVU34
 138              		.loc 1 326 24 is_stmt 0 view .LVU35
 139 0080 CDF81480 		str	r8, [sp, #20]
 327:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 140              		.loc 1 327 3 is_stmt 1 view .LVU36
 141              		.loc 1 327 24 is_stmt 0 view .LVU37
 142 0084 0694     		str	r4, [sp, #24]
 328:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 143              		.loc 1 328 3 is_stmt 1 view .LVU38
 144              		.loc 1 328 25 is_stmt 0 view .LVU39
 145 0086 0797     		str	r7, [sp, #28]
 329:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 146              		.loc 1 329 3 is_stmt 1 view .LVU40
 147 0088 04A9     		add	r1, sp, #16
 148 008a 2846     		mov	r0, r5
 149 008c FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL3:
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /*Configure GPIO pin : PA15 */
 332:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 151              		.loc 1 332 3 view .LVU41
 152              		.loc 1 332 23 is_stmt 0 view .LVU42
 153 0090 4FF40043 		mov	r3, #32768
 154 0094 0493     		str	r3, [sp, #16]
 333:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 155              		.loc 1 333 3 is_stmt 1 view .LVU43
 156              		.loc 1 333 24 is_stmt 0 view .LVU44
 157 0096 104F     		ldr	r7, .L3+12
 158 0098 0597     		str	r7, [sp, #20]
 334:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 159              		.loc 1 334 3 is_stmt 1 view .LVU45
 160              		.loc 1 334 24 is_stmt 0 view .LVU46
 161 009a 0694     		str	r4, [sp, #24]
 335:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 162              		.loc 1 335 3 is_stmt 1 view .LVU47
 163 009c 04A9     		add	r1, sp, #16
 164 009e 3046     		mov	r0, r6
 165 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 166              	.LVL4:
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /*Configure GPIO pins : PB3 PB4 PB5 */
 338:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 167              		.loc 1 338 3 view .LVU48
 168              		.loc 1 338 23 is_stmt 0 view .LVU49
 169 00a4 3823     		movs	r3, #56
 170 00a6 0493     		str	r3, [sp, #16]
 339:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 171              		.loc 1 339 3 is_stmt 1 view .LVU50
 172              		.loc 1 339 24 is_stmt 0 view .LVU51
 173 00a8 0597     		str	r7, [sp, #20]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 10


 340:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 174              		.loc 1 340 3 is_stmt 1 view .LVU52
 175              		.loc 1 340 24 is_stmt 0 view .LVU53
 176 00aa 0694     		str	r4, [sp, #24]
 341:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 177              		.loc 1 341 3 is_stmt 1 view .LVU54
 178 00ac 04A9     		add	r1, sp, #16
 179 00ae 2846     		mov	r0, r5
 180 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL5:
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* EXTI interrupt init*/
 344:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 182              		.loc 1 344 3 view .LVU55
 183 00b4 2246     		mov	r2, r4
 184 00b6 2146     		mov	r1, r4
 185 00b8 1720     		movs	r0, #23
 186 00ba FFF7FEFF 		bl	HAL_NVIC_SetPriority
 187              	.LVL6:
 345:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 188              		.loc 1 345 3 view .LVU56
 189 00be 1720     		movs	r0, #23
 190 00c0 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 191              	.LVL7:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c **** }
 192              		.loc 1 347 1 is_stmt 0 view .LVU57
 193 00c4 08B0     		add	sp, sp, #32
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 24
 196              		@ sp needed
 197 00c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 198              	.L4:
 199 00ca 00BF     		.align	2
 200              	.L3:
 201 00cc 00100240 		.word	1073876992
 202 00d0 00080140 		.word	1073809408
 203 00d4 000C0140 		.word	1073810432
 204 00d8 00001110 		.word	269549568
 205              		.cfi_endproc
 206              	.LFE78:
 208              		.section	.text.StartDefaultTask,"ax",%progbits
 209              		.align	1
 210              		.global	StartDefaultTask
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 215              	StartDefaultTask:
 216              	.LVL8:
 217              	.LFB79:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** /* USER CODE END 4 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 354:Core/Src/main.c **** /**
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 11


 355:Core/Src/main.c ****   * @brief  Function implementing the defaultTask thread.
 356:Core/Src/main.c ****   * @param  argument: Not used
 357:Core/Src/main.c ****   * @retval None
 358:Core/Src/main.c ****   */
 359:Core/Src/main.c **** /* USER CODE END Header_StartDefaultTask */
 360:Core/Src/main.c **** void StartDefaultTask(void const * argument)
 361:Core/Src/main.c **** {
 218              		.loc 1 361 1 is_stmt 1 view -0
 219              		.cfi_startproc
 220              		@ Volatile: function does not return.
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		.loc 1 361 1 is_stmt 0 view .LVU59
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 362:Core/Src/main.c ****   /* init code for USB_DEVICE */
 363:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 229              		.loc 1 363 3 is_stmt 1 view .LVU60
 230 0002 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 231              	.LVL9:
 232              	.L6:
 364:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 365:Core/Src/main.c ****   /* Infinite loop */
 366:Core/Src/main.c ****   for(;;)
 233              		.loc 1 366 3 discriminator 1 view .LVU61
 367:Core/Src/main.c ****   {
 368:Core/Src/main.c ****     osDelay(1);
 234              		.loc 1 368 5 discriminator 1 view .LVU62
 235 0006 0120     		movs	r0, #1
 236 0008 FFF7FEFF 		bl	osDelay
 237              	.LVL10:
 366:Core/Src/main.c ****   {
 238              		.loc 1 366 8 discriminator 1 view .LVU63
 239 000c FBE7     		b	.L6
 240              		.cfi_endproc
 241              	.LFE79:
 243              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 244              		.align	1
 245              		.global	HAL_TIM_PeriodElapsedCallback
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	HAL_TIM_PeriodElapsedCallback:
 251              	.LVL11:
 252              	.LFB80:
 369:Core/Src/main.c ****   }
 370:Core/Src/main.c ****   /* USER CODE END 5 */
 371:Core/Src/main.c **** }
 372:Core/Src/main.c **** 
 373:Core/Src/main.c **** /**
 374:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 375:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 376:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 377:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 12


 378:Core/Src/main.c ****   * @param  htim : TIM handle
 379:Core/Src/main.c ****   * @retval None
 380:Core/Src/main.c ****   */
 381:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 382:Core/Src/main.c **** {
 253              		.loc 1 382 1 view -0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		.loc 1 382 1 is_stmt 0 view .LVU65
 258 0000 08B5     		push	{r3, lr}
 259              	.LCFI4:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
 383:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 386:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 263              		.loc 1 386 3 is_stmt 1 view .LVU66
 264              		.loc 1 386 11 is_stmt 0 view .LVU67
 265 0002 0268     		ldr	r2, [r0]
 266              		.loc 1 386 6 view .LVU68
 267 0004 034B     		ldr	r3, .L12
 268 0006 9A42     		cmp	r2, r3
 269 0008 00D0     		beq	.L11
 270              	.LVL12:
 271              	.L8:
 387:Core/Src/main.c ****     HAL_IncTick();
 388:Core/Src/main.c ****   }
 389:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 392:Core/Src/main.c **** }
 272              		.loc 1 392 1 view .LVU69
 273 000a 08BD     		pop	{r3, pc}
 274              	.LVL13:
 275              	.L11:
 387:Core/Src/main.c ****     HAL_IncTick();
 276              		.loc 1 387 5 is_stmt 1 view .LVU70
 277 000c FFF7FEFF 		bl	HAL_IncTick
 278              	.LVL14:
 279              		.loc 1 392 1 is_stmt 0 view .LVU71
 280 0010 FBE7     		b	.L8
 281              	.L13:
 282 0012 00BF     		.align	2
 283              	.L12:
 284 0014 002C0140 		.word	1073818624
 285              		.cfi_endproc
 286              	.LFE80:
 288              		.section	.text.Error_Handler,"ax",%progbits
 289              		.align	1
 290              		.global	Error_Handler
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	Error_Handler:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 13


 296              	.LFB81:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** /**
 395:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 396:Core/Src/main.c ****   * @retval None
 397:Core/Src/main.c ****   */
 398:Core/Src/main.c **** void Error_Handler(void)
 399:Core/Src/main.c **** {
 297              		.loc 1 399 1 is_stmt 1 view -0
 298              		.cfi_startproc
 299              		@ Volatile: function does not return.
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 400:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 401:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 402:Core/Src/main.c ****   __disable_irq();
 303              		.loc 1 402 3 view .LVU73
 304              	.LBB7:
 305              	.LBI7:
 306              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 14


  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 15


  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 307              		.loc 2 140 27 view .LVU74
 308              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 309              		.loc 2 142 3 view .LVU75
 310              		.syntax unified
 311              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 312 0000 72B6     		cpsid i
 313              	@ 0 "" 2
 314              		.thumb
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 16


 315              		.syntax unified
 316              	.L15:
 317              	.LBE8:
 318              	.LBE7:
 403:Core/Src/main.c ****   while (1)
 319              		.loc 1 403 3 discriminator 1 view .LVU76
 404:Core/Src/main.c ****   {
 405:Core/Src/main.c ****   }
 320              		.loc 1 405 3 discriminator 1 view .LVU77
 403:Core/Src/main.c ****   while (1)
 321              		.loc 1 403 9 discriminator 1 view .LVU78
 322 0002 FEE7     		b	.L15
 323              		.cfi_endproc
 324              	.LFE81:
 326              		.section	.text.MX_I2C1_Init,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	MX_I2C1_Init:
 333              	.LFB75:
 198:Core/Src/main.c **** 
 334              		.loc 1 198 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0000 08B5     		push	{r3, lr}
 339              	.LCFI5:
 340              		.cfi_def_cfa_offset 8
 341              		.cfi_offset 3, -8
 342              		.cfi_offset 14, -4
 207:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 343              		.loc 1 207 3 view .LVU80
 207:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 344              		.loc 1 207 18 is_stmt 0 view .LVU81
 345 0002 0A48     		ldr	r0, .L20
 346 0004 0A4B     		ldr	r3, .L20+4
 347 0006 0360     		str	r3, [r0]
 208:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 348              		.loc 1 208 3 is_stmt 1 view .LVU82
 208:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 349              		.loc 1 208 25 is_stmt 0 view .LVU83
 350 0008 0A4B     		ldr	r3, .L20+8
 351 000a 4360     		str	r3, [r0, #4]
 209:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 352              		.loc 1 209 3 is_stmt 1 view .LVU84
 209:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 353              		.loc 1 209 24 is_stmt 0 view .LVU85
 354 000c 0023     		movs	r3, #0
 355 000e 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 356              		.loc 1 210 3 is_stmt 1 view .LVU86
 210:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 357              		.loc 1 210 26 is_stmt 0 view .LVU87
 358 0010 C360     		str	r3, [r0, #12]
 211:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 359              		.loc 1 211 3 is_stmt 1 view .LVU88
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 17


 211:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 360              		.loc 1 211 29 is_stmt 0 view .LVU89
 361 0012 4FF48042 		mov	r2, #16384
 362 0016 0261     		str	r2, [r0, #16]
 212:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 363              		.loc 1 212 3 is_stmt 1 view .LVU90
 212:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 364              		.loc 1 212 30 is_stmt 0 view .LVU91
 365 0018 4361     		str	r3, [r0, #20]
 213:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 366              		.loc 1 213 3 is_stmt 1 view .LVU92
 213:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 367              		.loc 1 213 26 is_stmt 0 view .LVU93
 368 001a 8361     		str	r3, [r0, #24]
 214:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 369              		.loc 1 214 3 is_stmt 1 view .LVU94
 214:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 370              		.loc 1 214 30 is_stmt 0 view .LVU95
 371 001c C361     		str	r3, [r0, #28]
 215:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 372              		.loc 1 215 3 is_stmt 1 view .LVU96
 215:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 373              		.loc 1 215 28 is_stmt 0 view .LVU97
 374 001e 0362     		str	r3, [r0, #32]
 216:Core/Src/main.c ****   {
 375              		.loc 1 216 3 is_stmt 1 view .LVU98
 216:Core/Src/main.c ****   {
 376              		.loc 1 216 7 is_stmt 0 view .LVU99
 377 0020 FFF7FEFF 		bl	HAL_I2C_Init
 378              	.LVL15:
 216:Core/Src/main.c ****   {
 379              		.loc 1 216 6 view .LVU100
 380 0024 00B9     		cbnz	r0, .L19
 224:Core/Src/main.c **** 
 381              		.loc 1 224 1 view .LVU101
 382 0026 08BD     		pop	{r3, pc}
 383              	.L19:
 218:Core/Src/main.c ****   }
 384              		.loc 1 218 5 is_stmt 1 view .LVU102
 385 0028 FFF7FEFF 		bl	Error_Handler
 386              	.LVL16:
 387              	.L21:
 388              		.align	2
 389              	.L20:
 390 002c 00000000 		.word	.LANCHOR0
 391 0030 00540040 		.word	1073763328
 392 0034 A0860100 		.word	100000
 393              		.cfi_endproc
 394              	.LFE75:
 396              		.section	.text.MX_SPI1_Init,"ax",%progbits
 397              		.align	1
 398              		.syntax unified
 399              		.thumb
 400              		.thumb_func
 402              	MX_SPI1_Init:
 403              	.LFB76:
 232:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 18


 404              		.loc 1 232 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408 0000 08B5     		push	{r3, lr}
 409              	.LCFI6:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 242:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 413              		.loc 1 242 3 view .LVU104
 242:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 414              		.loc 1 242 18 is_stmt 0 view .LVU105
 415 0002 0D48     		ldr	r0, .L26
 416 0004 0D4B     		ldr	r3, .L26+4
 417 0006 0360     		str	r3, [r0]
 243:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 418              		.loc 1 243 3 is_stmt 1 view .LVU106
 243:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 419              		.loc 1 243 19 is_stmt 0 view .LVU107
 420 0008 4FF48273 		mov	r3, #260
 421 000c 4360     		str	r3, [r0, #4]
 244:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 422              		.loc 1 244 3 is_stmt 1 view .LVU108
 244:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 423              		.loc 1 244 24 is_stmt 0 view .LVU109
 424 000e 0023     		movs	r3, #0
 425 0010 8360     		str	r3, [r0, #8]
 245:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 426              		.loc 1 245 3 is_stmt 1 view .LVU110
 245:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 427              		.loc 1 245 23 is_stmt 0 view .LVU111
 428 0012 C360     		str	r3, [r0, #12]
 246:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 429              		.loc 1 246 3 is_stmt 1 view .LVU112
 246:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 430              		.loc 1 246 26 is_stmt 0 view .LVU113
 431 0014 0361     		str	r3, [r0, #16]
 247:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 432              		.loc 1 247 3 is_stmt 1 view .LVU114
 247:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 433              		.loc 1 247 23 is_stmt 0 view .LVU115
 434 0016 4361     		str	r3, [r0, #20]
 248:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 435              		.loc 1 248 3 is_stmt 1 view .LVU116
 248:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 436              		.loc 1 248 18 is_stmt 0 view .LVU117
 437 0018 4FF40072 		mov	r2, #512
 438 001c 8261     		str	r2, [r0, #24]
 249:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 439              		.loc 1 249 3 is_stmt 1 view .LVU118
 249:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 440              		.loc 1 249 32 is_stmt 0 view .LVU119
 441 001e 0822     		movs	r2, #8
 442 0020 C261     		str	r2, [r0, #28]
 250:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 443              		.loc 1 250 3 is_stmt 1 view .LVU120
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 19


 250:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 444              		.loc 1 250 23 is_stmt 0 view .LVU121
 445 0022 0362     		str	r3, [r0, #32]
 251:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 446              		.loc 1 251 3 is_stmt 1 view .LVU122
 251:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 447              		.loc 1 251 21 is_stmt 0 view .LVU123
 448 0024 4362     		str	r3, [r0, #36]
 252:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 449              		.loc 1 252 3 is_stmt 1 view .LVU124
 252:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 450              		.loc 1 252 29 is_stmt 0 view .LVU125
 451 0026 8362     		str	r3, [r0, #40]
 253:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 452              		.loc 1 253 3 is_stmt 1 view .LVU126
 253:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 453              		.loc 1 253 28 is_stmt 0 view .LVU127
 454 0028 0A23     		movs	r3, #10
 455 002a C362     		str	r3, [r0, #44]
 254:Core/Src/main.c ****   {
 456              		.loc 1 254 3 is_stmt 1 view .LVU128
 254:Core/Src/main.c ****   {
 457              		.loc 1 254 7 is_stmt 0 view .LVU129
 458 002c FFF7FEFF 		bl	HAL_SPI_Init
 459              	.LVL17:
 254:Core/Src/main.c ****   {
 460              		.loc 1 254 6 view .LVU130
 461 0030 00B9     		cbnz	r0, .L25
 262:Core/Src/main.c **** 
 462              		.loc 1 262 1 view .LVU131
 463 0032 08BD     		pop	{r3, pc}
 464              	.L25:
 256:Core/Src/main.c ****   }
 465              		.loc 1 256 5 is_stmt 1 view .LVU132
 466 0034 FFF7FEFF 		bl	Error_Handler
 467              	.LVL18:
 468              	.L27:
 469              		.align	2
 470              	.L26:
 471 0038 00000000 		.word	.LANCHOR1
 472 003c 00300140 		.word	1073819648
 473              		.cfi_endproc
 474              	.LFE76:
 476              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 477              		.align	1
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 482              	MX_USART1_UART_Init:
 483              	.LFB77:
 270:Core/Src/main.c **** 
 484              		.loc 1 270 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488 0000 08B5     		push	{r3, lr}
 489              	.LCFI7:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 20


 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 3, -8
 492              		.cfi_offset 14, -4
 279:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 493              		.loc 1 279 3 view .LVU134
 279:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 494              		.loc 1 279 19 is_stmt 0 view .LVU135
 495 0002 0A48     		ldr	r0, .L32
 496 0004 0A4B     		ldr	r3, .L32+4
 497 0006 0360     		str	r3, [r0]
 280:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 498              		.loc 1 280 3 is_stmt 1 view .LVU136
 280:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 499              		.loc 1 280 24 is_stmt 0 view .LVU137
 500 0008 4FF4E133 		mov	r3, #115200
 501 000c 4360     		str	r3, [r0, #4]
 281:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 502              		.loc 1 281 3 is_stmt 1 view .LVU138
 281:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 503              		.loc 1 281 26 is_stmt 0 view .LVU139
 504 000e 0023     		movs	r3, #0
 505 0010 8360     		str	r3, [r0, #8]
 282:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 506              		.loc 1 282 3 is_stmt 1 view .LVU140
 282:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 507              		.loc 1 282 24 is_stmt 0 view .LVU141
 508 0012 C360     		str	r3, [r0, #12]
 283:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 509              		.loc 1 283 3 is_stmt 1 view .LVU142
 283:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 510              		.loc 1 283 22 is_stmt 0 view .LVU143
 511 0014 0361     		str	r3, [r0, #16]
 284:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 512              		.loc 1 284 3 is_stmt 1 view .LVU144
 284:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 513              		.loc 1 284 20 is_stmt 0 view .LVU145
 514 0016 0C22     		movs	r2, #12
 515 0018 4261     		str	r2, [r0, #20]
 285:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 516              		.loc 1 285 3 is_stmt 1 view .LVU146
 285:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 517              		.loc 1 285 25 is_stmt 0 view .LVU147
 518 001a 8361     		str	r3, [r0, #24]
 286:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 519              		.loc 1 286 3 is_stmt 1 view .LVU148
 286:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 520              		.loc 1 286 28 is_stmt 0 view .LVU149
 521 001c C361     		str	r3, [r0, #28]
 287:Core/Src/main.c ****   {
 522              		.loc 1 287 3 is_stmt 1 view .LVU150
 287:Core/Src/main.c ****   {
 523              		.loc 1 287 7 is_stmt 0 view .LVU151
 524 001e FFF7FEFF 		bl	HAL_UART_Init
 525              	.LVL19:
 287:Core/Src/main.c ****   {
 526              		.loc 1 287 6 view .LVU152
 527 0022 00B9     		cbnz	r0, .L31
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 21


 295:Core/Src/main.c **** 
 528              		.loc 1 295 1 view .LVU153
 529 0024 08BD     		pop	{r3, pc}
 530              	.L31:
 289:Core/Src/main.c ****   }
 531              		.loc 1 289 5 is_stmt 1 view .LVU154
 532 0026 FFF7FEFF 		bl	Error_Handler
 533              	.LVL20:
 534              	.L33:
 535 002a 00BF     		.align	2
 536              	.L32:
 537 002c 00000000 		.word	.LANCHOR2
 538 0030 00380140 		.word	1073821696
 539              		.cfi_endproc
 540              	.LFE77:
 542              		.section	.text.SystemClock_Config,"ax",%progbits
 543              		.align	1
 544              		.global	SystemClock_Config
 545              		.syntax unified
 546              		.thumb
 547              		.thumb_func
 549              	SystemClock_Config:
 550              	.LFB74:
 152:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 551              		.loc 1 152 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 80
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555 0000 00B5     		push	{lr}
 556              	.LCFI8:
 557              		.cfi_def_cfa_offset 4
 558              		.cfi_offset 14, -4
 559 0002 95B0     		sub	sp, sp, #84
 560              	.LCFI9:
 561              		.cfi_def_cfa_offset 88
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 562              		.loc 1 153 3 view .LVU156
 153:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 563              		.loc 1 153 22 is_stmt 0 view .LVU157
 564 0004 2822     		movs	r2, #40
 565 0006 0021     		movs	r1, #0
 566 0008 0DEB0200 		add	r0, sp, r2
 567 000c FFF7FEFF 		bl	memset
 568              	.LVL21:
 154:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 569              		.loc 1 154 3 is_stmt 1 view .LVU158
 154:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 570              		.loc 1 154 22 is_stmt 0 view .LVU159
 571 0010 0023     		movs	r3, #0
 572 0012 0593     		str	r3, [sp, #20]
 573 0014 0693     		str	r3, [sp, #24]
 574 0016 0793     		str	r3, [sp, #28]
 575 0018 0893     		str	r3, [sp, #32]
 576 001a 0993     		str	r3, [sp, #36]
 155:Core/Src/main.c **** 
 577              		.loc 1 155 3 is_stmt 1 view .LVU160
 155:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 22


 578              		.loc 1 155 28 is_stmt 0 view .LVU161
 579 001c 0193     		str	r3, [sp, #4]
 580 001e 0293     		str	r3, [sp, #8]
 581 0020 0393     		str	r3, [sp, #12]
 582 0022 0493     		str	r3, [sp, #16]
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 583              		.loc 1 160 3 is_stmt 1 view .LVU162
 160:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 584              		.loc 1 160 36 is_stmt 0 view .LVU163
 585 0024 0122     		movs	r2, #1
 586 0026 0A92     		str	r2, [sp, #40]
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 587              		.loc 1 161 3 is_stmt 1 view .LVU164
 161:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 588              		.loc 1 161 30 is_stmt 0 view .LVU165
 589 0028 4FF48033 		mov	r3, #65536
 590 002c 0B93     		str	r3, [sp, #44]
 162:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 591              		.loc 1 162 3 is_stmt 1 view .LVU166
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 592              		.loc 1 163 3 view .LVU167
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 593              		.loc 1 163 30 is_stmt 0 view .LVU168
 594 002e 0E92     		str	r2, [sp, #56]
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 595              		.loc 1 164 3 is_stmt 1 view .LVU169
 164:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 596              		.loc 1 164 34 is_stmt 0 view .LVU170
 597 0030 0222     		movs	r2, #2
 598 0032 1192     		str	r2, [sp, #68]
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 599              		.loc 1 165 3 is_stmt 1 view .LVU171
 165:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 600              		.loc 1 165 35 is_stmt 0 view .LVU172
 601 0034 1293     		str	r3, [sp, #72]
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 602              		.loc 1 166 3 is_stmt 1 view .LVU173
 166:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 603              		.loc 1 166 32 is_stmt 0 view .LVU174
 604 0036 4FF4E013 		mov	r3, #1835008
 605 003a 1393     		str	r3, [sp, #76]
 167:Core/Src/main.c ****   {
 606              		.loc 1 167 3 is_stmt 1 view .LVU175
 167:Core/Src/main.c ****   {
 607              		.loc 1 167 7 is_stmt 0 view .LVU176
 608 003c 0AA8     		add	r0, sp, #40
 609 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 610              	.LVL22:
 167:Core/Src/main.c ****   {
 611              		.loc 1 167 6 view .LVU177
 612 0042 C0B9     		cbnz	r0, .L39
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 613              		.loc 1 173 3 is_stmt 1 view .LVU178
 173:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 614              		.loc 1 173 31 is_stmt 0 view .LVU179
 615 0044 0F23     		movs	r3, #15
 616 0046 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 23


 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 617              		.loc 1 175 3 is_stmt 1 view .LVU180
 175:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 618              		.loc 1 175 34 is_stmt 0 view .LVU181
 619 0048 0221     		movs	r1, #2
 620 004a 0691     		str	r1, [sp, #24]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 621              		.loc 1 176 3 is_stmt 1 view .LVU182
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 622              		.loc 1 176 35 is_stmt 0 view .LVU183
 623 004c 0023     		movs	r3, #0
 624 004e 0793     		str	r3, [sp, #28]
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 625              		.loc 1 177 3 is_stmt 1 view .LVU184
 177:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 626              		.loc 1 177 36 is_stmt 0 view .LVU185
 627 0050 4FF48062 		mov	r2, #1024
 628 0054 0892     		str	r2, [sp, #32]
 178:Core/Src/main.c **** 
 629              		.loc 1 178 3 is_stmt 1 view .LVU186
 178:Core/Src/main.c **** 
 630              		.loc 1 178 36 is_stmt 0 view .LVU187
 631 0056 0993     		str	r3, [sp, #36]
 180:Core/Src/main.c ****   {
 632              		.loc 1 180 3 is_stmt 1 view .LVU188
 180:Core/Src/main.c ****   {
 633              		.loc 1 180 7 is_stmt 0 view .LVU189
 634 0058 05A8     		add	r0, sp, #20
 635 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 636              	.LVL23:
 180:Core/Src/main.c ****   {
 637              		.loc 1 180 6 view .LVU190
 638 005e 60B9     		cbnz	r0, .L40
 184:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 639              		.loc 1 184 3 is_stmt 1 view .LVU191
 184:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 640              		.loc 1 184 38 is_stmt 0 view .LVU192
 641 0060 1023     		movs	r3, #16
 642 0062 0193     		str	r3, [sp, #4]
 185:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 643              		.loc 1 185 3 is_stmt 1 view .LVU193
 185:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 644              		.loc 1 185 35 is_stmt 0 view .LVU194
 645 0064 0023     		movs	r3, #0
 646 0066 0493     		str	r3, [sp, #16]
 186:Core/Src/main.c ****   {
 647              		.loc 1 186 3 is_stmt 1 view .LVU195
 186:Core/Src/main.c ****   {
 648              		.loc 1 186 7 is_stmt 0 view .LVU196
 649 0068 01A8     		add	r0, sp, #4
 650 006a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 651              	.LVL24:
 186:Core/Src/main.c ****   {
 652              		.loc 1 186 6 view .LVU197
 653 006e 30B9     		cbnz	r0, .L41
 190:Core/Src/main.c **** 
 654              		.loc 1 190 1 view .LVU198
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 24


 655 0070 15B0     		add	sp, sp, #84
 656              	.LCFI10:
 657              		.cfi_remember_state
 658              		.cfi_def_cfa_offset 4
 659              		@ sp needed
 660 0072 5DF804FB 		ldr	pc, [sp], #4
 661              	.L39:
 662              	.LCFI11:
 663              		.cfi_restore_state
 169:Core/Src/main.c ****   }
 664              		.loc 1 169 5 is_stmt 1 view .LVU199
 665 0076 FFF7FEFF 		bl	Error_Handler
 666              	.LVL25:
 667              	.L40:
 182:Core/Src/main.c ****   }
 668              		.loc 1 182 5 view .LVU200
 669 007a FFF7FEFF 		bl	Error_Handler
 670              	.LVL26:
 671              	.L41:
 188:Core/Src/main.c ****   }
 672              		.loc 1 188 5 view .LVU201
 673 007e FFF7FEFF 		bl	Error_Handler
 674              	.LVL27:
 675              		.cfi_endproc
 676              	.LFE74:
 678              		.section	.text.main,"ax",%progbits
 679              		.align	1
 680              		.global	main
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	main:
 686              	.LFB73:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 687              		.loc 1 77 1 view -0
 688              		.cfi_startproc
 689              		@ Volatile: function does not return.
 690              		@ args = 0, pretend = 0, frame = 32
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692 0000 00B5     		push	{lr}
 693              	.LCFI12:
 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 14, -4
 696 0002 89B0     		sub	sp, sp, #36
 697              	.LCFI13:
 698              		.cfi_def_cfa_offset 40
  85:Core/Src/main.c **** 
 699              		.loc 1 85 3 view .LVU203
 700 0004 FFF7FEFF 		bl	HAL_Init
 701              	.LVL28:
  92:Core/Src/main.c **** 
 702              		.loc 1 92 3 view .LVU204
 703 0008 FFF7FEFF 		bl	SystemClock_Config
 704              	.LVL29:
  99:Core/Src/main.c ****   MX_I2C1_Init();
 705              		.loc 1 99 3 view .LVU205
 706 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 25


 707              	.LVL30:
 100:Core/Src/main.c ****   MX_SPI1_Init();
 708              		.loc 1 100 3 view .LVU206
 709 0010 FFF7FEFF 		bl	MX_I2C1_Init
 710              	.LVL31:
 101:Core/Src/main.c ****   MX_USART1_UART_Init();
 711              		.loc 1 101 3 view .LVU207
 712 0014 FFF7FEFF 		bl	MX_SPI1_Init
 713              	.LVL32:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 714              		.loc 1 102 3 view .LVU208
 715 0018 FFF7FEFF 		bl	MX_USART1_UART_Init
 716              	.LVL33:
 125:Core/Src/main.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 717              		.loc 1 125 3 view .LVU209
 718 001c 0DF1040C 		add	ip, sp, #4
 719 0020 084C     		ldr	r4, .L45
 720 0022 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 721 0024 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 722 0028 94E80700 		ldm	r4, {r0, r1, r2}
 723 002c 8CE80700 		stm	ip, {r0, r1, r2}
 126:Core/Src/main.c **** 
 724              		.loc 1 126 3 view .LVU210
 126:Core/Src/main.c **** 
 725              		.loc 1 126 23 is_stmt 0 view .LVU211
 726 0030 0021     		movs	r1, #0
 727 0032 01A8     		add	r0, sp, #4
 728 0034 FFF7FEFF 		bl	osThreadCreate
 729              	.LVL34:
 126:Core/Src/main.c **** 
 730              		.loc 1 126 21 view .LVU212
 731 0038 034B     		ldr	r3, .L45+4
 732 003a 1860     		str	r0, [r3]
 133:Core/Src/main.c **** 
 733              		.loc 1 133 3 is_stmt 1 view .LVU213
 734 003c FFF7FEFF 		bl	osKernelStart
 735              	.LVL35:
 736              	.L43:
 138:Core/Src/main.c ****   {
 737              		.loc 1 138 3 discriminator 1 view .LVU214
 143:Core/Src/main.c ****   /* USER CODE END 3 */
 738              		.loc 1 143 3 discriminator 1 view .LVU215
 138:Core/Src/main.c ****   {
 739              		.loc 1 138 9 discriminator 1 view .LVU216
 740 0040 FEE7     		b	.L43
 741              	.L46:
 742 0042 00BF     		.align	2
 743              	.L45:
 744 0044 00000000 		.word	.LANCHOR3
 745 0048 00000000 		.word	.LANCHOR4
 746              		.cfi_endproc
 747              	.LFE73:
 749              		.global	defaultTaskHandle
 750              		.global	huart1
 751              		.global	hspi1
 752              		.global	hi2c1
 753              		.section	.rodata
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 26


 754              		.align	2
 755              		.set	.LANCHOR3,. + 0
 756              	.LC2:
 757 0000 00000000 		.word	.LC0
 758 0004 00000000 		.word	StartDefaultTask
 759 0008 0000     		.short	0
 760 000a 0000     		.space	2
 761 000c 00000000 		.word	0
 762 0010 80000000 		.word	128
 763 0014 00000000 		.word	0
 764 0018 00000000 		.word	0
 765              		.section	.bss.defaultTaskHandle,"aw",%nobits
 766              		.align	2
 767              		.set	.LANCHOR4,. + 0
 770              	defaultTaskHandle:
 771 0000 00000000 		.space	4
 772              		.section	.bss.hi2c1,"aw",%nobits
 773              		.align	2
 774              		.set	.LANCHOR0,. + 0
 777              	hi2c1:
 778 0000 00000000 		.space	84
 778      00000000 
 778      00000000 
 778      00000000 
 778      00000000 
 779              		.section	.bss.hspi1,"aw",%nobits
 780              		.align	2
 781              		.set	.LANCHOR1,. + 0
 784              	hspi1:
 785 0000 00000000 		.space	88
 785      00000000 
 785      00000000 
 785      00000000 
 785      00000000 
 786              		.section	.bss.huart1,"aw",%nobits
 787              		.align	2
 788              		.set	.LANCHOR2,. + 0
 791              	huart1:
 792 0000 00000000 		.space	68
 792      00000000 
 792      00000000 
 792      00000000 
 792      00000000 
 793              		.text
 794              	.Letext0:
 795              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 796              		.file 4 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 797              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 798              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 799              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 800              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 801              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 802              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 803              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 804              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 805              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 806              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 27


 807              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 808              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 809              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 810              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 811              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 812              		.file 20 "USB_DEVICE/App/usb_device.h"
 813              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 814              		.file 22 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:15     .rodata.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:22     .text.MX_GPIO_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:27     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:201    .text.MX_GPIO_Init:000000cc $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:209    .text.StartDefaultTask:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:215    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:244    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:250    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:284    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:289    .text.Error_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:295    .text.Error_Handler:00000000 Error_Handler
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:327    .text.MX_I2C1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:332    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:390    .text.MX_I2C1_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:397    .text.MX_SPI1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:402    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:471    .text.MX_SPI1_Init:00000038 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:477    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:482    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:537    .text.MX_USART1_UART_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:543    .text.SystemClock_Config:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:549    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:679    .text.main:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:685    .text.main:00000000 main
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:744    .text.main:00000044 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:770    .bss.defaultTaskHandle:00000000 defaultTaskHandle
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:791    .bss.huart1:00000000 huart1
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:784    .bss.hspi1:00000000 hspi1
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:777    .bss.hi2c1:00000000 hi2c1
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:754    .rodata:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:766    .bss.defaultTaskHandle:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:773    .bss.hi2c1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:780    .bss.hspi1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccygvzwG.s:787    .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
MX_USB_DEVICE_Init
osDelay
HAL_IncTick
HAL_I2C_Init
HAL_SPI_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
osThreadCreate
osKernelStart
