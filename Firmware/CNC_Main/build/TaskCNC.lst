ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"TaskCNC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.bufsize,"ax",%progbits
  18              		.align	1
  19              		.global	bufsize
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	bufsize:
  25              	.LVL0:
  26              	.LFB73:
  27              		.file 1 "Lib/Src/TaskCNC.c"
   1:Lib/Src/TaskCNC.c **** #include "TaskCNC.h"
   2:Lib/Src/TaskCNC.c **** 
   3:Lib/Src/TaskCNC.c **** int bufsize (char *buf)
   4:Lib/Src/TaskCNC.c **** {
  28              		.loc 1 4 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 4 1 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
   5:Lib/Src/TaskCNC.c **** 	int i=0;
  35              		.loc 1 5 2 is_stmt 1 view .LVU2
  36              	.LVL1:
   6:Lib/Src/TaskCNC.c **** 	while (*buf++ != '\0') i++;
  37              		.loc 1 6 2 view .LVU3
   5:Lib/Src/TaskCNC.c **** 	int i=0;
  38              		.loc 1 5 6 is_stmt 0 view .LVU4
  39 0002 0020     		movs	r0, #0
  40              	.LVL2:
  41              		.loc 1 6 8 view .LVU5
  42 0004 00E0     		b	.L2
  43              	.LVL3:
  44              	.L3:
  45              		.loc 1 6 25 is_stmt 1 discriminator 2 view .LVU6
  46              		.loc 1 6 26 is_stmt 0 discriminator 2 view .LVU7
  47 0006 0130     		adds	r0, r0, #1
  48              	.LVL4:
  49              	.L2:
  50              		.loc 1 6 8 is_stmt 1 discriminator 1 view .LVU8
  51              		.loc 1 6 9 is_stmt 0 discriminator 1 view .LVU9
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 2


  52 0008 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  53              	.LVL5:
  54              		.loc 1 6 8 discriminator 1 view .LVU10
  55 000c 002A     		cmp	r2, #0
  56 000e FAD1     		bne	.L3
   7:Lib/Src/TaskCNC.c **** 	return i;
  57              		.loc 1 7 2 is_stmt 1 view .LVU11
   8:Lib/Src/TaskCNC.c **** }
  58              		.loc 1 8 1 is_stmt 0 view .LVU12
  59 0010 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE73:
  63              		.section	.text.InitCNC,"ax",%progbits
  64              		.align	1
  65              		.global	InitCNC
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	InitCNC:
  71              	.LVL6:
  72              	.LFB74:
   9:Lib/Src/TaskCNC.c **** 
  10:Lib/Src/TaskCNC.c **** void InitCNC(CNC* cnc)
  11:Lib/Src/TaskCNC.c **** {
  73              		.loc 1 11 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  12:Lib/Src/TaskCNC.c ****   cnc->state = 0; // state disconect with GUI
  78              		.loc 1 12 3 view .LVU14
  79              		.loc 1 12 14 is_stmt 0 view .LVU15
  80 0000 0023     		movs	r3, #0
  81 0002 80F87430 		strb	r3, [r0, #116]
  13:Lib/Src/TaskCNC.c ****   cnc->mode = 0; // mode idle
  82              		.loc 1 13 3 is_stmt 1 view .LVU16
  83              		.loc 1 13 13 is_stmt 0 view .LVU17
  84 0006 80F87530 		strb	r3, [r0, #117]
  14:Lib/Src/TaskCNC.c **** 
  15:Lib/Src/TaskCNC.c ****   cnc->btnOK = GPIO_PIN_4;
  85              		.loc 1 15 3 is_stmt 1 view .LVU18
  86              		.loc 1 15 14 is_stmt 0 view .LVU19
  87 000a 1022     		movs	r2, #16
  88 000c 0280     		strh	r2, [r0]	@ movhi
  16:Lib/Src/TaskCNC.c ****   cnc->btnExit = GPIO_PIN_5;
  89              		.loc 1 16 3 is_stmt 1 view .LVU20
  90              		.loc 1 16 16 is_stmt 0 view .LVU21
  91 000e 2022     		movs	r2, #32
  92 0010 4280     		strh	r2, [r0, #2]	@ movhi
  17:Lib/Src/TaskCNC.c ****   cnc->btnUp = GPIO_PIN_3;
  93              		.loc 1 17 3 is_stmt 1 view .LVU22
  94              		.loc 1 17 14 is_stmt 0 view .LVU23
  95 0012 0822     		movs	r2, #8
  96 0014 8280     		strh	r2, [r0, #4]	@ movhi
  18:Lib/Src/TaskCNC.c ****   cnc->btnDown = GPIO_PIN_15;
  97              		.loc 1 18 3 is_stmt 1 view .LVU24
  98              		.loc 1 18 16 is_stmt 0 view .LVU25
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 3


  99 0016 4FF40042 		mov	r2, #32768
 100 001a C280     		strh	r2, [r0, #6]	@ movhi
  19:Lib/Src/TaskCNC.c **** 
  20:Lib/Src/TaskCNC.c ****   cnc->Led = GPIO_PIN_0;
 101              		.loc 1 20 3 is_stmt 1 view .LVU26
 102              		.loc 1 20 12 is_stmt 0 view .LVU27
 103 001c 0122     		movs	r2, #1
 104 001e 4281     		strh	r2, [r0, #10]	@ movhi
  21:Lib/Src/TaskCNC.c ****   cnc->Buzzer = GPIO_PIN_1; 
 105              		.loc 1 21 3 is_stmt 1 view .LVU28
 106              		.loc 1 21 15 is_stmt 0 view .LVU29
 107 0020 0222     		movs	r2, #2
 108 0022 8281     		strh	r2, [r0, #12]	@ movhi
  22:Lib/Src/TaskCNC.c **** 
  23:Lib/Src/TaskCNC.c ****   cnc->uart.index = 0;
 109              		.loc 1 23 3 is_stmt 1 view .LVU30
 110              		.loc 1 23 19 is_stmt 0 view .LVU31
 111 0024 80F8A530 		strb	r3, [r0, #165]
  24:Lib/Src/TaskCNC.c **** 
  25:Lib/Src/TaskCNC.c ****   cnc->home = 0;
 112              		.loc 1 25 3 is_stmt 1 view .LVU32
 113              		.loc 1 25 13 is_stmt 0 view .LVU33
 114 0028 80F87630 		strb	r3, [r0, #118]
  26:Lib/Src/TaskCNC.c **** 
  27:Lib/Src/TaskCNC.c ****   //cnc->sd.fresult = f_mount(cnc->sd.FileSystem, "/", 1);
  28:Lib/Src/TaskCNC.c ****      
  29:Lib/Src/TaskCNC.c **** }
 115              		.loc 1 29 1 view .LVU34
 116 002c 7047     		bx	lr
 117              		.cfi_endproc
 118              	.LFE74:
 120              		.section	.text.SaveDataToSD,"ax",%progbits
 121              		.align	1
 122              		.global	SaveDataToSD
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	SaveDataToSD:
 128              	.LVL7:
 129              	.LFB75:
  30:Lib/Src/TaskCNC.c **** 
  31:Lib/Src/TaskCNC.c **** void SaveDataToSD(CNC *cnc)
  32:Lib/Src/TaskCNC.c **** {
 130              		.loc 1 32 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
  33:Lib/Src/TaskCNC.c ****   //cnc->sd.fresult = f_open(cnc->sd.File, cnc->sd.FileName, FA_OPEN_ALWAYS | FA_READ | FA_WRITE);
  34:Lib/Src/TaskCNC.c **** 
  35:Lib/Src/TaskCNC.c ****   	// Move to offset to the end of the file 
  36:Lib/Src/TaskCNC.c ****   	//cnc->sd.fresult = f_lseek(cnc->sd.File, f_size(cnc->sd.File)); 
  37:Lib/Src/TaskCNC.c **** 
  38:Lib/Src/TaskCNC.c ****   	// write the string to the file 
  39:Lib/Src/TaskCNC.c ****   	//cnc->sd.fresult = f_puts(cnc->sd.data, cnc->sd.File);
  40:Lib/Src/TaskCNC.c **** 
  41:Lib/Src/TaskCNC.c ****   	//f_close (&fil);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 4


  42:Lib/Src/TaskCNC.c **** }
 135              		.loc 1 42 1 view .LVU36
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE75:
 140              		.section	.text.ProcessBtnPress,"ax",%progbits
 141              		.align	1
 142              		.global	ProcessBtnPress
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	ProcessBtnPress:
 148              	.LVL8:
 149              	.LFB76:
  43:Lib/Src/TaskCNC.c **** 
  44:Lib/Src/TaskCNC.c **** void ProcessBtnPress(CNC *cnc)
  45:Lib/Src/TaskCNC.c **** {  
 150              		.loc 1 45 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 45 1 is_stmt 0 view .LVU38
 155 0000 38B5     		push	{r3, r4, r5, lr}
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 3, -16
 159              		.cfi_offset 4, -12
 160              		.cfi_offset 5, -8
 161              		.cfi_offset 14, -4
  46:Lib/Src/TaskCNC.c ****   switch (cnc->state)
 162              		.loc 1 46 3 is_stmt 1 view .LVU39
 163              		.loc 1 46 14 is_stmt 0 view .LVU40
 164 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 165              		.loc 1 46 3 view .LVU41
 166 0006 022B     		cmp	r3, #2
 167 0008 00D0     		beq	.L9
 168              	.LVL9:
 169              	.L6:
  47:Lib/Src/TaskCNC.c ****   {
  48:Lib/Src/TaskCNC.c ****     case 2: // state error connect
  49:Lib/Src/TaskCNC.c ****       if(cnc-> btnPress == 1)// press OK button
  50:Lib/Src/TaskCNC.c ****       {
  51:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Led, GPIO_PIN_RESET);
  52:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
  53:Lib/Src/TaskCNC.c ****         cnc->state = 0;
  54:Lib/Src/TaskCNC.c ****       }
  55:Lib/Src/TaskCNC.c ****       break;
  56:Lib/Src/TaskCNC.c ****         
  57:Lib/Src/TaskCNC.c ****     default:
  58:Lib/Src/TaskCNC.c ****       break;
  59:Lib/Src/TaskCNC.c ****   }
  60:Lib/Src/TaskCNC.c **** }
 170              		.loc 1 60 1 view .LVU42
 171 000a 38BD     		pop	{r3, r4, r5, pc}
 172              	.LVL10:
 173              	.L9:
 174              		.loc 1 60 1 view .LVU43
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 5


 175 000c 0446     		mov	r4, r0
  49:Lib/Src/TaskCNC.c ****       {
 176              		.loc 1 49 7 is_stmt 1 view .LVU44
  49:Lib/Src/TaskCNC.c ****       {
 177              		.loc 1 49 13 is_stmt 0 view .LVU45
 178 000e 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
  49:Lib/Src/TaskCNC.c ****       {
 179              		.loc 1 49 9 view .LVU46
 180 0010 012B     		cmp	r3, #1
 181 0012 FAD1     		bne	.L6
  51:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
 182              		.loc 1 51 9 is_stmt 1 view .LVU47
 183 0014 074D     		ldr	r5, .L10
 184 0016 0022     		movs	r2, #0
 185 0018 4189     		ldrh	r1, [r0, #10]
 186 001a 2846     		mov	r0, r5
 187              	.LVL11:
  51:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
 188              		.loc 1 51 9 is_stmt 0 view .LVU48
 189 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 190              	.LVL12:
  52:Lib/Src/TaskCNC.c ****         cnc->state = 0;
 191              		.loc 1 52 9 is_stmt 1 view .LVU49
 192 0020 0022     		movs	r2, #0
 193 0022 A189     		ldrh	r1, [r4, #12]
 194 0024 2846     		mov	r0, r5
 195 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL13:
  53:Lib/Src/TaskCNC.c ****       }
 197              		.loc 1 53 9 view .LVU50
  53:Lib/Src/TaskCNC.c ****       }
 198              		.loc 1 53 20 is_stmt 0 view .LVU51
 199 002a 0023     		movs	r3, #0
 200 002c 84F87430 		strb	r3, [r4, #116]
 201              		.loc 1 60 1 view .LVU52
 202 0030 EBE7     		b	.L6
 203              	.L11:
 204 0032 00BF     		.align	2
 205              	.L10:
 206 0034 000C0140 		.word	1073810432
 207              		.cfi_endproc
 208              	.LFE76:
 210              		.section	.rodata.ProcessMode.str1.4,"aMS",%progbits,1
 211              		.align	2
 212              	.LC0:
 213 0000 482100   		.ascii	"H!\000"
 214 0003 00       		.align	2
 215              	.LC1:
 216 0004 44203120 		.ascii	"D 1 %s\000"
 216      257300
 217 000b 00       		.align	2
 218              	.LC2:
 219 000c 257300   		.ascii	"%s\000"
 220 000f 00       		.align	2
 221              	.LC3:
 222 0010 452100   		.ascii	"E!\000"
 223              		.section	.text.ProcessMode,"ax",%progbits
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 6


 224              		.align	1
 225              		.global	ProcessMode
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 230              	ProcessMode:
 231              	.LVL14:
 232              	.LFB77:
  61:Lib/Src/TaskCNC.c **** 
  62:Lib/Src/TaskCNC.c **** void ProcessMode(CNC *cnc)
  63:Lib/Src/TaskCNC.c **** {
 233              		.loc 1 63 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		.loc 1 63 1 is_stmt 0 view .LVU54
 238 0000 70B5     		push	{r4, r5, r6, lr}
 239              	.LCFI1:
 240              		.cfi_def_cfa_offset 16
 241              		.cfi_offset 4, -16
 242              		.cfi_offset 5, -12
 243              		.cfi_offset 6, -8
 244              		.cfi_offset 14, -4
 245 0002 0446     		mov	r4, r0
  64:Lib/Src/TaskCNC.c ****   switch (cnc->mode)
 246              		.loc 1 64 3 is_stmt 1 view .LVU55
 247              		.loc 1 64 14 is_stmt 0 view .LVU56
 248 0004 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 249              		.loc 1 64 3 view .LVU57
 250 0008 033B     		subs	r3, r3, #3
 251 000a 062B     		cmp	r3, #6
 252 000c 1CD8     		bhi	.L12
 253 000e DFE803F0 		tbb	[pc, r3]
 254              	.L15:
 255 0012 04       		.byte	(.L21-.L15)/2
 256 0013 1C       		.byte	(.L20-.L15)/2
 257 0014 20       		.byte	(.L19-.L15)/2
 258 0015 24       		.byte	(.L18-.L15)/2
 259 0016 3C       		.byte	(.L17-.L15)/2
 260 0017 54       		.byte	(.L16-.L15)/2
 261 0018 6C       		.byte	(.L14-.L15)/2
 262 0019 00       		.p2align 1
 263              	.L21:
  65:Lib/Src/TaskCNC.c ****   {
  66:Lib/Src/TaskCNC.c ****     case 3: // mode home
  67:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
 264              		.loc 1 67 7 is_stmt 1 view .LVU58
 265              		.loc 1 67 23 is_stmt 0 view .LVU59
 266 001a 00F17C05 		add	r5, r0, #124
 267              		.loc 1 67 7 view .LVU60
 268 001e 2822     		movs	r2, #40
 269 0020 0021     		movs	r1, #0
 270 0022 2846     		mov	r0, r5
 271              	.LVL15:
 272              		.loc 1 67 7 view .LVU61
 273 0024 FFF7FEFF 		bl	memset
 274              	.LVL16:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 7


  68:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "H!");
 275              		.loc 1 68 7 is_stmt 1 view .LVU62
 276 0028 3C4B     		ldr	r3, .L23
 277 002a 1A88     		ldrh	r2, [r3]	@ unaligned
 278 002c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 279 002e A4F87C20 		strh	r2, [r4, #124]	@ unaligned
 280 0032 84F87E30 		strb	r3, [r4, #126]
  69:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, 2, 100);
 281              		.loc 1 69 7 view .LVU63
 282 0036 6423     		movs	r3, #100
 283 0038 0222     		movs	r2, #2
 284 003a 2946     		mov	r1, r5
 285 003c A06F     		ldr	r0, [r4, #120]
 286 003e FFF7FEFF 		bl	HAL_UART_Transmit
 287              	.LVL17:
  70:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 288              		.loc 1 70 7 view .LVU64
 289              		.loc 1 70 17 is_stmt 0 view .LVU65
 290 0042 0023     		movs	r3, #0
 291 0044 84F87530 		strb	r3, [r4, #117]
  71:Lib/Src/TaskCNC.c ****       break;
 292              		.loc 1 71 7 is_stmt 1 view .LVU66
 293              	.L12:
  72:Lib/Src/TaskCNC.c **** 
  73:Lib/Src/TaskCNC.c ****     case 4: // mode running
  74:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  75:Lib/Src/TaskCNC.c ****       break;
  76:Lib/Src/TaskCNC.c ****           
  77:Lib/Src/TaskCNC.c ****     case 5: // mode receive file name of gcode
  78:Lib/Src/TaskCNC.c ****       //sscanf(cnc->DataReceiveFromGUI, "C 5 %s", cnc->sd.FileName);
  79:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  80:Lib/Src/TaskCNC.c ****       break;
  81:Lib/Src/TaskCNC.c **** 
  82:Lib/Src/TaskCNC.c ****     case 6: // mode receive data of gcode
  83:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
  84:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
  85:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
  86:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  87:Lib/Src/TaskCNC.c ****       //SaveDataToSD(cnc);
  88:Lib/Src/TaskCNC.c ****       //sprintf(cnc->DataSendToGUI, "C ACK ");
  89:Lib/Src/TaskCNC.c ****       //USBD_CUSTOM_HID_SendReport(cnc->husb, (uint8_t*)cnc->DataSendToGUI, sizeof(cnc->DataSendToG
  90:Lib/Src/TaskCNC.c ****       break;
  91:Lib/Src/TaskCNC.c ****     case 7: // mode send setting
  92:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
  93:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
  94:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
  95:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  96:Lib/Src/TaskCNC.c ****       break;
  97:Lib/Src/TaskCNC.c ****     case 8: // mode stop
  98:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
  99:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "E!");
 100:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, 2, 100);
 101:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 102:Lib/Src/TaskCNC.c ****       break;
 103:Lib/Src/TaskCNC.c ****     case 9: // mode z edit
 104:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
 105:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 8


 106:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
 107:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 108:Lib/Src/TaskCNC.c ****       break;
 109:Lib/Src/TaskCNC.c ****     default:
 110:Lib/Src/TaskCNC.c ****       break;
 111:Lib/Src/TaskCNC.c ****   } 
 112:Lib/Src/TaskCNC.c **** }
 294              		.loc 1 112 1 is_stmt 0 view .LVU67
 295 0048 70BD     		pop	{r4, r5, r6, pc}
 296              	.LVL18:
 297              	.L20:
  74:Lib/Src/TaskCNC.c ****       break;
 298              		.loc 1 74 7 is_stmt 1 view .LVU68
  74:Lib/Src/TaskCNC.c ****       break;
 299              		.loc 1 74 17 is_stmt 0 view .LVU69
 300 004a 0023     		movs	r3, #0
 301 004c 80F87530 		strb	r3, [r0, #117]
  75:Lib/Src/TaskCNC.c ****           
 302              		.loc 1 75 7 is_stmt 1 view .LVU70
 303 0050 FAE7     		b	.L12
 304              	.L19:
  79:Lib/Src/TaskCNC.c ****       break;
 305              		.loc 1 79 7 view .LVU71
  79:Lib/Src/TaskCNC.c ****       break;
 306              		.loc 1 79 17 is_stmt 0 view .LVU72
 307 0052 0023     		movs	r3, #0
 308 0054 80F87530 		strb	r3, [r0, #117]
  80:Lib/Src/TaskCNC.c **** 
 309              		.loc 1 80 7 is_stmt 1 view .LVU73
 310 0058 F6E7     		b	.L12
 311              	.L18:
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 312              		.loc 1 83 7 view .LVU74
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 313              		.loc 1 83 23 is_stmt 0 view .LVU75
 314 005a 00F17C05 		add	r5, r0, #124
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 315              		.loc 1 83 7 view .LVU76
 316 005e 2826     		movs	r6, #40
 317 0060 3246     		mov	r2, r6
 318 0062 0021     		movs	r1, #0
 319 0064 2846     		mov	r0, r5
 320              	.LVL19:
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 321              		.loc 1 83 7 view .LVU77
 322 0066 FFF7FEFF 		bl	memset
 323              	.LVL20:
  84:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
 324              		.loc 1 84 7 is_stmt 1 view .LVU78
 325 006a 2A46     		mov	r2, r5
 326 006c 2C49     		ldr	r1, .L23+4
 327 006e 04F10E00 		add	r0, r4, #14
 328 0072 FFF7FEFF 		bl	sscanf
 329              	.LVL21:
  85:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 330              		.loc 1 85 7 view .LVU79
 331 0076 6423     		movs	r3, #100
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 9


 332 0078 3246     		mov	r2, r6
 333 007a 2946     		mov	r1, r5
 334 007c A06F     		ldr	r0, [r4, #120]
 335 007e FFF7FEFF 		bl	HAL_UART_Transmit
 336              	.LVL22:
  86:Lib/Src/TaskCNC.c ****       //SaveDataToSD(cnc);
 337              		.loc 1 86 7 view .LVU80
  86:Lib/Src/TaskCNC.c ****       //SaveDataToSD(cnc);
 338              		.loc 1 86 17 is_stmt 0 view .LVU81
 339 0082 0023     		movs	r3, #0
 340 0084 84F87530 		strb	r3, [r4, #117]
  90:Lib/Src/TaskCNC.c ****     case 7: // mode send setting
 341              		.loc 1 90 7 is_stmt 1 view .LVU82
 342 0088 DEE7     		b	.L12
 343              	.LVL23:
 344              	.L17:
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 345              		.loc 1 92 7 view .LVU83
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 346              		.loc 1 92 23 is_stmt 0 view .LVU84
 347 008a 00F17C05 		add	r5, r0, #124
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 348              		.loc 1 92 7 view .LVU85
 349 008e 2826     		movs	r6, #40
 350 0090 3246     		mov	r2, r6
 351 0092 0021     		movs	r1, #0
 352 0094 2846     		mov	r0, r5
 353              	.LVL24:
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 354              		.loc 1 92 7 view .LVU86
 355 0096 FFF7FEFF 		bl	memset
 356              	.LVL25:
  93:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
 357              		.loc 1 93 7 is_stmt 1 view .LVU87
 358 009a 2A46     		mov	r2, r5
 359 009c 2149     		ldr	r1, .L23+8
 360 009e 04F10E00 		add	r0, r4, #14
 361 00a2 FFF7FEFF 		bl	sscanf
 362              	.LVL26:
  94:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 363              		.loc 1 94 7 view .LVU88
 364 00a6 6423     		movs	r3, #100
 365 00a8 3246     		mov	r2, r6
 366 00aa 2946     		mov	r1, r5
 367 00ac A06F     		ldr	r0, [r4, #120]
 368 00ae FFF7FEFF 		bl	HAL_UART_Transmit
 369              	.LVL27:
  95:Lib/Src/TaskCNC.c ****       break;
 370              		.loc 1 95 7 view .LVU89
  95:Lib/Src/TaskCNC.c ****       break;
 371              		.loc 1 95 17 is_stmt 0 view .LVU90
 372 00b2 0023     		movs	r3, #0
 373 00b4 84F87530 		strb	r3, [r4, #117]
  96:Lib/Src/TaskCNC.c ****     case 8: // mode stop
 374              		.loc 1 96 7 is_stmt 1 view .LVU91
 375 00b8 C6E7     		b	.L12
 376              	.LVL28:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 10


 377              	.L16:
  98:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "E!");
 378              		.loc 1 98 7 view .LVU92
  98:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "E!");
 379              		.loc 1 98 23 is_stmt 0 view .LVU93
 380 00ba 00F17C05 		add	r5, r0, #124
  98:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "E!");
 381              		.loc 1 98 7 view .LVU94
 382 00be 2822     		movs	r2, #40
 383 00c0 0021     		movs	r1, #0
 384 00c2 2846     		mov	r0, r5
 385              	.LVL29:
  98:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "E!");
 386              		.loc 1 98 7 view .LVU95
 387 00c4 FFF7FEFF 		bl	memset
 388              	.LVL30:
  99:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, 2, 100);
 389              		.loc 1 99 7 is_stmt 1 view .LVU96
 390 00c8 174B     		ldr	r3, .L23+12
 391 00ca 1A88     		ldrh	r2, [r3]	@ unaligned
 392 00cc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 393 00ce A4F87C20 		strh	r2, [r4, #124]	@ unaligned
 394 00d2 84F87E30 		strb	r3, [r4, #126]
 100:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 395              		.loc 1 100 7 view .LVU97
 396 00d6 6423     		movs	r3, #100
 397 00d8 0222     		movs	r2, #2
 398 00da 2946     		mov	r1, r5
 399 00dc A06F     		ldr	r0, [r4, #120]
 400 00de FFF7FEFF 		bl	HAL_UART_Transmit
 401              	.LVL31:
 101:Lib/Src/TaskCNC.c ****       break;
 402              		.loc 1 101 7 view .LVU98
 101:Lib/Src/TaskCNC.c ****       break;
 403              		.loc 1 101 17 is_stmt 0 view .LVU99
 404 00e2 0023     		movs	r3, #0
 405 00e4 84F87530 		strb	r3, [r4, #117]
 102:Lib/Src/TaskCNC.c ****     case 9: // mode z edit
 406              		.loc 1 102 7 is_stmt 1 view .LVU100
 407 00e8 AEE7     		b	.L12
 408              	.LVL32:
 409              	.L14:
 104:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 410              		.loc 1 104 7 view .LVU101
 104:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 411              		.loc 1 104 23 is_stmt 0 view .LVU102
 412 00ea 00F17C05 		add	r5, r0, #124
 104:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 413              		.loc 1 104 7 view .LVU103
 414 00ee 2826     		movs	r6, #40
 415 00f0 3246     		mov	r2, r6
 416 00f2 0021     		movs	r1, #0
 417 00f4 2846     		mov	r0, r5
 418              	.LVL33:
 104:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 419              		.loc 1 104 7 view .LVU104
 420 00f6 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 11


 421              	.LVL34:
 105:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
 422              		.loc 1 105 7 is_stmt 1 view .LVU105
 423 00fa 2A46     		mov	r2, r5
 424 00fc 0949     		ldr	r1, .L23+8
 425 00fe 04F10E00 		add	r0, r4, #14
 426 0102 FFF7FEFF 		bl	sscanf
 427              	.LVL35:
 106:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 428              		.loc 1 106 7 view .LVU106
 429 0106 6423     		movs	r3, #100
 430 0108 3246     		mov	r2, r6
 431 010a 2946     		mov	r1, r5
 432 010c A06F     		ldr	r0, [r4, #120]
 433 010e FFF7FEFF 		bl	HAL_UART_Transmit
 434              	.LVL36:
 107:Lib/Src/TaskCNC.c ****       break;
 435              		.loc 1 107 7 view .LVU107
 107:Lib/Src/TaskCNC.c ****       break;
 436              		.loc 1 107 17 is_stmt 0 view .LVU108
 437 0112 0023     		movs	r3, #0
 438 0114 84F87530 		strb	r3, [r4, #117]
 108:Lib/Src/TaskCNC.c ****     default:
 439              		.loc 1 108 7 is_stmt 1 view .LVU109
 440              		.loc 1 112 1 is_stmt 0 view .LVU110
 441 0118 96E7     		b	.L12
 442              	.L24:
 443 011a 00BF     		.align	2
 444              	.L23:
 445 011c 00000000 		.word	.LC0
 446 0120 04000000 		.word	.LC1
 447 0124 0C000000 		.word	.LC2
 448 0128 10000000 		.word	.LC3
 449              		.cfi_endproc
 450              	.LFE77:
 452              		.section	.rodata.ReceiveDataFromGUI.str1.4,"aMS",%progbits,1
 453              		.align	2
 454              	.LC4:
 455 0000 4320434F 		.ascii	"C CONNECTED \000"
 455      4E4E4543 
 455      54454420 
 455      00
 456 000d 000000   		.align	2
 457              	.LC5:
 458 0010 43204449 		.ascii	"C DISCONNECTED \000"
 458      53434F4E 
 458      4E454354 
 458      45442000 
 459              		.align	2
 460              	.LC6:
 461 0020 4320444F 		.ascii	"C DOING \000"
 461      494E4720 
 461      00
 462 0029 000000   		.align	2
 463              	.LC7:
 464 002c 43205255 		.ascii	"C RUNNING \000"
 464      4E4E494E 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 12


 464      472000
 465 0037 00       		.align	2
 466              	.LC8:
 467 0038 43204E4F 		.ascii	"C NOHOME \000"
 467      484F4D45 
 467      2000
 468 0042 0000     		.align	2
 469              	.LC9:
 470 0044 43205945 		.ascii	"C YES \000"
 470      532000
 471 004b 00       		.align	2
 472              	.LC10:
 473 004c 43205354 		.ascii	"C STOP \000"
 473      4F502000 
 474              		.align	2
 475              	.LC11:
 476 0054 4320444F 		.ascii	"C DONE \000"
 476      4E452000 
 477              		.section	.text.ReceiveDataFromGUI,"ax",%progbits
 478              		.align	1
 479              		.global	ReceiveDataFromGUI
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 484              	ReceiveDataFromGUI:
 485              	.LVL37:
 486              	.LFB78:
 113:Lib/Src/TaskCNC.c **** void ReceiveDataFromGUI(CNC *cnc, SemaphoreHandle_t xSemaphoreMode)
 114:Lib/Src/TaskCNC.c **** {
 487              		.loc 1 114 1 is_stmt 1 view -0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		.loc 1 114 1 is_stmt 0 view .LVU112
 492 0000 70B5     		push	{r4, r5, r6, lr}
 493              	.LCFI2:
 494              		.cfi_def_cfa_offset 16
 495              		.cfi_offset 4, -16
 496              		.cfi_offset 5, -12
 497              		.cfi_offset 6, -8
 498              		.cfi_offset 14, -4
 499 0002 0446     		mov	r4, r0
 500 0004 0D46     		mov	r5, r1
 115:Lib/Src/TaskCNC.c ****   switch (cnc->DataReceiveFromGUI[0])
 501              		.loc 1 115 3 is_stmt 1 view .LVU113
 502              		.loc 1 115 34 is_stmt 0 view .LVU114
 503 0006 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 504              		.loc 1 115 3 view .LVU115
 505 0008 433B     		subs	r3, r3, #67
 506 000a 172B     		cmp	r3, #23
 507 000c 00F29C80 		bhi	.L25
 508 0010 DFE803F0 		tbb	[pc, r3]
 509              	.L28:
 510 0014 0C       		.byte	(.L31-.L28)/2
 511 0015 7C       		.byte	(.L30-.L28)/2
 512 0016 9A       		.byte	(.L25-.L28)/2
 513 0017 9A       		.byte	(.L25-.L28)/2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 13


 514 0018 9A       		.byte	(.L25-.L28)/2
 515 0019 9A       		.byte	(.L25-.L28)/2
 516 001a 9A       		.byte	(.L25-.L28)/2
 517 001b 9A       		.byte	(.L25-.L28)/2
 518 001c 9A       		.byte	(.L25-.L28)/2
 519 001d 9A       		.byte	(.L25-.L28)/2
 520 001e 9A       		.byte	(.L25-.L28)/2
 521 001f 9A       		.byte	(.L25-.L28)/2
 522 0020 9A       		.byte	(.L25-.L28)/2
 523 0021 9A       		.byte	(.L25-.L28)/2
 524 0022 9A       		.byte	(.L25-.L28)/2
 525 0023 9A       		.byte	(.L25-.L28)/2
 526 0024 8D       		.byte	(.L29-.L28)/2
 527 0025 9A       		.byte	(.L25-.L28)/2
 528 0026 9A       		.byte	(.L25-.L28)/2
 529 0027 9A       		.byte	(.L25-.L28)/2
 530 0028 9A       		.byte	(.L25-.L28)/2
 531 0029 9A       		.byte	(.L25-.L28)/2
 532 002a 9A       		.byte	(.L25-.L28)/2
 533 002b 9B       		.byte	(.L27-.L28)/2
 534              		.p2align 1
 535              	.L31:
 116:Lib/Src/TaskCNC.c ****   {
 117:Lib/Src/TaskCNC.c ****     case 'C': // command          
 118:Lib/Src/TaskCNC.c ****       switch (cnc->DataReceiveFromGUI[2])
 536              		.loc 1 118 7 is_stmt 1 view .LVU116
 537              		.loc 1 118 38 is_stmt 0 view .LVU117
 538 002c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 539 002e 303B     		subs	r3, r3, #48
 540 0030 082B     		cmp	r3, #8
 541 0032 7FD8     		bhi	.L32
 542 0034 DFE803F0 		tbb	[pc, r3]
 543              	.L34:
 544 0038 05       		.byte	(.L39-.L34)/2
 545 0039 17       		.byte	(.L38-.L34)/2
 546 003a 7E       		.byte	(.L32-.L34)/2
 547 003b 27       		.byte	(.L37-.L34)/2
 548 003c 34       		.byte	(.L36-.L34)/2
 549 003d 52       		.byte	(.L35-.L34)/2
 550 003e 7E       		.byte	(.L32-.L34)/2
 551 003f 7E       		.byte	(.L32-.L34)/2
 552 0040 60       		.byte	(.L33-.L34)/2
 553 0041 00       		.p2align 1
 554              	.L39:
 119:Lib/Src/TaskCNC.c ****       {
 120:Lib/Src/TaskCNC.c ****         case '0': // connected
 121:Lib/Src/TaskCNC.c ****           cnc->state = 1; // mode connect with GUI
 555              		.loc 1 121 11 is_stmt 1 view .LVU118
 556              		.loc 1 121 22 is_stmt 0 view .LVU119
 557 0042 0123     		movs	r3, #1
 558 0044 80F87430 		strb	r3, [r0, #116]
 122:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when connect
 559              		.loc 1 122 11 is_stmt 1 view .LVU120
 560              		.loc 1 122 21 is_stmt 0 view .LVU121
 561 0048 0023     		movs	r3, #0
 562 004a 80F87530 		strb	r3, [r0, #117]
 123:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C CONNECTED ");
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 14


 563              		.loc 1 123 11 is_stmt 1 view .LVU122
 564 004e 444B     		ldr	r3, .L46
 565 0050 07CB     		ldmia	r3!, {r0, r1, r2}
 566              	.LVL38:
 567              		.loc 1 123 11 is_stmt 0 view .LVU123
 568 0052 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 569 0056 C4F85210 		str	r1, [r4, #82]	@ unaligned
 570 005a C4F85620 		str	r2, [r4, #86]	@ unaligned
 571 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0060 84F85A30 		strb	r3, [r4, #90]
 124:Lib/Src/TaskCNC.c ****           break;
 573              		.loc 1 124 11 is_stmt 1 view .LVU124
 574 0064 66E0     		b	.L32
 575              	.LVL39:
 576              	.L38:
 125:Lib/Src/TaskCNC.c **** 
 126:Lib/Src/TaskCNC.c ****         case '1': // disconnected
 127:Lib/Src/TaskCNC.c ****           cnc->state = 0; // mode disconect with GUI
 577              		.loc 1 127 11 view .LVU125
 578              		.loc 1 127 22 is_stmt 0 view .LVU126
 579 0066 0023     		movs	r3, #0
 580 0068 80F87430 		strb	r3, [r0, #116]
 128:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when disconect
 581              		.loc 1 128 11 is_stmt 1 view .LVU127
 582              		.loc 1 128 21 is_stmt 0 view .LVU128
 583 006c 80F87530 		strb	r3, [r0, #117]
 129:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 584              		.loc 1 129 11 is_stmt 1 view .LVU129
 585 0070 3C4E     		ldr	r6, .L46+4
 586 0072 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 587              	.LVL40:
 588              		.loc 1 129 11 is_stmt 0 view .LVU130
 589 0074 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 590 0078 C4F85210 		str	r1, [r4, #82]	@ unaligned
 591 007c C4F85620 		str	r2, [r4, #86]	@ unaligned
 592 0080 C4F85A30 		str	r3, [r4, #90]	@ unaligned
 130:Lib/Src/TaskCNC.c ****           break;
 593              		.loc 1 130 11 is_stmt 1 view .LVU131
 594 0084 56E0     		b	.L32
 595              	.LVL41:
 596              	.L37:
 131:Lib/Src/TaskCNC.c **** 
 132:Lib/Src/TaskCNC.c ****         case '3': // home
 133:Lib/Src/TaskCNC.c ****           cnc->mode = 3; // mode home
 597              		.loc 1 133 11 view .LVU132
 598              		.loc 1 133 21 is_stmt 0 view .LVU133
 599 0086 0323     		movs	r3, #3
 600 0088 80F87530 		strb	r3, [r0, #117]
 134:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DOING ");
 601              		.loc 1 134 11 is_stmt 1 view .LVU134
 602 008c 364B     		ldr	r3, .L46+8
 603 008e 03CB     		ldmia	r3!, {r0, r1}
 604              	.LVL42:
 605              		.loc 1 134 11 is_stmt 0 view .LVU135
 606 0090 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 607 0094 C4F85210 		str	r1, [r4, #82]	@ unaligned
 608 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 15


 609 009a 84F85630 		strb	r3, [r4, #86]
 135:Lib/Src/TaskCNC.c ****           break;
 610              		.loc 1 135 11 is_stmt 1 view .LVU136
 611 009e 49E0     		b	.L32
 612              	.LVL43:
 613              	.L36:
 136:Lib/Src/TaskCNC.c **** 
 137:Lib/Src/TaskCNC.c ****         case '4': // start
 138:Lib/Src/TaskCNC.c ****           if( cnc->home == 1)
 614              		.loc 1 138 11 view .LVU137
 615              		.loc 1 138 18 is_stmt 0 view .LVU138
 616 00a0 90F87630 		ldrb	r3, [r0, #118]	@ zero_extendqisi2
 617              		.loc 1 138 13 view .LVU139
 618 00a4 012B     		cmp	r3, #1
 619 00a6 09D0     		beq	.L43
 139:Lib/Src/TaskCNC.c ****           {
 140:Lib/Src/TaskCNC.c ****             cnc->mode = 4; // mode running
 141:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C RUNNING ");
 142:Lib/Src/TaskCNC.c ****           }
 143:Lib/Src/TaskCNC.c ****           else
 144:Lib/Src/TaskCNC.c ****           {
 145:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C NOHOME ");
 620              		.loc 1 145 13 is_stmt 1 view .LVU140
 621 00a8 304B     		ldr	r3, .L46+12
 622 00aa 03CB     		ldmia	r3!, {r0, r1}
 623              	.LVL44:
 624              		.loc 1 145 13 is_stmt 0 view .LVU141
 625 00ac C4F84E00 		str	r0, [r4, #78]	@ unaligned
 626 00b0 C4F85210 		str	r1, [r4, #82]	@ unaligned
 627 00b4 1B88     		ldrh	r3, [r3]	@ unaligned
 628 00b6 A4F85630 		strh	r3, [r4, #86]	@ unaligned
 629 00ba 3BE0     		b	.L32
 630              	.LVL45:
 631              	.L43:
 140:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C RUNNING ");
 632              		.loc 1 140 13 is_stmt 1 view .LVU142
 140:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C RUNNING ");
 633              		.loc 1 140 23 is_stmt 0 view .LVU143
 634 00bc 0423     		movs	r3, #4
 635 00be 80F87530 		strb	r3, [r0, #117]
 141:Lib/Src/TaskCNC.c ****           }
 636              		.loc 1 141 13 is_stmt 1 view .LVU144
 637 00c2 2B4B     		ldr	r3, .L46+16
 638 00c4 03CB     		ldmia	r3!, {r0, r1}
 639              	.LVL46:
 141:Lib/Src/TaskCNC.c ****           }
 640              		.loc 1 141 13 is_stmt 0 view .LVU145
 641 00c6 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 642 00ca C4F85210 		str	r1, [r4, #82]	@ unaligned
 643 00ce 1A88     		ldrh	r2, [r3]	@ unaligned
 644 00d0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 645 00d2 A4F85620 		strh	r2, [r4, #86]	@ unaligned
 646 00d6 84F85830 		strb	r3, [r4, #88]
 647 00da 2BE0     		b	.L32
 648              	.LVL47:
 649              	.L35:
 146:Lib/Src/TaskCNC.c ****           }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 16


 147:Lib/Src/TaskCNC.c ****           break;
 148:Lib/Src/TaskCNC.c ****           
 149:Lib/Src/TaskCNC.c ****         case '5': // receive file name of gcode
 150:Lib/Src/TaskCNC.c ****           cnc->mode = 5; // mode receive file name of gcode
 650              		.loc 1 150 11 is_stmt 1 view .LVU146
 651              		.loc 1 150 21 is_stmt 0 view .LVU147
 652 00dc 0523     		movs	r3, #5
 653 00de 80F87530 		strb	r3, [r0, #117]
 151:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C YES ");
 654              		.loc 1 151 11 is_stmt 1 view .LVU148
 655 00e2 244B     		ldr	r3, .L46+20
 656 00e4 1868     		ldr	r0, [r3]
 657              	.LVL48:
 658              		.loc 1 151 11 is_stmt 0 view .LVU149
 659 00e6 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 660 00ea 9A88     		ldrh	r2, [r3, #4]	@ unaligned
 661 00ec 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 662 00ee A4F85220 		strh	r2, [r4, #82]	@ unaligned
 663 00f2 84F85430 		strb	r3, [r4, #84]
 152:Lib/Src/TaskCNC.c ****           break;
 664              		.loc 1 152 11 is_stmt 1 view .LVU150
 665 00f6 1DE0     		b	.L32
 666              	.LVL49:
 667              	.L33:
 153:Lib/Src/TaskCNC.c ****         
 154:Lib/Src/TaskCNC.c ****         case '8': // stop
 155:Lib/Src/TaskCNC.c ****           cnc->mode = 8; // mode send stop to CNC
 668              		.loc 1 155 11 view .LVU151
 669              		.loc 1 155 21 is_stmt 0 view .LVU152
 670 00f8 0823     		movs	r3, #8
 671 00fa 80F87530 		strb	r3, [r0, #117]
 156:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C STOP ");
 672              		.loc 1 156 11 is_stmt 1 view .LVU153
 673 00fe 1E4B     		ldr	r3, .L46+24
 674 0100 03CB     		ldmia	r3!, {r0, r1}
 675              	.LVL50:
 676              		.loc 1 156 11 is_stmt 0 view .LVU154
 677 0102 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 678 0106 C4F85210 		str	r1, [r4, #82]	@ unaligned
 157:Lib/Src/TaskCNC.c ****           break;
 679              		.loc 1 157 11 is_stmt 1 view .LVU155
 680 010a 13E0     		b	.L32
 681              	.LVL51:
 682              	.L30:
 158:Lib/Src/TaskCNC.c **** 
 159:Lib/Src/TaskCNC.c ****         default:
 160:Lib/Src/TaskCNC.c ****           break;
 161:Lib/Src/TaskCNC.c ****       }     
 162:Lib/Src/TaskCNC.c ****       break;
 163:Lib/Src/TaskCNC.c ****     case 'D': // data
 164:Lib/Src/TaskCNC.c ****       if(cnc->DataReceiveFromGUI[2] == '0')
 683              		.loc 1 164 7 view .LVU156
 684              		.loc 1 164 33 is_stmt 0 view .LVU157
 685 010c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 686              		.loc 1 164 9 view .LVU158
 687 010e 302B     		cmp	r3, #48
 688 0110 03D0     		beq	.L44
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 17


 165:Lib/Src/TaskCNC.c ****       {
 166:Lib/Src/TaskCNC.c ****         sprintf(cnc->DataSendToGUI, "C DONE ");
 167:Lib/Src/TaskCNC.c ****         //f_close (cnc->sd.File);
 168:Lib/Src/TaskCNC.c ****         cnc->mode = 0;
 169:Lib/Src/TaskCNC.c ****       }
 170:Lib/Src/TaskCNC.c ****       else
 171:Lib/Src/TaskCNC.c ****       {
 172:Lib/Src/TaskCNC.c ****         cnc->mode = 6; // mode receive data of gcode
 689              		.loc 1 172 9 is_stmt 1 view .LVU159
 690              		.loc 1 172 19 is_stmt 0 view .LVU160
 691 0112 0623     		movs	r3, #6
 692 0114 80F87530 		strb	r3, [r0, #117]
 693 0118 0CE0     		b	.L32
 694              	.L44:
 166:Lib/Src/TaskCNC.c ****         //f_close (cnc->sd.File);
 695              		.loc 1 166 9 is_stmt 1 view .LVU161
 696 011a 184B     		ldr	r3, .L46+28
 697 011c 03CB     		ldmia	r3!, {r0, r1}
 698              	.LVL52:
 166:Lib/Src/TaskCNC.c ****         //f_close (cnc->sd.File);
 699              		.loc 1 166 9 is_stmt 0 view .LVU162
 700 011e C4F84E00 		str	r0, [r4, #78]	@ unaligned
 701 0122 C4F85210 		str	r1, [r4, #82]	@ unaligned
 168:Lib/Src/TaskCNC.c ****       }
 702              		.loc 1 168 9 is_stmt 1 view .LVU163
 168:Lib/Src/TaskCNC.c ****       }
 703              		.loc 1 168 19 is_stmt 0 view .LVU164
 704 0126 0023     		movs	r3, #0
 705 0128 84F87530 		strb	r3, [r4, #117]
 706 012c 02E0     		b	.L32
 707              	.LVL53:
 708              	.L29:
 173:Lib/Src/TaskCNC.c ****       }          
 174:Lib/Src/TaskCNC.c ****       break;
 175:Lib/Src/TaskCNC.c ****     case 'S': // setting      
 176:Lib/Src/TaskCNC.c ****       cnc->mode = 7; // mode setting CNC
 709              		.loc 1 176 7 is_stmt 1 view .LVU165
 710              		.loc 1 176 17 is_stmt 0 view .LVU166
 711 012e 0723     		movs	r3, #7
 712 0130 80F87530 		strb	r3, [r0, #117]
 177:Lib/Src/TaskCNC.c ****       break;
 713              		.loc 1 177 7 is_stmt 1 view .LVU167
 714              	.LVL54:
 715              	.L32:
 178:Lib/Src/TaskCNC.c ****     case 'Z': // z edit
 179:Lib/Src/TaskCNC.c ****       cnc->mode = 9; // mode z edit
 180:Lib/Src/TaskCNC.c ****       break;
 181:Lib/Src/TaskCNC.c **** 
 182:Lib/Src/TaskCNC.c ****     default:
 183:Lib/Src/TaskCNC.c ****       return;
 184:Lib/Src/TaskCNC.c ****   }
 185:Lib/Src/TaskCNC.c ****   USBD_CUSTOM_HID_SendReport(cnc->husb, (uint8_t*)cnc->DataSendToGUI, sizeof(cnc->DataSendToGUI));
 716              		.loc 1 185 3 view .LVU168
 717 0134 1F22     		movs	r2, #31
 718 0136 04F14E01 		add	r1, r4, #78
 719 013a 206F     		ldr	r0, [r4, #112]
 720 013c FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 18


 721              	.LVL55:
 186:Lib/Src/TaskCNC.c ****   if(cnc->mode > 2)   
 722              		.loc 1 186 3 view .LVU169
 723              		.loc 1 186 9 is_stmt 0 view .LVU170
 724 0140 94F87530 		ldrb	r3, [r4, #117]	@ zero_extendqisi2
 725              		.loc 1 186 5 view .LVU171
 726 0144 022B     		cmp	r3, #2
 727 0146 04D8     		bhi	.L45
 728              	.L25:
 187:Lib/Src/TaskCNC.c ****     xSemaphoreGive(xSemaphoreMode);
 188:Lib/Src/TaskCNC.c **** }
 729              		.loc 1 188 1 view .LVU172
 730 0148 70BD     		pop	{r4, r5, r6, pc}
 731              	.LVL56:
 732              	.L27:
 179:Lib/Src/TaskCNC.c ****       break;
 733              		.loc 1 179 7 is_stmt 1 view .LVU173
 179:Lib/Src/TaskCNC.c ****       break;
 734              		.loc 1 179 17 is_stmt 0 view .LVU174
 735 014a 0923     		movs	r3, #9
 736 014c 80F87530 		strb	r3, [r0, #117]
 180:Lib/Src/TaskCNC.c **** 
 737              		.loc 1 180 7 is_stmt 1 view .LVU175
 738 0150 F0E7     		b	.L32
 739              	.LVL57:
 740              	.L45:
 187:Lib/Src/TaskCNC.c ****     xSemaphoreGive(xSemaphoreMode);
 741              		.loc 1 187 5 view .LVU176
 742 0152 0023     		movs	r3, #0
 743 0154 1A46     		mov	r2, r3
 744 0156 1946     		mov	r1, r3
 745 0158 2846     		mov	r0, r5
 746 015a FFF7FEFF 		bl	xQueueGenericSend
 747              	.LVL58:
 748 015e F3E7     		b	.L25
 749              	.L47:
 750              		.align	2
 751              	.L46:
 752 0160 00000000 		.word	.LC4
 753 0164 10000000 		.word	.LC5
 754 0168 20000000 		.word	.LC6
 755 016c 38000000 		.word	.LC8
 756 0170 2C000000 		.word	.LC7
 757 0174 44000000 		.word	.LC9
 758 0178 4C000000 		.word	.LC10
 759 017c 54000000 		.word	.LC11
 760              		.cfi_endproc
 761              	.LFE78:
 763              		.section	.rodata.ReceiveDataFromCNC.str1.4,"aMS",%progbits,1
 764              		.align	2
 765              	.LC12:
 766 0000 4320484F 		.ascii	"C HOME \000"
 766      4D452000 
 767              		.align	2
 768              	.LC13:
 769 0008 43204143 		.ascii	"C ACK %s \000"
 769      4B202573 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 19


 769      2000
 770 0012 0000     		.align	2
 771              	.LC14:
 772 0014 43205345 		.ascii	"C SETTING \000"
 772      5454494E 
 772      472000
 773 001f 00       		.align	2
 774              	.LC15:
 775 0020 43205A5F 		.ascii	"C Z_OK \000"
 775      4F4B2000 
 776              		.section	.text.ReceiveDataFromCNC,"ax",%progbits
 777              		.align	1
 778              		.global	ReceiveDataFromCNC
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 783              	ReceiveDataFromCNC:
 784              	.LVL59:
 785              	.LFB79:
 189:Lib/Src/TaskCNC.c **** 
 190:Lib/Src/TaskCNC.c **** void ReceiveDataFromCNC(CNC *cnc)
 191:Lib/Src/TaskCNC.c **** {
 786              		.loc 1 191 1 view -0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		.loc 1 191 1 is_stmt 0 view .LVU178
 791 0000 10B5     		push	{r4, lr}
 792              	.LCFI3:
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 4, -8
 795              		.cfi_offset 14, -4
 796 0002 0446     		mov	r4, r0
 192:Lib/Src/TaskCNC.c ****   switch (cnc->uart.ReceiveFromControl[0])
 797              		.loc 1 192 3 is_stmt 1 view .LVU179
 798              		.loc 1 192 39 is_stmt 0 view .LVU180
 799 0004 90F8A630 		ldrb	r3, [r0, #166]	@ zero_extendqisi2
 800              		.loc 1 192 3 view .LVU181
 801 0008 473B     		subs	r3, r3, #71
 802 000a 132B     		cmp	r3, #19
 803 000c 27D8     		bhi	.L48
 804 000e DFE803F0 		tbb	[pc, r3]
 805              	.L51:
 806 0012 27       		.byte	(.L54-.L51)/2
 807 0013 0A       		.byte	(.L53-.L51)/2
 808 0014 26       		.byte	(.L48-.L51)/2
 809 0015 26       		.byte	(.L48-.L51)/2
 810 0016 26       		.byte	(.L48-.L51)/2
 811 0017 26       		.byte	(.L48-.L51)/2
 812 0018 26       		.byte	(.L48-.L51)/2
 813 0019 26       		.byte	(.L48-.L51)/2
 814 001a 26       		.byte	(.L48-.L51)/2
 815 001b 26       		.byte	(.L48-.L51)/2
 816 001c 26       		.byte	(.L48-.L51)/2
 817 001d 26       		.byte	(.L48-.L51)/2
 818 001e 2E       		.byte	(.L52-.L51)/2
 819 001f 26       		.byte	(.L48-.L51)/2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 20


 820 0020 26       		.byte	(.L48-.L51)/2
 821 0021 26       		.byte	(.L48-.L51)/2
 822 0022 26       		.byte	(.L48-.L51)/2
 823 0023 26       		.byte	(.L48-.L51)/2
 824 0024 26       		.byte	(.L48-.L51)/2
 825 0025 3B       		.byte	(.L50-.L51)/2
 826              		.p2align 1
 827              	.L53:
 193:Lib/Src/TaskCNC.c **** 	{
 194:Lib/Src/TaskCNC.c **** 	case 'H':
 195:Lib/Src/TaskCNC.c **** 		sprintf(cnc->DataSendToGUI, "C HOME ");
 828              		.loc 1 195 3 is_stmt 1 view .LVU182
 829 0026 1C4B     		ldr	r3, .L57
 830 0028 03CB     		ldmia	r3!, {r0, r1}
 831              	.LVL60:
 832              		.loc 1 195 3 is_stmt 0 view .LVU183
 833 002a C4F84E00 		str	r0, [r4, #78]	@ unaligned
 834 002e C4F85210 		str	r1, [r4, #82]	@ unaligned
 196:Lib/Src/TaskCNC.c ****     cnc->home = 1; // have just come home
 835              		.loc 1 196 5 is_stmt 1 view .LVU184
 836              		.loc 1 196 15 is_stmt 0 view .LVU185
 837 0032 0123     		movs	r3, #1
 838 0034 84F87630 		strb	r3, [r4, #118]
 197:Lib/Src/TaskCNC.c **** 		break;
 839              		.loc 1 197 3 is_stmt 1 view .LVU186
 840              	.L55:
 198:Lib/Src/TaskCNC.c **** 	case 'G':
 199:Lib/Src/TaskCNC.c **** 		sprintf(cnc->DataSendToGUI, "C ACK %s ", cnc->uart.ReceiveFromControl);
 200:Lib/Src/TaskCNC.c **** 		break;
 201:Lib/Src/TaskCNC.c ****   case 'S':
 202:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C SETTING ");
 203:Lib/Src/TaskCNC.c ****     break;
 204:Lib/Src/TaskCNC.c ****   case 'Z':
 205:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C Z_OK ");
 206:Lib/Src/TaskCNC.c ****     break;
 207:Lib/Src/TaskCNC.c **** 	default:
 208:Lib/Src/TaskCNC.c **** 		return;
 209:Lib/Src/TaskCNC.c ****   }
 210:Lib/Src/TaskCNC.c ****   memset(cnc->uart.ReceiveFromControl, 0, sizeof(cnc->uart.ReceiveFromControl));
 841              		.loc 1 210 3 view .LVU187
 842 0038 0023     		movs	r3, #0
 843 003a C4F8A630 		str	r3, [r4, #166]	@ unaligned
 844 003e C4F8AA30 		str	r3, [r4, #170]	@ unaligned
 845 0042 C4F8AE30 		str	r3, [r4, #174]	@ unaligned
 846 0046 C4F8B230 		str	r3, [r4, #178]	@ unaligned
 847 004a C4F8B630 		str	r3, [r4, #182]	@ unaligned
 211:Lib/Src/TaskCNC.c ****   cnc->uart.index = 0;
 848              		.loc 1 211 3 view .LVU188
 849              		.loc 1 211 19 is_stmt 0 view .LVU189
 850 004e 84F8A530 		strb	r3, [r4, #165]
 212:Lib/Src/TaskCNC.c ****   USBD_CUSTOM_HID_SendReport(cnc->husb, (uint8_t*)cnc->DataSendToGUI, sizeof(cnc->DataSendToGUI));
 851              		.loc 1 212 3 is_stmt 1 view .LVU190
 852 0052 1F22     		movs	r2, #31
 853 0054 04F14E01 		add	r1, r4, #78
 854 0058 206F     		ldr	r0, [r4, #112]
 855 005a FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
 856              	.LVL61:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 21


 857              	.L48:
 213:Lib/Src/TaskCNC.c **** }...
 858              		.loc 1 213 1 is_stmt 0 view .LVU191
 859 005e 10BD     		pop	{r4, pc}
 860              	.LVL62:
 861              	.L54:
 199:Lib/Src/TaskCNC.c **** 		sprintf(cnc->DataSendToGUI, "C ACK %s ", cnc->uart.ReceiveFromControl);
 862              		.loc 1 199 3 is_stmt 1 view .LVU192
 863 0060 00F1A602 		add	r2, r0, #166
 864 0064 0D49     		ldr	r1, .L57+4
 865 0066 4E30     		adds	r0, r0, #78
 866              	.LVL63:
 199:Lib/Src/TaskCNC.c **** 		sprintf(cnc->DataSendToGUI, "C ACK %s ", cnc->uart.ReceiveFromControl);
 867              		.loc 1 199 3 is_stmt 0 view .LVU193
 868 0068 FFF7FEFF 		bl	sprintf
 869              	.LVL64:
 200:Lib/Src/TaskCNC.c **** 		break;
 870              		.loc 1 200 3 is_stmt 1 view .LVU194
 871 006c E4E7     		b	.L55
 872              	.LVL65:
 873              	.L52:
 202:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C SETTING ");
 874              		.loc 1 202 5 view .LVU195
 875 006e 0C4B     		ldr	r3, .L57+8
 876 0070 03CB     		ldmia	r3!, {r0, r1}
 877              	.LVL66:
 202:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C SETTING ");
 878              		.loc 1 202 5 is_stmt 0 view .LVU196
 879 0072 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 880 0076 C4F85210 		str	r1, [r4, #82]	@ unaligned
 881 007a 1A88     		ldrh	r2, [r3]	@ unaligned
 882 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 883 007e A4F85620 		strh	r2, [r4, #86]	@ unaligned
 884 0082 84F85830 		strb	r3, [r4, #88]
 203:Lib/Src/TaskCNC.c ****     break;
 885              		.loc 1 203 5 is_stmt 1 view .LVU197
 886 0086 D7E7     		b	.L55
 887              	.LVL67:
 888              	.L50:
 205:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C Z_OK ");
 889              		.loc 1 205 5 view .LVU198
 890 0088 064B     		ldr	r3, .L57+12
 891 008a 03CB     		ldmia	r3!, {r0, r1}
 892              	.LVL68:
 205:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C Z_OK ");
 893              		.loc 1 205 5 is_stmt 0 view .LVU199
 894 008c C4F84E00 		str	r0, [r4, #78]	@ unaligned
 895 0090 C4F85210 		str	r1, [r4, #82]	@ unaligned
 206:Lib/Src/TaskCNC.c ****     break;
 896              		.loc 1 206 5 is_stmt 1 view .LVU200
 897 0094 D0E7     		b	.L55
 898              	.L58:
 899 0096 00BF     		.align	2
 900              	.L57:
 901 0098 00000000 		.word	.LC12
 902 009c 08000000 		.word	.LC13
 903 00a0 14000000 		.word	.LC14
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 22


 904 00a4 20000000 		.word	.LC15
 905              		.cfi_endproc
 906              	.LFE79:
 908              		.text
 909              	.Letext0:
 910              		.file 2 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 911              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 912              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 913              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 914              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 915              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 916              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 917              		.file 9 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 918              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 919              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 920              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 921              		.file 13 "Lib/Inc/TaskCNC.h"
 922              		.file 14 "Middlewares/ST/STM32_USB_Device_Library/Class/CustomHID/Inc/usbd_customhid.h"
 923              		.file 15 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\incl
 924              		.file 16 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 TaskCNC.c
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:18     .text.bufsize:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:24     .text.bufsize:00000000 bufsize
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:64     .text.InitCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:70     .text.InitCNC:00000000 InitCNC
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:121    .text.SaveDataToSD:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:127    .text.SaveDataToSD:00000000 SaveDataToSD
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:141    .text.ProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:147    .text.ProcessBtnPress:00000000 ProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:206    .text.ProcessBtnPress:00000034 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:211    .rodata.ProcessMode.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:224    .text.ProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:230    .text.ProcessMode:00000000 ProcessMode
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:255    .text.ProcessMode:00000012 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:445    .text.ProcessMode:0000011c $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:453    .rodata.ReceiveDataFromGUI.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:478    .text.ReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:484    .text.ReceiveDataFromGUI:00000000 ReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:510    .text.ReceiveDataFromGUI:00000014 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:534    .text.ReceiveDataFromGUI:0000002c $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:544    .text.ReceiveDataFromGUI:00000038 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:752    .text.ReceiveDataFromGUI:00000160 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:764    .rodata.ReceiveDataFromCNC.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:777    .text.ReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:783    .text.ReceiveDataFromCNC:00000000 ReceiveDataFromCNC
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:806    .text.ReceiveDataFromCNC:00000012 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:826    .text.ReceiveDataFromCNC:00000026 $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:901    .text.ReceiveDataFromCNC:00000098 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:262    .text.ProcessMode:00000019 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:262    .text.ProcessMode:0000001a $t
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:553    .text.ReceiveDataFromGUI:00000041 $d
C:\Users\Chicken\AppData\Local\Temp\ccAXGB3D.s:553    .text.ReceiveDataFromGUI:00000042 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
memset
HAL_UART_Transmit
sscanf
USBD_CUSTOM_HID_SendReport
xQueueGenericSend
sprintf
