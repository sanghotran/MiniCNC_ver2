ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"TaskCNC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.InitCNC,"ax",%progbits
  18              		.align	1
  19              		.global	InitCNC
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	InitCNC:
  25              	.LVL0:
  26              	.LFB73:
  27              		.file 1 "Lib/Src/TaskCNC.c"
   1:Lib/Src/TaskCNC.c **** #include "TaskCNC.h"
   2:Lib/Src/TaskCNC.c **** 
   3:Lib/Src/TaskCNC.c **** void InitCNC(CNC* cnc)
   4:Lib/Src/TaskCNC.c **** {
  28              		.loc 1 4 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
   5:Lib/Src/TaskCNC.c ****   cnc->mode = 0; // mode disconect with GUI
  33              		.loc 1 5 3 view .LVU1
  34              		.loc 1 5 13 is_stmt 0 view .LVU2
  35 0000 0023     		movs	r3, #0
  36 0002 80F88F30 		strb	r3, [r0, #143]
   6:Lib/Src/TaskCNC.c **** 
   7:Lib/Src/TaskCNC.c ****   cnc->btnOK = GPIO_PIN_4;
  37              		.loc 1 7 3 is_stmt 1 view .LVU3
  38              		.loc 1 7 14 is_stmt 0 view .LVU4
  39 0006 1023     		movs	r3, #16
  40 0008 0380     		strh	r3, [r0]	@ movhi
   8:Lib/Src/TaskCNC.c ****   cnc->btnExit = GPIO_PIN_5;
  41              		.loc 1 8 3 is_stmt 1 view .LVU5
  42              		.loc 1 8 16 is_stmt 0 view .LVU6
  43 000a 2023     		movs	r3, #32
  44 000c 4380     		strh	r3, [r0, #2]	@ movhi
   9:Lib/Src/TaskCNC.c ****   cnc->btnUp = GPIO_PIN_3;
  45              		.loc 1 9 3 is_stmt 1 view .LVU7
  46              		.loc 1 9 14 is_stmt 0 view .LVU8
  47 000e 0823     		movs	r3, #8
  48 0010 8380     		strh	r3, [r0, #4]	@ movhi
  10:Lib/Src/TaskCNC.c ****   cnc->btnDown = GPIO_PIN_15;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 2


  49              		.loc 1 10 3 is_stmt 1 view .LVU9
  50              		.loc 1 10 16 is_stmt 0 view .LVU10
  51 0012 4FF40043 		mov	r3, #32768
  52 0016 C380     		strh	r3, [r0, #6]	@ movhi
  11:Lib/Src/TaskCNC.c **** 
  12:Lib/Src/TaskCNC.c ****   cnc->Led = GPIO_PIN_0;
  53              		.loc 1 12 3 is_stmt 1 view .LVU11
  54              		.loc 1 12 12 is_stmt 0 view .LVU12
  55 0018 0123     		movs	r3, #1
  56 001a 4381     		strh	r3, [r0, #10]	@ movhi
  13:Lib/Src/TaskCNC.c ****   cnc->Buzzer = GPIO_PIN_1; 
  57              		.loc 1 13 3 is_stmt 1 view .LVU13
  58              		.loc 1 13 15 is_stmt 0 view .LVU14
  59 001c 0223     		movs	r3, #2
  60 001e 8381     		strh	r3, [r0, #12]	@ movhi
  14:Lib/Src/TaskCNC.c **** 
  15:Lib/Src/TaskCNC.c ****     
  16:Lib/Src/TaskCNC.c **** }
  61              		.loc 1 16 1 view .LVU15
  62 0020 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE73:
  66              		.section	.text.ProcessBtnPress,"ax",%progbits
  67              		.align	1
  68              		.global	ProcessBtnPress
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	ProcessBtnPress:
  74              	.LVL1:
  75              	.LFB74:
  17:Lib/Src/TaskCNC.c **** 
  18:Lib/Src/TaskCNC.c **** void ProcessBtnPress(CNC *cnc, osSemaphoreId xSemaphore)
  19:Lib/Src/TaskCNC.c **** {
  76              		.loc 1 19 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 19 1 is_stmt 0 view .LVU17
  81 0000 70B5     		push	{r4, r5, r6, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 16
  84              		.cfi_offset 4, -16
  85              		.cfi_offset 5, -12
  86              		.cfi_offset 6, -8
  87              		.cfi_offset 14, -4
  88 0002 0546     		mov	r5, r0
  89 0004 0C46     		mov	r4, r1
  20:Lib/Src/TaskCNC.c ****   if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
  90              		.loc 1 20 3 is_stmt 1 view .LVU18
  91              		.loc 1 20 6 is_stmt 0 view .LVU19
  92 0006 4FF0FF31 		mov	r1, #-1
  93              	.LVL2:
  94              		.loc 1 20 6 view .LVU20
  95 000a 2046     		mov	r0, r4
  96              	.LVL3:
  97              		.loc 1 20 6 view .LVU21
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 3


  98 000c FFF7FEFF 		bl	osSemaphoreWait
  99              	.LVL4:
 100              		.loc 1 20 5 view .LVU22
 101 0010 E0B9     		cbnz	r0, .L6
 102              	.L3:
  21:Lib/Src/TaskCNC.c ****   {
  22:Lib/Src/TaskCNC.c ****     for(;;)
 103              		.loc 1 22 5 is_stmt 1 view .LVU23
  23:Lib/Src/TaskCNC.c ****     {
  24:Lib/Src/TaskCNC.c ****       if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
 104              		.loc 1 24 7 view .LVU24
 105              		.loc 1 24 10 is_stmt 0 view .LVU25
 106 0012 4FF0FF31 		mov	r1, #-1
 107 0016 2046     		mov	r0, r4
 108 0018 FFF7FEFF 		bl	osSemaphoreWait
 109              	.LVL5:
 110              		.loc 1 24 9 view .LVU26
 111 001c 0028     		cmp	r0, #0
 112 001e F8D1     		bne	.L3
  25:Lib/Src/TaskCNC.c ****       {
  26:Lib/Src/TaskCNC.c ****         switch (cnc->mode)
 113              		.loc 1 26 9 is_stmt 1 view .LVU27
 114              		.loc 1 26 20 is_stmt 0 view .LVU28
 115 0020 95F88F30 		ldrb	r3, [r5, #143]	@ zero_extendqisi2
 116              		.loc 1 26 9 view .LVU29
 117 0024 032B     		cmp	r3, #3
 118 0026 F4D1     		bne	.L3
  27:Lib/Src/TaskCNC.c ****         {
  28:Lib/Src/TaskCNC.c ****         case 3: // mode error connect
  29:Lib/Src/TaskCNC.c ****           if(cnc-> btnPress == 1)// press OK button
 119              		.loc 1 29 11 is_stmt 1 view .LVU30
 120              		.loc 1 29 17 is_stmt 0 view .LVU31
 121 0028 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 122              		.loc 1 29 13 view .LVU32
 123 002a 012B     		cmp	r3, #1
 124 002c F1D1     		bne	.L3
  30:Lib/Src/TaskCNC.c ****           {
  31:Lib/Src/TaskCNC.c ****             HAL_GPIO_WritePin(GPIOB, cnc->Led, GPIO_PIN_SET);
 125              		.loc 1 31 13 is_stmt 1 view .LVU33
 126 002e 084E     		ldr	r6, .L8
 127 0030 0122     		movs	r2, #1
 128 0032 6989     		ldrh	r1, [r5, #10]
 129 0034 3046     		mov	r0, r6
 130 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 131              	.LVL6:
  32:Lib/Src/TaskCNC.c ****             HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
 132              		.loc 1 32 13 view .LVU34
 133 003a 0022     		movs	r2, #0
 134 003c A989     		ldrh	r1, [r5, #12]
 135 003e 3046     		mov	r0, r6
 136 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL7:
  33:Lib/Src/TaskCNC.c ****             cnc->mode = 0;
 138              		.loc 1 33 13 view .LVU35
 139              		.loc 1 33 23 is_stmt 0 view .LVU36
 140 0044 0023     		movs	r3, #0
 141 0046 85F88F30 		strb	r3, [r5, #143]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 4


 142 004a E2E7     		b	.L3
 143              	.L6:
  34:Lib/Src/TaskCNC.c ****           }
  35:Lib/Src/TaskCNC.c ****           break;
  36:Lib/Src/TaskCNC.c ****         
  37:Lib/Src/TaskCNC.c ****         default:
  38:Lib/Src/TaskCNC.c ****           break;
  39:Lib/Src/TaskCNC.c ****         }
  40:Lib/Src/TaskCNC.c **** 
  41:Lib/Src/TaskCNC.c ****       }
  42:Lib/Src/TaskCNC.c ****     }
  43:Lib/Src/TaskCNC.c ****   }
  44:Lib/Src/TaskCNC.c **** }
 144              		.loc 1 44 1 view .LVU37
 145 004c 70BD     		pop	{r4, r5, r6, pc}
 146              	.LVL8:
 147              	.L9:
 148              		.loc 1 44 1 view .LVU38
 149 004e 00BF     		.align	2
 150              	.L8:
 151 0050 000C0140 		.word	1073810432
 152              		.cfi_endproc
 153              	.LFE74:
 155              		.section	.rodata.ReceiveDataFromGUI.str1.4,"aMS",%progbits,1
 156              		.align	2
 157              	.LC0:
 158 0000 4320434F 		.ascii	"C CONNECTED \000"
 158      4E4E4543 
 158      54454420 
 158      00
 159 000d 000000   		.align	2
 160              	.LC1:
 161 0010 43204449 		.ascii	"C DISCONNECTED \000"
 161      53434F4E 
 161      4E454354 
 161      45442000 
 162              		.section	.text.ReceiveDataFromGUI,"ax",%progbits
 163              		.align	1
 164              		.global	ReceiveDataFromGUI
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	ReceiveDataFromGUI:
 170              	.LVL9:
 171              	.LFB75:
  45:Lib/Src/TaskCNC.c **** 
  46:Lib/Src/TaskCNC.c **** void ReceiveDataFromGUI(CNC *cnc, USBD_HandleTypeDef * husbd, osSemaphoreId xSemaphore)
  47:Lib/Src/TaskCNC.c **** {
 172              		.loc 1 47 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 47 1 is_stmt 0 view .LVU40
 177 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 24
 180              		.cfi_offset 3, -24
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 5


 181              		.cfi_offset 4, -20
 182              		.cfi_offset 5, -16
 183              		.cfi_offset 6, -12
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 0546     		mov	r5, r0
 187 0004 0E46     		mov	r6, r1
 188 0006 1446     		mov	r4, r2
  48:Lib/Src/TaskCNC.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
  49:Lib/Src/TaskCNC.c ****   if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
 189              		.loc 1 49 3 is_stmt 1 view .LVU41
 190              		.loc 1 49 6 is_stmt 0 view .LVU42
 191 0008 4FF0FF31 		mov	r1, #-1
 192              	.LVL10:
 193              		.loc 1 49 6 view .LVU43
 194 000c 1046     		mov	r0, r2
 195              	.LVL11:
 196              		.loc 1 49 6 view .LVU44
 197 000e FFF7FEFF 		bl	osSemaphoreWait
 198              	.LVL12:
 199              		.loc 1 49 5 view .LVU45
 200 0012 58B1     		cbz	r0, .L12
 201              	.L10:
  50:Lib/Src/TaskCNC.c ****   {
  51:Lib/Src/TaskCNC.c ****     for(;;)
  52:Lib/Src/TaskCNC.c ****     {
  53:Lib/Src/TaskCNC.c ****       if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
  54:Lib/Src/TaskCNC.c ****       {
  55:Lib/Src/TaskCNC.c ****         switch (cnc->DataReceiveFromGUI[0])
  56:Lib/Src/TaskCNC.c ****         {
  57:Lib/Src/TaskCNC.c ****         case 'C': // command          
  58:Lib/Src/TaskCNC.c ****           switch (cnc->DataReceiveFromGUI[2])
  59:Lib/Src/TaskCNC.c ****           {
  60:Lib/Src/TaskCNC.c ****           case '0': // connected
  61:Lib/Src/TaskCNC.c ****             cnc->mode = 1; // mode connect with GUI
  62:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C CONNECTED ");
  63:Lib/Src/TaskCNC.c ****             break;
  64:Lib/Src/TaskCNC.c ****           case '1': // disconnected
  65:Lib/Src/TaskCNC.c ****             cnc->mode = 0; // mode disconect with GUI
  66:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
  67:Lib/Src/TaskCNC.c ****             break;
  68:Lib/Src/TaskCNC.c ****           default:
  69:Lib/Src/TaskCNC.c ****             break;
  70:Lib/Src/TaskCNC.c ****           }
  71:Lib/Src/TaskCNC.c ****           
  72:Lib/Src/TaskCNC.c ****           break;
  73:Lib/Src/TaskCNC.c ****         case 'D': // data
  74:Lib/Src/TaskCNC.c **** 
  75:Lib/Src/TaskCNC.c ****           break;
  76:Lib/Src/TaskCNC.c ****         default:
  77:Lib/Src/TaskCNC.c ****           return;
  78:Lib/Src/TaskCNC.c ****           break;
  79:Lib/Src/TaskCNC.c ****         }
  80:Lib/Src/TaskCNC.c ****         USBD_CUSTOM_HID_SendReport(husbd, (uint8_t*)cnc->DataSendToGUI, 65);     
  81:Lib/Src/TaskCNC.c ****       }        
  82:Lib/Src/TaskCNC.c ****     }
  83:Lib/Src/TaskCNC.c ****   }  
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 6


  84:Lib/Src/TaskCNC.c **** }
 202              		.loc 1 84 1 view .LVU46
 203 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 204              	.LVL13:
 205              	.L13:
  58:Lib/Src/TaskCNC.c ****           {
 206              		.loc 1 58 11 is_stmt 1 view .LVU47
  58:Lib/Src/TaskCNC.c ****           {
 207              		.loc 1 58 42 is_stmt 0 view .LVU48
 208 0016 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 209 0018 302B     		cmp	r3, #48
 210 001a 14D0     		beq	.L15
 211 001c 312B     		cmp	r3, #49
 212 001e 21D0     		beq	.L16
 213              	.L14:
  78:Lib/Src/TaskCNC.c ****         }
 214              		.loc 1 78 11 is_stmt 1 view .LVU49
  80:Lib/Src/TaskCNC.c ****       }        
 215              		.loc 1 80 9 view .LVU50
 216 0020 4122     		movs	r2, #65
 217 0022 05F14E01 		add	r1, r5, #78
 218 0026 3046     		mov	r0, r6
 219 0028 FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
 220              	.LVL14:
 221              	.L12:
  51:Lib/Src/TaskCNC.c ****     {
 222              		.loc 1 51 5 view .LVU51
  53:Lib/Src/TaskCNC.c ****       {
 223              		.loc 1 53 7 view .LVU52
  53:Lib/Src/TaskCNC.c ****       {
 224              		.loc 1 53 10 is_stmt 0 view .LVU53
 225 002c 4FF0FF31 		mov	r1, #-1
 226 0030 2046     		mov	r0, r4
 227 0032 FFF7FEFF 		bl	osSemaphoreWait
 228              	.LVL15:
  53:Lib/Src/TaskCNC.c ****       {
 229              		.loc 1 53 9 view .LVU54
 230 0036 0028     		cmp	r0, #0
 231 0038 F8D1     		bne	.L12
  55:Lib/Src/TaskCNC.c ****         {
 232              		.loc 1 55 9 is_stmt 1 view .LVU55
  55:Lib/Src/TaskCNC.c ****         {
 233              		.loc 1 55 40 is_stmt 0 view .LVU56
 234 003a AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
  55:Lib/Src/TaskCNC.c ****         {
 235              		.loc 1 55 9 view .LVU57
 236 003c 432B     		cmp	r3, #67
 237 003e EAD0     		beq	.L13
 238 0040 442B     		cmp	r3, #68
 239 0042 EDD0     		beq	.L14
 240 0044 E6E7     		b	.L10
 241              	.L15:
  61:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C CONNECTED ");
 242              		.loc 1 61 13 is_stmt 1 view .LVU58
  61:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C CONNECTED ");
 243              		.loc 1 61 23 is_stmt 0 view .LVU59
 244 0046 0123     		movs	r3, #1
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 7


 245 0048 85F88F30 		strb	r3, [r5, #143]
  62:Lib/Src/TaskCNC.c ****             break;
 246              		.loc 1 62 13 is_stmt 1 view .LVU60
 247 004c 0C4B     		ldr	r3, .L19
 248 004e 07CB     		ldmia	r3!, {r0, r1, r2}
 249 0050 C5F84E00 		str	r0, [r5, #78]	@ unaligned
 250 0054 C5F85210 		str	r1, [r5, #82]	@ unaligned
 251 0058 C5F85620 		str	r2, [r5, #86]	@ unaligned
 252 005c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 253 005e 85F85A30 		strb	r3, [r5, #90]
  63:Lib/Src/TaskCNC.c ****           case '1': // disconnected
 254              		.loc 1 63 13 view .LVU61
 255 0062 DDE7     		b	.L14
 256              	.L16:
  65:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 257              		.loc 1 65 13 view .LVU62
  65:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 258              		.loc 1 65 23 is_stmt 0 view .LVU63
 259 0064 0023     		movs	r3, #0
 260 0066 85F88F30 		strb	r3, [r5, #143]
  66:Lib/Src/TaskCNC.c ****             break;
 261              		.loc 1 66 13 is_stmt 1 view .LVU64
 262 006a 064F     		ldr	r7, .L19+4
 263 006c 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 264 006e C5F84E00 		str	r0, [r5, #78]	@ unaligned
 265 0072 C5F85210 		str	r1, [r5, #82]	@ unaligned
 266 0076 C5F85620 		str	r2, [r5, #86]	@ unaligned
 267 007a C5F85A30 		str	r3, [r5, #90]	@ unaligned
  67:Lib/Src/TaskCNC.c ****           default:
 268              		.loc 1 67 13 view .LVU65
 269 007e CFE7     		b	.L14
 270              	.L20:
 271              		.align	2
 272              	.L19:
 273 0080 00000000 		.word	.LC0
 274 0084 10000000 		.word	.LC1
 275              		.cfi_endproc
 276              	.LFE75:
 278              		.section	.text.ReceiveDataFromCNC,"ax",%progbits
 279              		.align	1
 280              		.global	ReceiveDataFromCNC
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	ReceiveDataFromCNC:
 286              	.LFB76:
  85:Lib/Src/TaskCNC.c **** 
  86:Lib/Src/TaskCNC.c **** void ReceiveDataFromCNC(void)
  87:Lib/Src/TaskCNC.c **** {
 287              		.loc 1 87 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
  88:Lib/Src/TaskCNC.c **** 
  89:Lib/Src/TaskCNC.c **** }...
 292              		.loc 1 89 1 view .LVU67
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 8


 293 0000 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE76:
 297              		.text
 298              	.Letext0:
 299              		.file 2 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 300              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 301              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 302              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 303              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 304              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 305              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 306              		.file 9 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 307              		.file 10 "Lib/Inc/TaskCNC.h"
 308              		.file 11 "Middlewares/ST/STM32_USB_Device_Library/Class/CustomHID/Inc/usbd_customhid.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 TaskCNC.c
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:18     .text.InitCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:24     .text.InitCNC:00000000 InitCNC
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:67     .text.ProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:73     .text.ProcessBtnPress:00000000 ProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:151    .text.ProcessBtnPress:00000050 $d
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:156    .rodata.ReceiveDataFromGUI.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:163    .text.ReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:169    .text.ReceiveDataFromGUI:00000000 ReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:273    .text.ReceiveDataFromGUI:00000080 $d
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:279    .text.ReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccLK70bv.s:285    .text.ReceiveDataFromCNC:00000000 ReceiveDataFromCNC

UNDEFINED SYMBOLS
osSemaphoreWait
HAL_GPIO_WritePin
USBD_CUSTOM_HID_SendReport
