ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"TaskCNC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.InitCNC,"ax",%progbits
  18              		.align	1
  19              		.global	InitCNC
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	InitCNC:
  25              	.LVL0:
  26              	.LFB73:
  27              		.file 1 "Lib/Src/TaskCNC.c"
   1:Lib/Src/TaskCNC.c **** #include "TaskCNC.h"
   2:Lib/Src/TaskCNC.c **** 
   3:Lib/Src/TaskCNC.c **** void InitCNC(CNC* cnc)
   4:Lib/Src/TaskCNC.c **** {
  28              		.loc 1 4 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
   5:Lib/Src/TaskCNC.c ****   cnc->state = 0; // state disconect with GUI
  33              		.loc 1 5 3 view .LVU1
  34              		.loc 1 5 14 is_stmt 0 view .LVU2
  35 0000 0023     		movs	r3, #0
  36 0002 80F85D30 		strb	r3, [r0, #93]
   6:Lib/Src/TaskCNC.c ****   cnc->mode = 0; // mode idle
  37              		.loc 1 6 3 is_stmt 1 view .LVU3
  38              		.loc 1 6 13 is_stmt 0 view .LVU4
  39 0006 80F85E30 		strb	r3, [r0, #94]
   7:Lib/Src/TaskCNC.c **** 
   8:Lib/Src/TaskCNC.c ****   cnc->btnOK = GPIO_PIN_4;
  40              		.loc 1 8 3 is_stmt 1 view .LVU5
  41              		.loc 1 8 14 is_stmt 0 view .LVU6
  42 000a 1022     		movs	r2, #16
  43 000c 0280     		strh	r2, [r0]	@ movhi
   9:Lib/Src/TaskCNC.c ****   cnc->btnExit = GPIO_PIN_5;
  44              		.loc 1 9 3 is_stmt 1 view .LVU7
  45              		.loc 1 9 16 is_stmt 0 view .LVU8
  46 000e 2022     		movs	r2, #32
  47 0010 4280     		strh	r2, [r0, #2]	@ movhi
  10:Lib/Src/TaskCNC.c ****   cnc->btnUp = GPIO_PIN_3;
  48              		.loc 1 10 3 is_stmt 1 view .LVU9
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 2


  49              		.loc 1 10 14 is_stmt 0 view .LVU10
  50 0012 0822     		movs	r2, #8
  51 0014 8280     		strh	r2, [r0, #4]	@ movhi
  11:Lib/Src/TaskCNC.c ****   cnc->btnDown = GPIO_PIN_15;
  52              		.loc 1 11 3 is_stmt 1 view .LVU11
  53              		.loc 1 11 16 is_stmt 0 view .LVU12
  54 0016 4FF40042 		mov	r2, #32768
  55 001a C280     		strh	r2, [r0, #6]	@ movhi
  12:Lib/Src/TaskCNC.c **** 
  13:Lib/Src/TaskCNC.c ****   cnc->Led = GPIO_PIN_0;
  56              		.loc 1 13 3 is_stmt 1 view .LVU13
  57              		.loc 1 13 12 is_stmt 0 view .LVU14
  58 001c 0122     		movs	r2, #1
  59 001e 4281     		strh	r2, [r0, #10]	@ movhi
  14:Lib/Src/TaskCNC.c ****   cnc->Buzzer = GPIO_PIN_1; 
  60              		.loc 1 14 3 is_stmt 1 view .LVU15
  61              		.loc 1 14 15 is_stmt 0 view .LVU16
  62 0020 0222     		movs	r2, #2
  63 0022 8281     		strh	r2, [r0, #12]	@ movhi
  15:Lib/Src/TaskCNC.c **** 
  16:Lib/Src/TaskCNC.c ****   cnc->uart.index = 0;
  64              		.loc 1 16 3 is_stmt 1 view .LVU17
  65              		.loc 1 16 19 is_stmt 0 view .LVU18
  66 0024 80F86F30 		strb	r3, [r0, #111]
  17:Lib/Src/TaskCNC.c ****      
  18:Lib/Src/TaskCNC.c **** }
  67              		.loc 1 18 1 view .LVU19
  68 0028 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE73:
  72              		.section	.text.ProcessBtnPress,"ax",%progbits
  73              		.align	1
  74              		.global	ProcessBtnPress
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  79              	ProcessBtnPress:
  80              	.LVL1:
  81              	.LFB74:
  19:Lib/Src/TaskCNC.c **** 
  20:Lib/Src/TaskCNC.c **** void ProcessBtnPress(CNC *cnc, osSemaphoreId xSemaphore)
  21:Lib/Src/TaskCNC.c **** {
  82              		.loc 1 21 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              		.loc 1 21 1 is_stmt 0 view .LVU21
  87 0000 70B5     		push	{r4, r5, r6, lr}
  88              	.LCFI0:
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 0546     		mov	r5, r0
  95 0004 0C46     		mov	r4, r1
  22:Lib/Src/TaskCNC.c ****   if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 3


  96              		.loc 1 22 3 is_stmt 1 view .LVU22
  97              		.loc 1 22 6 is_stmt 0 view .LVU23
  98 0006 4FF0FF31 		mov	r1, #-1
  99              	.LVL2:
 100              		.loc 1 22 6 view .LVU24
 101 000a 2046     		mov	r0, r4
 102              	.LVL3:
 103              		.loc 1 22 6 view .LVU25
 104 000c FFF7FEFF 		bl	osSemaphoreWait
 105              	.LVL4:
 106              		.loc 1 22 5 view .LVU26
 107 0010 E0B9     		cbnz	r0, .L6
 108              	.L3:
  23:Lib/Src/TaskCNC.c ****   {
  24:Lib/Src/TaskCNC.c ****     for(;;)
 109              		.loc 1 24 5 is_stmt 1 view .LVU27
  25:Lib/Src/TaskCNC.c ****     {
  26:Lib/Src/TaskCNC.c ****       if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
 110              		.loc 1 26 7 view .LVU28
 111              		.loc 1 26 10 is_stmt 0 view .LVU29
 112 0012 4FF0FF31 		mov	r1, #-1
 113 0016 2046     		mov	r0, r4
 114 0018 FFF7FEFF 		bl	osSemaphoreWait
 115              	.LVL5:
 116              		.loc 1 26 9 view .LVU30
 117 001c 0028     		cmp	r0, #0
 118 001e F8D1     		bne	.L3
  27:Lib/Src/TaskCNC.c ****       {
  28:Lib/Src/TaskCNC.c ****         switch (cnc->state)
 119              		.loc 1 28 9 is_stmt 1 view .LVU31
 120              		.loc 1 28 20 is_stmt 0 view .LVU32
 121 0020 95F85D30 		ldrb	r3, [r5, #93]	@ zero_extendqisi2
 122              		.loc 1 28 9 view .LVU33
 123 0024 022B     		cmp	r3, #2
 124 0026 F4D1     		bne	.L3
  29:Lib/Src/TaskCNC.c ****         {
  30:Lib/Src/TaskCNC.c ****         case 2: // state error connect
  31:Lib/Src/TaskCNC.c ****           if(cnc-> btnPress == 1)// press OK button
 125              		.loc 1 31 11 is_stmt 1 view .LVU34
 126              		.loc 1 31 17 is_stmt 0 view .LVU35
 127 0028 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 128              		.loc 1 31 13 view .LVU36
 129 002a 012B     		cmp	r3, #1
 130 002c F1D1     		bne	.L3
  32:Lib/Src/TaskCNC.c ****           {
  33:Lib/Src/TaskCNC.c ****             HAL_GPIO_WritePin(GPIOB, cnc->Led, GPIO_PIN_SET);
 131              		.loc 1 33 13 is_stmt 1 view .LVU37
 132 002e 084E     		ldr	r6, .L8
 133 0030 0122     		movs	r2, #1
 134 0032 6989     		ldrh	r1, [r5, #10]
 135 0034 3046     		mov	r0, r6
 136 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL6:
  34:Lib/Src/TaskCNC.c ****             HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
 138              		.loc 1 34 13 view .LVU38
 139 003a 0022     		movs	r2, #0
 140 003c A989     		ldrh	r1, [r5, #12]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 4


 141 003e 3046     		mov	r0, r6
 142 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL7:
  35:Lib/Src/TaskCNC.c ****             cnc->state = 0;
 144              		.loc 1 35 13 view .LVU39
 145              		.loc 1 35 24 is_stmt 0 view .LVU40
 146 0044 0023     		movs	r3, #0
 147 0046 85F85D30 		strb	r3, [r5, #93]
 148 004a E2E7     		b	.L3
 149              	.L6:
  36:Lib/Src/TaskCNC.c ****           }
  37:Lib/Src/TaskCNC.c ****           break;
  38:Lib/Src/TaskCNC.c ****         
  39:Lib/Src/TaskCNC.c ****         default:
  40:Lib/Src/TaskCNC.c ****           break;
  41:Lib/Src/TaskCNC.c ****         }
  42:Lib/Src/TaskCNC.c **** 
  43:Lib/Src/TaskCNC.c ****       }
  44:Lib/Src/TaskCNC.c ****     }
  45:Lib/Src/TaskCNC.c ****   }
  46:Lib/Src/TaskCNC.c **** }
 150              		.loc 1 46 1 view .LVU41
 151 004c 70BD     		pop	{r4, r5, r6, pc}
 152              	.LVL8:
 153              	.L9:
 154              		.loc 1 46 1 view .LVU42
 155 004e 00BF     		.align	2
 156              	.L8:
 157 0050 000C0140 		.word	1073810432
 158              		.cfi_endproc
 159              	.LFE74:
 161              		.section	.rodata.ProcessMode.str1.4,"aMS",%progbits,1
 162              		.align	2
 163              	.LC0:
 164 0000 482E00   		.ascii	"H.\000"
 165              		.section	.text.ProcessMode,"ax",%progbits
 166              		.align	1
 167              		.global	ProcessMode
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	ProcessMode:
 173              	.LVL9:
 174              	.LFB75:
  47:Lib/Src/TaskCNC.c **** 
  48:Lib/Src/TaskCNC.c **** void ProcessMode(CNC *cnc, osSemaphoreId xSemaphore)
  49:Lib/Src/TaskCNC.c **** {
 175              		.loc 1 49 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		.loc 1 49 1 is_stmt 0 view .LVU44
 180 0000 38B5     		push	{r3, r4, r5, lr}
 181              	.LCFI1:
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 3, -16
 184              		.cfi_offset 4, -12
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 5


 185              		.cfi_offset 5, -8
 186              		.cfi_offset 14, -4
 187 0002 0546     		mov	r5, r0
 188 0004 0C46     		mov	r4, r1
  50:Lib/Src/TaskCNC.c ****   if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
 189              		.loc 1 50 3 is_stmt 1 view .LVU45
 190              		.loc 1 50 6 is_stmt 0 view .LVU46
 191 0006 4FF0FF31 		mov	r1, #-1
 192              	.LVL10:
 193              		.loc 1 50 6 view .LVU47
 194 000a 2046     		mov	r0, r4
 195              	.LVL11:
 196              		.loc 1 50 6 view .LVU48
 197 000c FFF7FEFF 		bl	osSemaphoreWait
 198              	.LVL12:
 199              		.loc 1 50 5 view .LVU49
 200 0010 C0B9     		cbnz	r0, .L14
 201              	.L11:
  51:Lib/Src/TaskCNC.c ****   {
  52:Lib/Src/TaskCNC.c ****     for(;;)
 202              		.loc 1 52 5 is_stmt 1 view .LVU50
  53:Lib/Src/TaskCNC.c ****     {
  54:Lib/Src/TaskCNC.c ****       if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
 203              		.loc 1 54 7 view .LVU51
 204              		.loc 1 54 10 is_stmt 0 view .LVU52
 205 0012 4FF0FF31 		mov	r1, #-1
 206 0016 2046     		mov	r0, r4
 207 0018 FFF7FEFF 		bl	osSemaphoreWait
 208              	.LVL13:
 209              		.loc 1 54 9 view .LVU53
 210 001c 0028     		cmp	r0, #0
 211 001e F8D1     		bne	.L11
  55:Lib/Src/TaskCNC.c ****       {
  56:Lib/Src/TaskCNC.c ****         switch (cnc->mode)
 212              		.loc 1 56 9 is_stmt 1 view .LVU54
 213              		.loc 1 56 20 is_stmt 0 view .LVU55
 214 0020 95F85E30 		ldrb	r3, [r5, #94]	@ zero_extendqisi2
 215              		.loc 1 56 9 view .LVU56
 216 0024 032B     		cmp	r3, #3
 217 0026 F4D1     		bne	.L11
  57:Lib/Src/TaskCNC.c ****         {
  58:Lib/Src/TaskCNC.c ****         case 3: // mode home
  59:Lib/Src/TaskCNC.c ****           sprintf(cnc->uart.SendToControl, "H.");
 218              		.loc 1 59 11 is_stmt 1 view .LVU57
 219              		.loc 1 59 28 is_stmt 0 view .LVU58
 220 0028 05F16401 		add	r1, r5, #100
 221              		.loc 1 59 11 view .LVU59
 222 002c 064B     		ldr	r3, .L16
 223 002e 1A88     		ldrh	r2, [r3]	@ unaligned
 224 0030 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 225 0032 A5F86420 		strh	r2, [r5, #100]	@ unaligned
 226 0036 8B70     		strb	r3, [r1, #2]
  60:Lib/Src/TaskCNC.c ****           HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToContro
 227              		.loc 1 60 11 is_stmt 1 view .LVU60
 228 0038 6423     		movs	r3, #100
 229 003a 0A22     		movs	r2, #10
 230 003c 286E     		ldr	r0, [r5, #96]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 6


 231 003e FFF7FEFF 		bl	HAL_UART_Transmit
 232              	.LVL14:
  61:Lib/Src/TaskCNC.c ****           break;
 233              		.loc 1 61 11 view .LVU61
 234 0042 E6E7     		b	.L11
 235              	.L14:
  62:Lib/Src/TaskCNC.c **** 
  63:Lib/Src/TaskCNC.c ****         case 4: // mode running
  64:Lib/Src/TaskCNC.c **** 
  65:Lib/Src/TaskCNC.c ****           break;
  66:Lib/Src/TaskCNC.c ****         
  67:Lib/Src/TaskCNC.c ****         case 5: // mode receive data
  68:Lib/Src/TaskCNC.c **** 
  69:Lib/Src/TaskCNC.c ****           break;
  70:Lib/Src/TaskCNC.c **** 
  71:Lib/Src/TaskCNC.c ****         default:
  72:Lib/Src/TaskCNC.c ****           break;
  73:Lib/Src/TaskCNC.c ****         }
  74:Lib/Src/TaskCNC.c ****       }
  75:Lib/Src/TaskCNC.c ****     }
  76:Lib/Src/TaskCNC.c ****   }
  77:Lib/Src/TaskCNC.c **** }
 236              		.loc 1 77 1 is_stmt 0 view .LVU62
 237 0044 38BD     		pop	{r3, r4, r5, pc}
 238              	.LVL15:
 239              	.L17:
 240              		.loc 1 77 1 view .LVU63
 241 0046 00BF     		.align	2
 242              	.L16:
 243 0048 00000000 		.word	.LC0
 244              		.cfi_endproc
 245              	.LFE75:
 247              		.section	.rodata.ReceiveDataFromGUI.str1.4,"aMS",%progbits,1
 248              		.align	2
 249              	.LC1:
 250 0000 4320434F 		.ascii	"C CONNECTED \000"
 250      4E4E4543 
 250      54454420 
 250      00
 251 000d 000000   		.align	2
 252              	.LC2:
 253 0010 43204449 		.ascii	"C DISCONNECTED \000"
 253      53434F4E 
 253      4E454354 
 253      45442000 
 254              		.align	2
 255              	.LC3:
 256 0020 4320444F 		.ascii	"C DOING \000"
 256      494E4720 
 256      00
 257              		.section	.text.ReceiveDataFromGUI,"ax",%progbits
 258              		.align	1
 259              		.global	ReceiveDataFromGUI
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 264              	ReceiveDataFromGUI:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 7


 265              	.LVL16:
 266              	.LFB76:
  78:Lib/Src/TaskCNC.c **** 
  79:Lib/Src/TaskCNC.c **** void ReceiveDataFromGUI(CNC *cnc, USBD_HandleTypeDef * husbd, osSemaphoreId xSemaphore, osSemaphore
  80:Lib/Src/TaskCNC.c **** {
 267              		.loc 1 80 1 is_stmt 1 view -0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		.loc 1 80 1 is_stmt 0 view .LVU65
 272 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 273              	.LCFI2:
 274              		.cfi_def_cfa_offset 24
 275              		.cfi_offset 3, -24
 276              		.cfi_offset 4, -20
 277              		.cfi_offset 5, -16
 278              		.cfi_offset 6, -12
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 0546     		mov	r5, r0
 282 0004 0E46     		mov	r6, r1
 283 0006 1446     		mov	r4, r2
 284 0008 1F46     		mov	r7, r3
  81:Lib/Src/TaskCNC.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
  82:Lib/Src/TaskCNC.c ****   if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
 285              		.loc 1 82 3 is_stmt 1 view .LVU66
 286              		.loc 1 82 6 is_stmt 0 view .LVU67
 287 000a 4FF0FF31 		mov	r1, #-1
 288              	.LVL17:
 289              		.loc 1 82 6 view .LVU68
 290 000e 1046     		mov	r0, r2
 291              	.LVL18:
 292              		.loc 1 82 6 view .LVU69
 293 0010 FFF7FEFF 		bl	osSemaphoreWait
 294              	.LVL19:
 295              		.loc 1 82 5 view .LVU70
 296 0014 E8B1     		cbz	r0, .L20
 297              	.L18:
  83:Lib/Src/TaskCNC.c ****   {
  84:Lib/Src/TaskCNC.c ****     for(;;)
  85:Lib/Src/TaskCNC.c ****     {
  86:Lib/Src/TaskCNC.c ****       if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
  87:Lib/Src/TaskCNC.c ****       {
  88:Lib/Src/TaskCNC.c ****         switch (cnc->DataReceiveFromGUI[0])
  89:Lib/Src/TaskCNC.c ****         {
  90:Lib/Src/TaskCNC.c ****         case 'C': // command          
  91:Lib/Src/TaskCNC.c ****           switch (cnc->DataReceiveFromGUI[2])
  92:Lib/Src/TaskCNC.c ****           {
  93:Lib/Src/TaskCNC.c ****           case '0': // connected
  94:Lib/Src/TaskCNC.c ****             cnc->state = 1; // mode connect with GUI
  95:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C CONNECTED ");
  96:Lib/Src/TaskCNC.c ****             break;
  97:Lib/Src/TaskCNC.c **** 
  98:Lib/Src/TaskCNC.c ****           case '1': // disconnected
  99:Lib/Src/TaskCNC.c ****             cnc->state = 0; // mode disconect with GUI
 100:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 101:Lib/Src/TaskCNC.c ****             break;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 8


 102:Lib/Src/TaskCNC.c **** 
 103:Lib/Src/TaskCNC.c ****           case '3': // home
 104:Lib/Src/TaskCNC.c ****             cnc->mode = 3; // mode home
 105:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DOING ");
 106:Lib/Src/TaskCNC.c ****             osSemaphoreRelease(xSemaphoreMode);
 107:Lib/Src/TaskCNC.c ****             break;
 108:Lib/Src/TaskCNC.c **** 
 109:Lib/Src/TaskCNC.c ****           case '4': // start
 110:Lib/Src/TaskCNC.c ****             cnc->mode = 4; // mode running
 111:Lib/Src/TaskCNC.c ****             break;
 112:Lib/Src/TaskCNC.c ****           
 113:Lib/Src/TaskCNC.c ****           case '5': // receive data
 114:Lib/Src/TaskCNC.c ****             cnc->mode = 5; // mode receive data
 115:Lib/Src/TaskCNC.c ****             break;
 116:Lib/Src/TaskCNC.c **** 
 117:Lib/Src/TaskCNC.c ****           default:
 118:Lib/Src/TaskCNC.c ****             break;
 119:Lib/Src/TaskCNC.c ****           }
 120:Lib/Src/TaskCNC.c ****           
 121:Lib/Src/TaskCNC.c ****           break;
 122:Lib/Src/TaskCNC.c ****         case 'D': // data
 123:Lib/Src/TaskCNC.c **** 
 124:Lib/Src/TaskCNC.c ****           break;
 125:Lib/Src/TaskCNC.c ****         default:
 126:Lib/Src/TaskCNC.c ****           return;
 127:Lib/Src/TaskCNC.c ****           break;
 128:Lib/Src/TaskCNC.c ****         }
 129:Lib/Src/TaskCNC.c ****         USBD_CUSTOM_HID_SendReport(husbd, (uint8_t*)cnc->DataSendToGUI, 15);     
 130:Lib/Src/TaskCNC.c ****       }        
 131:Lib/Src/TaskCNC.c ****     }
 132:Lib/Src/TaskCNC.c ****   }  
 133:Lib/Src/TaskCNC.c **** }
 298              		.loc 1 133 1 view .LVU71
 299 0016 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 300              	.LVL20:
 301              	.L21:
  91:Lib/Src/TaskCNC.c ****           {
 302              		.loc 1 91 11 is_stmt 1 view .LVU72
  91:Lib/Src/TaskCNC.c ****           {
 303              		.loc 1 91 42 is_stmt 0 view .LVU73
 304 0018 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 305 001a 303B     		subs	r3, r3, #48
 306 001c 052B     		cmp	r3, #5
 307 001e 12D8     		bhi	.L22
 308 0020 DFE803F0 		tbb	[pc, r3]
 309              	.L24:
 310 0024 03       		.byte	(.L28-.L24)/2
 311 0025 24       		.byte	(.L27-.L24)/2
 312 0026 11       		.byte	(.L22-.L24)/2
 313 0027 2D       		.byte	(.L26-.L24)/2
 314 0028 3D       		.byte	(.L25-.L24)/2
 315 0029 41       		.byte	(.L23-.L24)/2
 316              		.p2align 1
 317              	.L28:
  94:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C CONNECTED ");
 318              		.loc 1 94 13 is_stmt 1 view .LVU74
  94:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C CONNECTED ");
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 9


 319              		.loc 1 94 24 is_stmt 0 view .LVU75
 320 002a 0123     		movs	r3, #1
 321 002c 85F85D30 		strb	r3, [r5, #93]
  95:Lib/Src/TaskCNC.c ****             break;
 322              		.loc 1 95 13 is_stmt 1 view .LVU76
 323 0030 1F4B     		ldr	r3, .L31
 324 0032 07CB     		ldmia	r3!, {r0, r1, r2}
 325 0034 C5F84E00 		str	r0, [r5, #78]	@ unaligned
 326 0038 C5F85210 		str	r1, [r5, #82]	@ unaligned
 327 003c C5F85620 		str	r2, [r5, #86]	@ unaligned
 328 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 329 0042 85F85A30 		strb	r3, [r5, #90]
  96:Lib/Src/TaskCNC.c **** 
 330              		.loc 1 96 13 view .LVU77
 331              	.L22:
 127:Lib/Src/TaskCNC.c ****         }
 332              		.loc 1 127 11 view .LVU78
 129:Lib/Src/TaskCNC.c ****       }        
 333              		.loc 1 129 9 view .LVU79
 334 0046 0F22     		movs	r2, #15
 335 0048 05F14E01 		add	r1, r5, #78
 336 004c 3046     		mov	r0, r6
 337 004e FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
 338              	.LVL21:
 339              	.L20:
  84:Lib/Src/TaskCNC.c ****     {
 340              		.loc 1 84 5 view .LVU80
  86:Lib/Src/TaskCNC.c ****       {
 341              		.loc 1 86 7 view .LVU81
  86:Lib/Src/TaskCNC.c ****       {
 342              		.loc 1 86 10 is_stmt 0 view .LVU82
 343 0052 4FF0FF31 		mov	r1, #-1
 344 0056 2046     		mov	r0, r4
 345 0058 FFF7FEFF 		bl	osSemaphoreWait
 346              	.LVL22:
  86:Lib/Src/TaskCNC.c ****       {
 347              		.loc 1 86 9 view .LVU83
 348 005c 0028     		cmp	r0, #0
 349 005e F8D1     		bne	.L20
  88:Lib/Src/TaskCNC.c ****         {
 350              		.loc 1 88 9 is_stmt 1 view .LVU84
  88:Lib/Src/TaskCNC.c ****         {
 351              		.loc 1 88 40 is_stmt 0 view .LVU85
 352 0060 AA7B     		ldrb	r2, [r5, #14]	@ zero_extendqisi2
  88:Lib/Src/TaskCNC.c ****         {
 353              		.loc 1 88 9 view .LVU86
 354 0062 432A     		cmp	r2, #67
 355 0064 D8D0     		beq	.L21
 356 0066 442A     		cmp	r2, #68
 357 0068 EDD0     		beq	.L22
 358 006a D4E7     		b	.L18
 359              	.L27:
  99:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 360              		.loc 1 99 13 is_stmt 1 view .LVU87
  99:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 361              		.loc 1 99 24 is_stmt 0 view .LVU88
 362 006c 0023     		movs	r3, #0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 10


 363 006e 85F85D30 		strb	r3, [r5, #93]
 100:Lib/Src/TaskCNC.c ****             break;
 364              		.loc 1 100 13 is_stmt 1 view .LVU89
 365 0072 1049     		ldr	r1, .L31+4
 366 0074 05F14E00 		add	r0, r5, #78
 367 0078 FFF7FEFF 		bl	sprintf
 368              	.LVL23:
 101:Lib/Src/TaskCNC.c **** 
 369              		.loc 1 101 13 view .LVU90
 370 007c E3E7     		b	.L22
 371              	.L26:
 104:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DOING ");
 372              		.loc 1 104 13 view .LVU91
 104:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C DOING ");
 373              		.loc 1 104 23 is_stmt 0 view .LVU92
 374 007e 0323     		movs	r3, #3
 375 0080 85F85E30 		strb	r3, [r5, #94]
 105:Lib/Src/TaskCNC.c ****             osSemaphoreRelease(xSemaphoreMode);
 376              		.loc 1 105 13 is_stmt 1 view .LVU93
 377 0084 0C4B     		ldr	r3, .L31+8
 378 0086 03CB     		ldmia	r3!, {r0, r1}
 379 0088 C5F84E00 		str	r0, [r5, #78]	@ unaligned
 380 008c C5F85210 		str	r1, [r5, #82]	@ unaligned
 381 0090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 382 0092 85F85630 		strb	r3, [r5, #86]
 106:Lib/Src/TaskCNC.c ****             break;
 383              		.loc 1 106 13 view .LVU94
 384 0096 3846     		mov	r0, r7
 385 0098 FFF7FEFF 		bl	osSemaphoreRelease
 386              	.LVL24:
 107:Lib/Src/TaskCNC.c **** 
 387              		.loc 1 107 13 view .LVU95
 388 009c D3E7     		b	.L22
 389              	.L25:
 110:Lib/Src/TaskCNC.c ****             break;
 390              		.loc 1 110 13 view .LVU96
 110:Lib/Src/TaskCNC.c ****             break;
 391              		.loc 1 110 23 is_stmt 0 view .LVU97
 392 009e 0423     		movs	r3, #4
 393 00a0 85F85E30 		strb	r3, [r5, #94]
 111:Lib/Src/TaskCNC.c ****           
 394              		.loc 1 111 13 is_stmt 1 view .LVU98
 395 00a4 CFE7     		b	.L22
 396              	.L23:
 114:Lib/Src/TaskCNC.c ****             break;
 397              		.loc 1 114 13 view .LVU99
 114:Lib/Src/TaskCNC.c ****             break;
 398              		.loc 1 114 23 is_stmt 0 view .LVU100
 399 00a6 0523     		movs	r3, #5
 400 00a8 85F85E30 		strb	r3, [r5, #94]
 115:Lib/Src/TaskCNC.c **** 
 401              		.loc 1 115 13 is_stmt 1 view .LVU101
 402 00ac CBE7     		b	.L22
 403              	.L32:
 404 00ae 00BF     		.align	2
 405              	.L31:
 406 00b0 00000000 		.word	.LC1
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 11


 407 00b4 10000000 		.word	.LC2
 408 00b8 20000000 		.word	.LC3
 409              		.cfi_endproc
 410              	.LFE76:
 412              		.section	.text.ReceiveDataFromCNC,"ax",%progbits
 413              		.align	1
 414              		.global	ReceiveDataFromCNC
 415              		.syntax unified
 416              		.thumb
 417              		.thumb_func
 419              	ReceiveDataFromCNC:
 420              	.LFB77:
 134:Lib/Src/TaskCNC.c **** 
 135:Lib/Src/TaskCNC.c **** void ReceiveDataFromCNC(void)
 136:Lib/Src/TaskCNC.c **** {
 421              		.loc 1 136 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 137:Lib/Src/TaskCNC.c **** 
 138:Lib/Src/TaskCNC.c **** }...
 426              		.loc 1 138 1 view .LVU103
 427 0000 7047     		bx	lr
 428              		.cfi_endproc
 429              	.LFE77:
 431              		.text
 432              	.Letext0:
 433              		.file 2 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 434              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 435              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 436              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 437              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 438              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 439              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 440              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 441              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 442              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 443              		.file 12 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 444              		.file 13 "Middlewares/Third_Party/FatFs/src/integer.h"
 445              		.file 14 "Middlewares/Third_Party/FatFs/src/ff.h"
 446              		.file 15 "Lib/Inc/TaskCNC.h"
 447              		.file 16 "Middlewares/ST/STM32_USB_Device_Library/Class/CustomHID/Inc/usbd_customhid.h"
 448              		.file 17 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\incl
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 TaskCNC.c
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:18     .text.InitCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:24     .text.InitCNC:00000000 InitCNC
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:73     .text.ProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:79     .text.ProcessBtnPress:00000000 ProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:157    .text.ProcessBtnPress:00000050 $d
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:162    .rodata.ProcessMode.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:166    .text.ProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:172    .text.ProcessMode:00000000 ProcessMode
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:243    .text.ProcessMode:00000048 $d
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:248    .rodata.ReceiveDataFromGUI.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:258    .text.ReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:264    .text.ReceiveDataFromGUI:00000000 ReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:310    .text.ReceiveDataFromGUI:00000024 $d
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:316    .text.ReceiveDataFromGUI:0000002a $t
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:406    .text.ReceiveDataFromGUI:000000b0 $d
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:413    .text.ReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc7n2W1j.s:419    .text.ReceiveDataFromCNC:00000000 ReceiveDataFromCNC

UNDEFINED SYMBOLS
osSemaphoreWait
HAL_GPIO_WritePin
HAL_UART_Transmit
USBD_CUSTOM_HID_SendReport
sprintf
osSemaphoreRelease
