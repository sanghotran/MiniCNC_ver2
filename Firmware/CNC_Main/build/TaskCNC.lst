ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"TaskCNC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.bufsize,"ax",%progbits
  18              		.align	1
  19              		.global	bufsize
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	bufsize:
  25              	.LVL0:
  26              	.LFB73:
  27              		.file 1 "Lib/Src/TaskCNC.c"
   1:Lib/Src/TaskCNC.c **** #include "TaskCNC.h"
   2:Lib/Src/TaskCNC.c **** 
   3:Lib/Src/TaskCNC.c **** int bufsize (char *buf)
   4:Lib/Src/TaskCNC.c **** {
  28              		.loc 1 4 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 4 1 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
   5:Lib/Src/TaskCNC.c **** 	int i=0;
  35              		.loc 1 5 2 is_stmt 1 view .LVU2
  36              	.LVL1:
   6:Lib/Src/TaskCNC.c **** 	while (*buf++ != '\0') i++;
  37              		.loc 1 6 2 view .LVU3
   5:Lib/Src/TaskCNC.c **** 	int i=0;
  38              		.loc 1 5 6 is_stmt 0 view .LVU4
  39 0002 0020     		movs	r0, #0
  40              	.LVL2:
  41              		.loc 1 6 8 view .LVU5
  42 0004 00E0     		b	.L2
  43              	.LVL3:
  44              	.L3:
  45              		.loc 1 6 25 is_stmt 1 discriminator 2 view .LVU6
  46              		.loc 1 6 26 is_stmt 0 discriminator 2 view .LVU7
  47 0006 0130     		adds	r0, r0, #1
  48              	.LVL4:
  49              	.L2:
  50              		.loc 1 6 8 is_stmt 1 discriminator 1 view .LVU8
  51              		.loc 1 6 9 is_stmt 0 discriminator 1 view .LVU9
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 2


  52 0008 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
  53              	.LVL5:
  54              		.loc 1 6 8 discriminator 1 view .LVU10
  55 000c 002A     		cmp	r2, #0
  56 000e FAD1     		bne	.L3
   7:Lib/Src/TaskCNC.c **** 	return i;
  57              		.loc 1 7 2 is_stmt 1 view .LVU11
   8:Lib/Src/TaskCNC.c **** }
  58              		.loc 1 8 1 is_stmt 0 view .LVU12
  59 0010 7047     		bx	lr
  60              		.cfi_endproc
  61              	.LFE73:
  63              		.section	.text.InitCNC,"ax",%progbits
  64              		.align	1
  65              		.global	InitCNC
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  70              	InitCNC:
  71              	.LVL6:
  72              	.LFB74:
   9:Lib/Src/TaskCNC.c **** 
  10:Lib/Src/TaskCNC.c **** void InitCNC(CNC* cnc)
  11:Lib/Src/TaskCNC.c **** {
  73              		.loc 1 11 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  12:Lib/Src/TaskCNC.c ****   cnc->state = 0; // state disconect with GUI
  78              		.loc 1 12 3 view .LVU14
  79              		.loc 1 12 14 is_stmt 0 view .LVU15
  80 0000 0023     		movs	r3, #0
  81 0002 80F87430 		strb	r3, [r0, #116]
  13:Lib/Src/TaskCNC.c ****   cnc->mode = 0; // mode idle
  82              		.loc 1 13 3 is_stmt 1 view .LVU16
  83              		.loc 1 13 13 is_stmt 0 view .LVU17
  84 0006 80F87530 		strb	r3, [r0, #117]
  14:Lib/Src/TaskCNC.c **** 
  15:Lib/Src/TaskCNC.c ****   cnc->btnOK = GPIO_PIN_4;
  85              		.loc 1 15 3 is_stmt 1 view .LVU18
  86              		.loc 1 15 14 is_stmt 0 view .LVU19
  87 000a 1022     		movs	r2, #16
  88 000c 0280     		strh	r2, [r0]	@ movhi
  16:Lib/Src/TaskCNC.c ****   cnc->btnExit = GPIO_PIN_5;
  89              		.loc 1 16 3 is_stmt 1 view .LVU20
  90              		.loc 1 16 16 is_stmt 0 view .LVU21
  91 000e 2022     		movs	r2, #32
  92 0010 4280     		strh	r2, [r0, #2]	@ movhi
  17:Lib/Src/TaskCNC.c ****   cnc->btnUp = GPIO_PIN_3;
  93              		.loc 1 17 3 is_stmt 1 view .LVU22
  94              		.loc 1 17 14 is_stmt 0 view .LVU23
  95 0012 0822     		movs	r2, #8
  96 0014 8280     		strh	r2, [r0, #4]	@ movhi
  18:Lib/Src/TaskCNC.c ****   cnc->btnDown = GPIO_PIN_15;
  97              		.loc 1 18 3 is_stmt 1 view .LVU24
  98              		.loc 1 18 16 is_stmt 0 view .LVU25
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 3


  99 0016 4FF40042 		mov	r2, #32768
 100 001a C280     		strh	r2, [r0, #6]	@ movhi
  19:Lib/Src/TaskCNC.c **** 
  20:Lib/Src/TaskCNC.c ****   cnc->Led = GPIO_PIN_0;
 101              		.loc 1 20 3 is_stmt 1 view .LVU26
 102              		.loc 1 20 12 is_stmt 0 view .LVU27
 103 001c 0122     		movs	r2, #1
 104 001e 4281     		strh	r2, [r0, #10]	@ movhi
  21:Lib/Src/TaskCNC.c ****   cnc->Buzzer = GPIO_PIN_1; 
 105              		.loc 1 21 3 is_stmt 1 view .LVU28
 106              		.loc 1 21 15 is_stmt 0 view .LVU29
 107 0020 0222     		movs	r2, #2
 108 0022 8281     		strh	r2, [r0, #12]	@ movhi
  22:Lib/Src/TaskCNC.c **** 
  23:Lib/Src/TaskCNC.c ****   cnc->uart.index = 0;
 109              		.loc 1 23 3 is_stmt 1 view .LVU30
 110              		.loc 1 23 19 is_stmt 0 view .LVU31
 111 0024 80F8A530 		strb	r3, [r0, #165]
  24:Lib/Src/TaskCNC.c **** 
  25:Lib/Src/TaskCNC.c ****   cnc->home = 0;
 112              		.loc 1 25 3 is_stmt 1 view .LVU32
 113              		.loc 1 25 13 is_stmt 0 view .LVU33
 114 0028 80F87630 		strb	r3, [r0, #118]
  26:Lib/Src/TaskCNC.c **** 
  27:Lib/Src/TaskCNC.c ****   //cnc->sd.fresult = f_mount(cnc->sd.FileSystem, "/", 1);
  28:Lib/Src/TaskCNC.c ****      
  29:Lib/Src/TaskCNC.c **** }
 115              		.loc 1 29 1 view .LVU34
 116 002c 7047     		bx	lr
 117              		.cfi_endproc
 118              	.LFE74:
 120              		.section	.text.SaveDataToSD,"ax",%progbits
 121              		.align	1
 122              		.global	SaveDataToSD
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	SaveDataToSD:
 128              	.LVL7:
 129              	.LFB75:
  30:Lib/Src/TaskCNC.c **** 
  31:Lib/Src/TaskCNC.c **** void SaveDataToSD(CNC *cnc)
  32:Lib/Src/TaskCNC.c **** {
 130              		.loc 1 32 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
  33:Lib/Src/TaskCNC.c ****   //cnc->sd.fresult = f_open(cnc->sd.File, cnc->sd.FileName, FA_OPEN_ALWAYS | FA_READ | FA_WRITE);
  34:Lib/Src/TaskCNC.c **** 
  35:Lib/Src/TaskCNC.c ****   	// Move to offset to the end of the file 
  36:Lib/Src/TaskCNC.c ****   	//cnc->sd.fresult = f_lseek(cnc->sd.File, f_size(cnc->sd.File)); 
  37:Lib/Src/TaskCNC.c **** 
  38:Lib/Src/TaskCNC.c ****   	// write the string to the file 
  39:Lib/Src/TaskCNC.c ****   	//cnc->sd.fresult = f_puts(cnc->sd.data, cnc->sd.File);
  40:Lib/Src/TaskCNC.c **** 
  41:Lib/Src/TaskCNC.c ****   	//f_close (&fil);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 4


  42:Lib/Src/TaskCNC.c **** }
 135              		.loc 1 42 1 view .LVU36
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE75:
 140              		.section	.text.ProcessBtnPress,"ax",%progbits
 141              		.align	1
 142              		.global	ProcessBtnPress
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 147              	ProcessBtnPress:
 148              	.LVL8:
 149              	.LFB76:
  43:Lib/Src/TaskCNC.c **** 
  44:Lib/Src/TaskCNC.c **** void ProcessBtnPress(CNC *cnc)
  45:Lib/Src/TaskCNC.c **** {  
 150              		.loc 1 45 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		.loc 1 45 1 is_stmt 0 view .LVU38
 155 0000 38B5     		push	{r3, r4, r5, lr}
 156              	.LCFI0:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 3, -16
 159              		.cfi_offset 4, -12
 160              		.cfi_offset 5, -8
 161              		.cfi_offset 14, -4
  46:Lib/Src/TaskCNC.c ****   switch (cnc->state)
 162              		.loc 1 46 3 is_stmt 1 view .LVU39
 163              		.loc 1 46 14 is_stmt 0 view .LVU40
 164 0002 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 165              		.loc 1 46 3 view .LVU41
 166 0006 022B     		cmp	r3, #2
 167 0008 00D0     		beq	.L9
 168              	.LVL9:
 169              	.L6:
  47:Lib/Src/TaskCNC.c ****   {
  48:Lib/Src/TaskCNC.c ****     case 2: // state error connect
  49:Lib/Src/TaskCNC.c ****       if(cnc-> btnPress == 1)// press OK button
  50:Lib/Src/TaskCNC.c ****       {
  51:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Led, GPIO_PIN_RESET);
  52:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
  53:Lib/Src/TaskCNC.c ****         cnc->state = 0;
  54:Lib/Src/TaskCNC.c ****       }
  55:Lib/Src/TaskCNC.c ****       break;
  56:Lib/Src/TaskCNC.c ****         
  57:Lib/Src/TaskCNC.c ****     default:
  58:Lib/Src/TaskCNC.c ****       break;
  59:Lib/Src/TaskCNC.c ****   }
  60:Lib/Src/TaskCNC.c **** }
 170              		.loc 1 60 1 view .LVU42
 171 000a 38BD     		pop	{r3, r4, r5, pc}
 172              	.LVL10:
 173              	.L9:
 174              		.loc 1 60 1 view .LVU43
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 5


 175 000c 0446     		mov	r4, r0
  49:Lib/Src/TaskCNC.c ****       {
 176              		.loc 1 49 7 is_stmt 1 view .LVU44
  49:Lib/Src/TaskCNC.c ****       {
 177              		.loc 1 49 13 is_stmt 0 view .LVU45
 178 000e 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
  49:Lib/Src/TaskCNC.c ****       {
 179              		.loc 1 49 9 view .LVU46
 180 0010 012B     		cmp	r3, #1
 181 0012 FAD1     		bne	.L6
  51:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
 182              		.loc 1 51 9 is_stmt 1 view .LVU47
 183 0014 074D     		ldr	r5, .L10
 184 0016 0022     		movs	r2, #0
 185 0018 4189     		ldrh	r1, [r0, #10]
 186 001a 2846     		mov	r0, r5
 187              	.LVL11:
  51:Lib/Src/TaskCNC.c ****         HAL_GPIO_WritePin(GPIOB, cnc->Buzzer, GPIO_PIN_RESET);
 188              		.loc 1 51 9 is_stmt 0 view .LVU48
 189 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 190              	.LVL12:
  52:Lib/Src/TaskCNC.c ****         cnc->state = 0;
 191              		.loc 1 52 9 is_stmt 1 view .LVU49
 192 0020 0022     		movs	r2, #0
 193 0022 A189     		ldrh	r1, [r4, #12]
 194 0024 2846     		mov	r0, r5
 195 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 196              	.LVL13:
  53:Lib/Src/TaskCNC.c ****       }
 197              		.loc 1 53 9 view .LVU50
  53:Lib/Src/TaskCNC.c ****       }
 198              		.loc 1 53 20 is_stmt 0 view .LVU51
 199 002a 0023     		movs	r3, #0
 200 002c 84F87430 		strb	r3, [r4, #116]
 201              		.loc 1 60 1 view .LVU52
 202 0030 EBE7     		b	.L6
 203              	.L11:
 204 0032 00BF     		.align	2
 205              	.L10:
 206 0034 000C0140 		.word	1073810432
 207              		.cfi_endproc
 208              	.LFE76:
 210              		.section	.rodata.ProcessMode.str1.4,"aMS",%progbits,1
 211              		.align	2
 212              	.LC0:
 213 0000 482100   		.ascii	"H!\000"
 214 0003 00       		.align	2
 215              	.LC1:
 216 0004 44203120 		.ascii	"D 1 %s\000"
 216      257300
 217 000b 00       		.align	2
 218              	.LC2:
 219 000c 257300   		.ascii	"%s\000"
 220              		.section	.text.ProcessMode,"ax",%progbits
 221              		.align	1
 222              		.global	ProcessMode
 223              		.syntax unified
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 6


 224              		.thumb
 225              		.thumb_func
 227              	ProcessMode:
 228              	.LVL14:
 229              	.LFB77:
  61:Lib/Src/TaskCNC.c **** 
  62:Lib/Src/TaskCNC.c **** void ProcessMode(CNC *cnc)
  63:Lib/Src/TaskCNC.c **** {
 230              		.loc 1 63 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		.loc 1 63 1 is_stmt 0 view .LVU54
 235 0000 70B5     		push	{r4, r5, r6, lr}
 236              	.LCFI1:
 237              		.cfi_def_cfa_offset 16
 238              		.cfi_offset 4, -16
 239              		.cfi_offset 5, -12
 240              		.cfi_offset 6, -8
 241              		.cfi_offset 14, -4
 242 0002 0446     		mov	r4, r0
  64:Lib/Src/TaskCNC.c ****   switch (cnc->mode)
 243              		.loc 1 64 3 is_stmt 1 view .LVU55
 244              		.loc 1 64 14 is_stmt 0 view .LVU56
 245 0004 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 246              		.loc 1 64 3 view .LVU57
 247 0008 033B     		subs	r3, r3, #3
 248 000a 042B     		cmp	r3, #4
 249 000c 1BD8     		bhi	.L12
 250 000e DFE803F0 		tbb	[pc, r3]
 251              	.L15:
 252 0012 03       		.byte	(.L19-.L15)/2
 253 0013 1B       		.byte	(.L18-.L15)/2
 254 0014 1F       		.byte	(.L17-.L15)/2
 255 0015 23       		.byte	(.L16-.L15)/2
 256 0016 3B       		.byte	(.L14-.L15)/2
 257 0017 00       		.p2align 1
 258              	.L19:
  65:Lib/Src/TaskCNC.c ****   {
  66:Lib/Src/TaskCNC.c ****     case 3: // mode home
  67:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
 259              		.loc 1 67 7 is_stmt 1 view .LVU58
 260              		.loc 1 67 23 is_stmt 0 view .LVU59
 261 0018 00F17C05 		add	r5, r0, #124
 262              		.loc 1 67 7 view .LVU60
 263 001c 2822     		movs	r2, #40
 264 001e 0021     		movs	r1, #0
 265 0020 2846     		mov	r0, r5
 266              	.LVL15:
 267              		.loc 1 67 7 view .LVU61
 268 0022 FFF7FEFF 		bl	memset
 269              	.LVL16:
  68:Lib/Src/TaskCNC.c ****       sprintf(cnc->uart.SendToControl, "H!");
 270              		.loc 1 68 7 is_stmt 1 view .LVU62
 271 0026 244B     		ldr	r3, .L21
 272 0028 1A88     		ldrh	r2, [r3]	@ unaligned
 273 002a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 7


 274 002c A4F87C20 		strh	r2, [r4, #124]	@ unaligned
 275 0030 84F87E30 		strb	r3, [r4, #126]
  69:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, 2, 100);
 276              		.loc 1 69 7 view .LVU63
 277 0034 6423     		movs	r3, #100
 278 0036 0222     		movs	r2, #2
 279 0038 2946     		mov	r1, r5
 280 003a A06F     		ldr	r0, [r4, #120]
 281 003c FFF7FEFF 		bl	HAL_UART_Transmit
 282              	.LVL17:
  70:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 283              		.loc 1 70 7 view .LVU64
 284              		.loc 1 70 17 is_stmt 0 view .LVU65
 285 0040 0023     		movs	r3, #0
 286 0042 84F87530 		strb	r3, [r4, #117]
  71:Lib/Src/TaskCNC.c ****       break;
 287              		.loc 1 71 7 is_stmt 1 view .LVU66
 288              	.L12:
  72:Lib/Src/TaskCNC.c **** 
  73:Lib/Src/TaskCNC.c ****     case 4: // mode running
  74:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  75:Lib/Src/TaskCNC.c ****       break;
  76:Lib/Src/TaskCNC.c ****           
  77:Lib/Src/TaskCNC.c ****     case 5: // mode receive file name of gcode
  78:Lib/Src/TaskCNC.c ****       //sscanf(cnc->DataReceiveFromGUI, "C 5 %s", cnc->sd.FileName);
  79:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  80:Lib/Src/TaskCNC.c ****       break;
  81:Lib/Src/TaskCNC.c **** 
  82:Lib/Src/TaskCNC.c ****     case 6: // mode receive data of gcode
  83:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
  84:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
  85:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
  86:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  87:Lib/Src/TaskCNC.c ****       //SaveDataToSD(cnc);
  88:Lib/Src/TaskCNC.c ****       //sprintf(cnc->DataSendToGUI, "C ACK ");
  89:Lib/Src/TaskCNC.c ****       //USBD_CUSTOM_HID_SendReport(cnc->husb, (uint8_t*)cnc->DataSendToGUI, sizeof(cnc->DataSendToG
  90:Lib/Src/TaskCNC.c ****       break;
  91:Lib/Src/TaskCNC.c ****     case 7:
  92:Lib/Src/TaskCNC.c ****       memset(cnc->uart.SendToControl, 0, sizeof(cnc->uart.SendToControl));
  93:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
  94:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
  95:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
  96:Lib/Src/TaskCNC.c ****       break;
  97:Lib/Src/TaskCNC.c **** 
  98:Lib/Src/TaskCNC.c ****     default:
  99:Lib/Src/TaskCNC.c ****       break;
 100:Lib/Src/TaskCNC.c ****   } 
 101:Lib/Src/TaskCNC.c **** }
 289              		.loc 1 101 1 is_stmt 0 view .LVU67
 290 0046 70BD     		pop	{r4, r5, r6, pc}
 291              	.LVL18:
 292              	.L18:
  74:Lib/Src/TaskCNC.c ****       break;
 293              		.loc 1 74 7 is_stmt 1 view .LVU68
  74:Lib/Src/TaskCNC.c ****       break;
 294              		.loc 1 74 17 is_stmt 0 view .LVU69
 295 0048 0023     		movs	r3, #0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 8


 296 004a 80F87530 		strb	r3, [r0, #117]
  75:Lib/Src/TaskCNC.c ****           
 297              		.loc 1 75 7 is_stmt 1 view .LVU70
 298 004e FAE7     		b	.L12
 299              	.L17:
  79:Lib/Src/TaskCNC.c ****       break;
 300              		.loc 1 79 7 view .LVU71
  79:Lib/Src/TaskCNC.c ****       break;
 301              		.loc 1 79 17 is_stmt 0 view .LVU72
 302 0050 0023     		movs	r3, #0
 303 0052 80F87530 		strb	r3, [r0, #117]
  80:Lib/Src/TaskCNC.c **** 
 304              		.loc 1 80 7 is_stmt 1 view .LVU73
 305 0056 F6E7     		b	.L12
 306              	.L16:
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 307              		.loc 1 83 7 view .LVU74
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 308              		.loc 1 83 23 is_stmt 0 view .LVU75
 309 0058 00F17C05 		add	r5, r0, #124
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 310              		.loc 1 83 7 view .LVU76
 311 005c 2826     		movs	r6, #40
 312 005e 3246     		mov	r2, r6
 313 0060 0021     		movs	r1, #0
 314 0062 2846     		mov	r0, r5
 315              	.LVL19:
  83:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "D 1 %s", cnc->uart.SendToControl);
 316              		.loc 1 83 7 view .LVU77
 317 0064 FFF7FEFF 		bl	memset
 318              	.LVL20:
  84:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
 319              		.loc 1 84 7 is_stmt 1 view .LVU78
 320 0068 2A46     		mov	r2, r5
 321 006a 1449     		ldr	r1, .L21+4
 322 006c 04F10E00 		add	r0, r4, #14
 323 0070 FFF7FEFF 		bl	sscanf
 324              	.LVL21:
  85:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 325              		.loc 1 85 7 view .LVU79
 326 0074 6423     		movs	r3, #100
 327 0076 3246     		mov	r2, r6
 328 0078 2946     		mov	r1, r5
 329 007a A06F     		ldr	r0, [r4, #120]
 330 007c FFF7FEFF 		bl	HAL_UART_Transmit
 331              	.LVL22:
  86:Lib/Src/TaskCNC.c ****       //SaveDataToSD(cnc);
 332              		.loc 1 86 7 view .LVU80
  86:Lib/Src/TaskCNC.c ****       //SaveDataToSD(cnc);
 333              		.loc 1 86 17 is_stmt 0 view .LVU81
 334 0080 0023     		movs	r3, #0
 335 0082 84F87530 		strb	r3, [r4, #117]
  90:Lib/Src/TaskCNC.c ****     case 7:
 336              		.loc 1 90 7 is_stmt 1 view .LVU82
 337 0086 DEE7     		b	.L12
 338              	.LVL23:
 339              	.L14:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 9


  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 340              		.loc 1 92 7 view .LVU83
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 341              		.loc 1 92 23 is_stmt 0 view .LVU84
 342 0088 00F17C05 		add	r5, r0, #124
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 343              		.loc 1 92 7 view .LVU85
 344 008c 2826     		movs	r6, #40
 345 008e 3246     		mov	r2, r6
 346 0090 0021     		movs	r1, #0
 347 0092 2846     		mov	r0, r5
 348              	.LVL24:
  92:Lib/Src/TaskCNC.c ****       sscanf(cnc->DataReceiveFromGUI, "%s", cnc->uart.SendToControl);
 349              		.loc 1 92 7 view .LVU86
 350 0094 FFF7FEFF 		bl	memset
 351              	.LVL25:
  93:Lib/Src/TaskCNC.c ****       HAL_UART_Transmit(cnc->uart.huart, cnc->uart.SendToControl, sizeof(cnc->uart.SendToControl), 
 352              		.loc 1 93 7 is_stmt 1 view .LVU87
 353 0098 2A46     		mov	r2, r5
 354 009a 0949     		ldr	r1, .L21+8
 355 009c 04F10E00 		add	r0, r4, #14
 356 00a0 FFF7FEFF 		bl	sscanf
 357              	.LVL26:
  94:Lib/Src/TaskCNC.c ****       cnc->mode = 0;
 358              		.loc 1 94 7 view .LVU88
 359 00a4 6423     		movs	r3, #100
 360 00a6 3246     		mov	r2, r6
 361 00a8 2946     		mov	r1, r5
 362 00aa A06F     		ldr	r0, [r4, #120]
 363 00ac FFF7FEFF 		bl	HAL_UART_Transmit
 364              	.LVL27:
  95:Lib/Src/TaskCNC.c ****       break;
 365              		.loc 1 95 7 view .LVU89
  95:Lib/Src/TaskCNC.c ****       break;
 366              		.loc 1 95 17 is_stmt 0 view .LVU90
 367 00b0 0023     		movs	r3, #0
 368 00b2 84F87530 		strb	r3, [r4, #117]
  96:Lib/Src/TaskCNC.c **** 
 369              		.loc 1 96 7 is_stmt 1 view .LVU91
 370              		.loc 1 101 1 is_stmt 0 view .LVU92
 371 00b6 C6E7     		b	.L12
 372              	.L22:
 373              		.align	2
 374              	.L21:
 375 00b8 00000000 		.word	.LC0
 376 00bc 04000000 		.word	.LC1
 377 00c0 0C000000 		.word	.LC2
 378              		.cfi_endproc
 379              	.LFE77:
 381              		.section	.rodata.ReceiveDataFromGUI.str1.4,"aMS",%progbits,1
 382              		.align	2
 383              	.LC3:
 384 0000 4320434F 		.ascii	"C CONNECTED \000"
 384      4E4E4543 
 384      54454420 
 384      00
 385 000d 000000   		.align	2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 10


 386              	.LC4:
 387 0010 43204449 		.ascii	"C DISCONNECTED \000"
 387      53434F4E 
 387      4E454354 
 387      45442000 
 388              		.align	2
 389              	.LC5:
 390 0020 4320444F 		.ascii	"C DOING \000"
 390      494E4720 
 390      00
 391 0029 000000   		.align	2
 392              	.LC6:
 393 002c 43205255 		.ascii	"C RUNNING \000"
 393      4E4E494E 
 393      472000
 394 0037 00       		.align	2
 395              	.LC7:
 396 0038 43204E4F 		.ascii	"C NOHOME \000"
 396      484F4D45 
 396      2000
 397 0042 0000     		.align	2
 398              	.LC8:
 399 0044 43205945 		.ascii	"C YES \000"
 399      532000
 400 004b 00       		.align	2
 401              	.LC9:
 402 004c 4320444F 		.ascii	"C DONE \000"
 402      4E452000 
 403              		.section	.text.ReceiveDataFromGUI,"ax",%progbits
 404              		.align	1
 405              		.global	ReceiveDataFromGUI
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	ReceiveDataFromGUI:
 411              	.LVL28:
 412              	.LFB78:
 102:Lib/Src/TaskCNC.c **** void ReceiveDataFromGUI(CNC *cnc, SemaphoreHandle_t xSemaphoreMode)
 103:Lib/Src/TaskCNC.c **** {
 413              		.loc 1 103 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		.loc 1 103 1 is_stmt 0 view .LVU94
 418 0000 70B5     		push	{r4, r5, r6, lr}
 419              	.LCFI2:
 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 4, -16
 422              		.cfi_offset 5, -12
 423              		.cfi_offset 6, -8
 424              		.cfi_offset 14, -4
 425 0002 0446     		mov	r4, r0
 426 0004 0D46     		mov	r5, r1
 104:Lib/Src/TaskCNC.c ****   switch (cnc->DataReceiveFromGUI[0])
 427              		.loc 1 104 3 is_stmt 1 view .LVU95
 428              		.loc 1 104 34 is_stmt 0 view .LVU96
 429 0006 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 11


 430              		.loc 1 104 3 view .LVU97
 431 0008 442B     		cmp	r3, #68
 432 000a 68D0     		beq	.L24
 433 000c 532B     		cmp	r3, #83
 434 000e 77D0     		beq	.L25
 435 0010 432B     		cmp	r3, #67
 436 0012 00D0     		beq	.L37
 437              	.LVL29:
 438              	.L23:
 105:Lib/Src/TaskCNC.c ****   {
 106:Lib/Src/TaskCNC.c ****     case 'C': // command          
 107:Lib/Src/TaskCNC.c ****       switch (cnc->DataReceiveFromGUI[2])
 108:Lib/Src/TaskCNC.c ****       {
 109:Lib/Src/TaskCNC.c ****         case '0': // connected
 110:Lib/Src/TaskCNC.c ****           cnc->state = 1; // mode connect with GUI
 111:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when connect
 112:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C CONNECTED ");
 113:Lib/Src/TaskCNC.c ****           break;
 114:Lib/Src/TaskCNC.c **** 
 115:Lib/Src/TaskCNC.c ****         case '1': // disconnected
 116:Lib/Src/TaskCNC.c ****           cnc->state = 0; // mode disconect with GUI
 117:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when disconect
 118:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 119:Lib/Src/TaskCNC.c ****           break;
 120:Lib/Src/TaskCNC.c **** 
 121:Lib/Src/TaskCNC.c ****         case '3': // home
 122:Lib/Src/TaskCNC.c ****           cnc->mode = 3; // mode home
 123:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DOING ");
 124:Lib/Src/TaskCNC.c ****           break;
 125:Lib/Src/TaskCNC.c **** 
 126:Lib/Src/TaskCNC.c ****         case '4': // start
 127:Lib/Src/TaskCNC.c ****           if( cnc->home == 1)
 128:Lib/Src/TaskCNC.c ****           {
 129:Lib/Src/TaskCNC.c ****             cnc->mode = 4; // mode running
 130:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C RUNNING ");
 131:Lib/Src/TaskCNC.c ****           }
 132:Lib/Src/TaskCNC.c ****           else
 133:Lib/Src/TaskCNC.c ****           {
 134:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C NOHOME ");
 135:Lib/Src/TaskCNC.c ****           }
 136:Lib/Src/TaskCNC.c ****           break;
 137:Lib/Src/TaskCNC.c ****           
 138:Lib/Src/TaskCNC.c ****         case '5': // receive file name of gcode
 139:Lib/Src/TaskCNC.c ****           cnc->mode = 5; // mode receive file name of gcode
 140:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C YES ");
 141:Lib/Src/TaskCNC.c ****           break;
 142:Lib/Src/TaskCNC.c **** 
 143:Lib/Src/TaskCNC.c ****         default:
 144:Lib/Src/TaskCNC.c ****           break;
 145:Lib/Src/TaskCNC.c ****       }     
 146:Lib/Src/TaskCNC.c ****       break;
 147:Lib/Src/TaskCNC.c ****     case 'D': // data
 148:Lib/Src/TaskCNC.c ****       if(cnc->DataReceiveFromGUI[2] == '0')
 149:Lib/Src/TaskCNC.c ****       {
 150:Lib/Src/TaskCNC.c ****         sprintf(cnc->DataSendToGUI, "C DONE ");
 151:Lib/Src/TaskCNC.c ****         //f_close (cnc->sd.File);
 152:Lib/Src/TaskCNC.c ****         cnc->mode = 0;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 12


 153:Lib/Src/TaskCNC.c ****       }
 154:Lib/Src/TaskCNC.c ****       else
 155:Lib/Src/TaskCNC.c ****       {
 156:Lib/Src/TaskCNC.c ****         cnc->mode = 6; // mode receive data of gcode
 157:Lib/Src/TaskCNC.c ****       }          
 158:Lib/Src/TaskCNC.c ****       break;
 159:Lib/Src/TaskCNC.c ****     case 'S': // setting      
 160:Lib/Src/TaskCNC.c ****       cnc->mode = 7; // mode setting CNC
 161:Lib/Src/TaskCNC.c ****       break;
 162:Lib/Src/TaskCNC.c **** 
 163:Lib/Src/TaskCNC.c ****     default:
 164:Lib/Src/TaskCNC.c ****       return;
 165:Lib/Src/TaskCNC.c ****   }
 166:Lib/Src/TaskCNC.c ****   USBD_CUSTOM_HID_SendReport(cnc->husb, (uint8_t*)cnc->DataSendToGUI, sizeof(cnc->DataSendToGUI));
 167:Lib/Src/TaskCNC.c ****   if(cnc->mode > 2)   
 168:Lib/Src/TaskCNC.c ****     xSemaphoreGive(xSemaphoreMode);
 169:Lib/Src/TaskCNC.c **** }
 439              		.loc 1 169 1 view .LVU98
 440 0014 70BD     		pop	{r4, r5, r6, pc}
 441              	.LVL30:
 442              	.L37:
 107:Lib/Src/TaskCNC.c ****       {
 443              		.loc 1 107 7 is_stmt 1 view .LVU99
 107:Lib/Src/TaskCNC.c ****       {
 444              		.loc 1 107 38 is_stmt 0 view .LVU100
 445 0016 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 446 0018 303B     		subs	r3, r3, #48
 447 001a 052B     		cmp	r3, #5
 448 001c 73D8     		bhi	.L27
 449 001e DFE803F0 		tbb	[pc, r3]
 450              	.L29:
 451 0022 03       		.byte	(.L33-.L29)/2
 452 0023 15       		.byte	(.L32-.L29)/2
 453 0024 72       		.byte	(.L27-.L29)/2
 454 0025 25       		.byte	(.L31-.L29)/2
 455 0026 32       		.byte	(.L30-.L29)/2
 456 0027 50       		.byte	(.L28-.L29)/2
 457              		.p2align 1
 458              	.L33:
 110:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when connect
 459              		.loc 1 110 11 is_stmt 1 view .LVU101
 110:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when connect
 460              		.loc 1 110 22 is_stmt 0 view .LVU102
 461 0028 0123     		movs	r3, #1
 462 002a 80F87430 		strb	r3, [r0, #116]
 111:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C CONNECTED ");
 463              		.loc 1 111 11 is_stmt 1 view .LVU103
 111:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C CONNECTED ");
 464              		.loc 1 111 21 is_stmt 0 view .LVU104
 465 002e 0023     		movs	r3, #0
 466 0030 80F87530 		strb	r3, [r0, #117]
 112:Lib/Src/TaskCNC.c ****           break;
 467              		.loc 1 112 11 is_stmt 1 view .LVU105
 468 0034 3D4B     		ldr	r3, .L40
 469 0036 07CB     		ldmia	r3!, {r0, r1, r2}
 470              	.LVL31:
 112:Lib/Src/TaskCNC.c ****           break;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 13


 471              		.loc 1 112 11 is_stmt 0 view .LVU106
 472 0038 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 473 003c C4F85210 		str	r1, [r4, #82]	@ unaligned
 474 0040 C4F85620 		str	r2, [r4, #86]	@ unaligned
 475 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 476 0046 84F85A30 		strb	r3, [r4, #90]
 113:Lib/Src/TaskCNC.c **** 
 477              		.loc 1 113 11 is_stmt 1 view .LVU107
 478 004a 5CE0     		b	.L27
 479              	.LVL32:
 480              	.L32:
 116:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when disconect
 481              		.loc 1 116 11 view .LVU108
 116:Lib/Src/TaskCNC.c ****           cnc->mode = 0; // reset mode when disconect
 482              		.loc 1 116 22 is_stmt 0 view .LVU109
 483 004c 0023     		movs	r3, #0
 484 004e 80F87430 		strb	r3, [r0, #116]
 117:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 485              		.loc 1 117 11 is_stmt 1 view .LVU110
 117:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DISCONNECTED ");
 486              		.loc 1 117 21 is_stmt 0 view .LVU111
 487 0052 80F87530 		strb	r3, [r0, #117]
 118:Lib/Src/TaskCNC.c ****           break;
 488              		.loc 1 118 11 is_stmt 1 view .LVU112
 489 0056 364E     		ldr	r6, .L40+4
 490 0058 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 491              	.LVL33:
 118:Lib/Src/TaskCNC.c ****           break;
 492              		.loc 1 118 11 is_stmt 0 view .LVU113
 493 005a C4F84E00 		str	r0, [r4, #78]	@ unaligned
 494 005e C4F85210 		str	r1, [r4, #82]	@ unaligned
 495 0062 C4F85620 		str	r2, [r4, #86]	@ unaligned
 496 0066 C4F85A30 		str	r3, [r4, #90]	@ unaligned
 119:Lib/Src/TaskCNC.c **** 
 497              		.loc 1 119 11 is_stmt 1 view .LVU114
 498 006a 4CE0     		b	.L27
 499              	.LVL34:
 500              	.L31:
 122:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DOING ");
 501              		.loc 1 122 11 view .LVU115
 122:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C DOING ");
 502              		.loc 1 122 21 is_stmt 0 view .LVU116
 503 006c 0323     		movs	r3, #3
 504 006e 80F87530 		strb	r3, [r0, #117]
 123:Lib/Src/TaskCNC.c ****           break;
 505              		.loc 1 123 11 is_stmt 1 view .LVU117
 506 0072 304B     		ldr	r3, .L40+8
 507 0074 03CB     		ldmia	r3!, {r0, r1}
 508              	.LVL35:
 123:Lib/Src/TaskCNC.c ****           break;
 509              		.loc 1 123 11 is_stmt 0 view .LVU118
 510 0076 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 511 007a C4F85210 		str	r1, [r4, #82]	@ unaligned
 512 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513 0080 84F85630 		strb	r3, [r4, #86]
 124:Lib/Src/TaskCNC.c **** 
 514              		.loc 1 124 11 is_stmt 1 view .LVU119
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 14


 515 0084 3FE0     		b	.L27
 516              	.LVL36:
 517              	.L30:
 127:Lib/Src/TaskCNC.c ****           {
 518              		.loc 1 127 11 view .LVU120
 127:Lib/Src/TaskCNC.c ****           {
 519              		.loc 1 127 18 is_stmt 0 view .LVU121
 520 0086 90F87630 		ldrb	r3, [r0, #118]	@ zero_extendqisi2
 127:Lib/Src/TaskCNC.c ****           {
 521              		.loc 1 127 13 view .LVU122
 522 008a 012B     		cmp	r3, #1
 523 008c 09D0     		beq	.L38
 134:Lib/Src/TaskCNC.c ****           }
 524              		.loc 1 134 13 is_stmt 1 view .LVU123
 525 008e 2A4B     		ldr	r3, .L40+12
 526 0090 03CB     		ldmia	r3!, {r0, r1}
 527              	.LVL37:
 134:Lib/Src/TaskCNC.c ****           }
 528              		.loc 1 134 13 is_stmt 0 view .LVU124
 529 0092 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 530 0096 C4F85210 		str	r1, [r4, #82]	@ unaligned
 531 009a 1B88     		ldrh	r3, [r3]	@ unaligned
 532 009c A4F85630 		strh	r3, [r4, #86]	@ unaligned
 533 00a0 31E0     		b	.L27
 534              	.LVL38:
 535              	.L38:
 129:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C RUNNING ");
 536              		.loc 1 129 13 is_stmt 1 view .LVU125
 129:Lib/Src/TaskCNC.c ****             sprintf(cnc->DataSendToGUI, "C RUNNING ");
 537              		.loc 1 129 23 is_stmt 0 view .LVU126
 538 00a2 0423     		movs	r3, #4
 539 00a4 80F87530 		strb	r3, [r0, #117]
 130:Lib/Src/TaskCNC.c ****           }
 540              		.loc 1 130 13 is_stmt 1 view .LVU127
 541 00a8 244B     		ldr	r3, .L40+16
 542 00aa 03CB     		ldmia	r3!, {r0, r1}
 543              	.LVL39:
 130:Lib/Src/TaskCNC.c ****           }
 544              		.loc 1 130 13 is_stmt 0 view .LVU128
 545 00ac C4F84E00 		str	r0, [r4, #78]	@ unaligned
 546 00b0 C4F85210 		str	r1, [r4, #82]	@ unaligned
 547 00b4 1A88     		ldrh	r2, [r3]	@ unaligned
 548 00b6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 549 00b8 A4F85620 		strh	r2, [r4, #86]	@ unaligned
 550 00bc 84F85830 		strb	r3, [r4, #88]
 551 00c0 21E0     		b	.L27
 552              	.LVL40:
 553              	.L28:
 139:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C YES ");
 554              		.loc 1 139 11 is_stmt 1 view .LVU129
 139:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "C YES ");
 555              		.loc 1 139 21 is_stmt 0 view .LVU130
 556 00c2 0523     		movs	r3, #5
 557 00c4 80F87530 		strb	r3, [r0, #117]
 140:Lib/Src/TaskCNC.c ****           break;
 558              		.loc 1 140 11 is_stmt 1 view .LVU131
 559 00c8 1D4B     		ldr	r3, .L40+20
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 15


 560 00ca 1868     		ldr	r0, [r3]
 561              	.LVL41:
 140:Lib/Src/TaskCNC.c ****           break;
 562              		.loc 1 140 11 is_stmt 0 view .LVU132
 563 00cc C4F84E00 		str	r0, [r4, #78]	@ unaligned
 564 00d0 9A88     		ldrh	r2, [r3, #4]	@ unaligned
 565 00d2 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 566 00d4 A4F85220 		strh	r2, [r4, #82]	@ unaligned
 567 00d8 84F85430 		strb	r3, [r4, #84]
 141:Lib/Src/TaskCNC.c **** 
 568              		.loc 1 141 11 is_stmt 1 view .LVU133
 569 00dc 13E0     		b	.L27
 570              	.LVL42:
 571              	.L24:
 148:Lib/Src/TaskCNC.c ****       {
 572              		.loc 1 148 7 view .LVU134
 148:Lib/Src/TaskCNC.c ****       {
 573              		.loc 1 148 33 is_stmt 0 view .LVU135
 574 00de 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 148:Lib/Src/TaskCNC.c ****       {
 575              		.loc 1 148 9 view .LVU136
 576 00e0 302B     		cmp	r3, #48
 577 00e2 03D0     		beq	.L39
 156:Lib/Src/TaskCNC.c ****       }          
 578              		.loc 1 156 9 is_stmt 1 view .LVU137
 156:Lib/Src/TaskCNC.c ****       }          
 579              		.loc 1 156 19 is_stmt 0 view .LVU138
 580 00e4 0623     		movs	r3, #6
 581 00e6 80F87530 		strb	r3, [r0, #117]
 582 00ea 0CE0     		b	.L27
 583              	.L39:
 150:Lib/Src/TaskCNC.c ****         //f_close (cnc->sd.File);
 584              		.loc 1 150 9 is_stmt 1 view .LVU139
 585 00ec 154B     		ldr	r3, .L40+24
 586 00ee 03CB     		ldmia	r3!, {r0, r1}
 587              	.LVL43:
 150:Lib/Src/TaskCNC.c ****         //f_close (cnc->sd.File);
 588              		.loc 1 150 9 is_stmt 0 view .LVU140
 589 00f0 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 590 00f4 C4F85210 		str	r1, [r4, #82]	@ unaligned
 152:Lib/Src/TaskCNC.c ****       }
 591              		.loc 1 152 9 is_stmt 1 view .LVU141
 152:Lib/Src/TaskCNC.c ****       }
 592              		.loc 1 152 19 is_stmt 0 view .LVU142
 593 00f8 0023     		movs	r3, #0
 594 00fa 84F87530 		strb	r3, [r4, #117]
 595 00fe 02E0     		b	.L27
 596              	.LVL44:
 597              	.L25:
 160:Lib/Src/TaskCNC.c ****       break;
 598              		.loc 1 160 7 is_stmt 1 view .LVU143
 160:Lib/Src/TaskCNC.c ****       break;
 599              		.loc 1 160 17 is_stmt 0 view .LVU144
 600 0100 0723     		movs	r3, #7
 601 0102 80F87530 		strb	r3, [r0, #117]
 161:Lib/Src/TaskCNC.c **** 
 602              		.loc 1 161 7 is_stmt 1 view .LVU145
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 16


 603              	.LVL45:
 604              	.L27:
 166:Lib/Src/TaskCNC.c ****   if(cnc->mode > 2)   
 605              		.loc 1 166 3 view .LVU146
 606 0106 1F22     		movs	r2, #31
 607 0108 04F14E01 		add	r1, r4, #78
 608 010c 206F     		ldr	r0, [r4, #112]
 609 010e FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
 610              	.LVL46:
 167:Lib/Src/TaskCNC.c ****     xSemaphoreGive(xSemaphoreMode);
 611              		.loc 1 167 3 view .LVU147
 167:Lib/Src/TaskCNC.c ****     xSemaphoreGive(xSemaphoreMode);
 612              		.loc 1 167 9 is_stmt 0 view .LVU148
 613 0112 94F87530 		ldrb	r3, [r4, #117]	@ zero_extendqisi2
 167:Lib/Src/TaskCNC.c ****     xSemaphoreGive(xSemaphoreMode);
 614              		.loc 1 167 5 view .LVU149
 615 0116 022B     		cmp	r3, #2
 616 0118 7FF67CAF 		bls	.L23
 168:Lib/Src/TaskCNC.c **** }
 617              		.loc 1 168 5 is_stmt 1 view .LVU150
 618 011c 0023     		movs	r3, #0
 619 011e 1A46     		mov	r2, r3
 620 0120 1946     		mov	r1, r3
 621 0122 2846     		mov	r0, r5
 622 0124 FFF7FEFF 		bl	xQueueGenericSend
 623              	.LVL47:
 624 0128 74E7     		b	.L23
 625              	.L41:
 626 012a 00BF     		.align	2
 627              	.L40:
 628 012c 00000000 		.word	.LC3
 629 0130 10000000 		.word	.LC4
 630 0134 20000000 		.word	.LC5
 631 0138 38000000 		.word	.LC7
 632 013c 2C000000 		.word	.LC6
 633 0140 44000000 		.word	.LC8
 634 0144 4C000000 		.word	.LC9
 635              		.cfi_endproc
 636              	.LFE78:
 638              		.section	.rodata.ReceiveDataFromCNC.str1.4,"aMS",%progbits,1
 639              		.align	2
 640              	.LC10:
 641 0000 4320484F 		.ascii	"C HOME \000"
 641      4D452000 
 642              		.align	2
 643              	.LC11:
 644 0008 43204143 		.ascii	"C ACK %s \000"
 644      4B202573 
 644      2000
 645 0012 0000     		.align	2
 646              	.LC12:
 647 0014 43205345 		.ascii	"C SETTING \000"
 647      5454494E 
 647      472000
 648              		.section	.text.ReceiveDataFromCNC,"ax",%progbits
 649              		.align	1
 650              		.global	ReceiveDataFromCNC
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 17


 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 655              	ReceiveDataFromCNC:
 656              	.LVL48:
 657              	.LFB79:
 170:Lib/Src/TaskCNC.c **** 
 171:Lib/Src/TaskCNC.c **** void ReceiveDataFromCNC(CNC *cnc)
 172:Lib/Src/TaskCNC.c **** {
 658              		.loc 1 172 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 0
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662              		.loc 1 172 1 is_stmt 0 view .LVU152
 663 0000 10B5     		push	{r4, lr}
 664              	.LCFI3:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 4, -8
 667              		.cfi_offset 14, -4
 668 0002 0446     		mov	r4, r0
 173:Lib/Src/TaskCNC.c ****   switch (cnc->uart.ReceiveFromControl[0])
 669              		.loc 1 173 3 is_stmt 1 view .LVU153
 670              		.loc 1 173 39 is_stmt 0 view .LVU154
 671 0004 90F8A630 		ldrb	r3, [r0, #166]	@ zero_extendqisi2
 672              		.loc 1 173 3 view .LVU155
 673 0008 482B     		cmp	r3, #72
 674 000a 0AD0     		beq	.L43
 675 000c 532B     		cmp	r3, #83
 676 000e 25D0     		beq	.L44
 677 0010 472B     		cmp	r3, #71
 678 0012 22D1     		bne	.L42
 174:Lib/Src/TaskCNC.c **** 	{
 175:Lib/Src/TaskCNC.c **** 	case 'H':
 176:Lib/Src/TaskCNC.c **** 		sprintf(cnc->DataSendToGUI, "C HOME ");
 177:Lib/Src/TaskCNC.c ****     cnc->home = 1; // have just come home
 178:Lib/Src/TaskCNC.c **** 		break;
 179:Lib/Src/TaskCNC.c **** 	case 'G':
 180:Lib/Src/TaskCNC.c **** 		sprintf(cnc->DataSendToGUI, "C ACK %s ", cnc->uart.ReceiveFromControl);
 679              		.loc 1 180 3 is_stmt 1 view .LVU156
 680 0014 00F1A602 		add	r2, r0, #166
 681 0018 1749     		ldr	r1, .L49
 682 001a 4E30     		adds	r0, r0, #78
 683              	.LVL49:
 684              		.loc 1 180 3 is_stmt 0 view .LVU157
 685 001c FFF7FEFF 		bl	sprintf
 686              	.LVL50:
 181:Lib/Src/TaskCNC.c **** 		break;
 687              		.loc 1 181 3 is_stmt 1 view .LVU158
 688 0020 08E0     		b	.L47
 689              	.LVL51:
 690              	.L43:
 176:Lib/Src/TaskCNC.c ****     cnc->home = 1; // have just come home
 691              		.loc 1 176 3 view .LVU159
 692 0022 164B     		ldr	r3, .L49+4
 693 0024 03CB     		ldmia	r3!, {r0, r1}
 694              	.LVL52:
 176:Lib/Src/TaskCNC.c ****     cnc->home = 1; // have just come home
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 18


 695              		.loc 1 176 3 is_stmt 0 view .LVU160
 696 0026 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 697 002a C4F85210 		str	r1, [r4, #82]	@ unaligned
 177:Lib/Src/TaskCNC.c **** 		break;
 698              		.loc 1 177 5 is_stmt 1 view .LVU161
 177:Lib/Src/TaskCNC.c **** 		break;
 699              		.loc 1 177 15 is_stmt 0 view .LVU162
 700 002e 0123     		movs	r3, #1
 701 0030 84F87630 		strb	r3, [r4, #118]
 178:Lib/Src/TaskCNC.c **** 	case 'G':
 702              		.loc 1 178 3 is_stmt 1 view .LVU163
 703              	.L47:
 182:Lib/Src/TaskCNC.c ****   case 'S':
 183:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C SETTING ");
 184:Lib/Src/TaskCNC.c ****     break;
 185:Lib/Src/TaskCNC.c **** 	default:
 186:Lib/Src/TaskCNC.c **** 		return;
 187:Lib/Src/TaskCNC.c ****   }
 188:Lib/Src/TaskCNC.c ****   memset(cnc->uart.ReceiveFromControl, 0, sizeof(cnc->uart.ReceiveFromControl));
 704              		.loc 1 188 3 view .LVU164
 705 0034 0023     		movs	r3, #0
 706 0036 C4F8A630 		str	r3, [r4, #166]	@ unaligned
 707 003a C4F8AA30 		str	r3, [r4, #170]	@ unaligned
 708 003e C4F8AE30 		str	r3, [r4, #174]	@ unaligned
 709 0042 C4F8B230 		str	r3, [r4, #178]	@ unaligned
 710 0046 C4F8B630 		str	r3, [r4, #182]	@ unaligned
 189:Lib/Src/TaskCNC.c ****   cnc->uart.index = 0;
 711              		.loc 1 189 3 view .LVU165
 712              		.loc 1 189 19 is_stmt 0 view .LVU166
 713 004a 84F8A530 		strb	r3, [r4, #165]
 190:Lib/Src/TaskCNC.c ****   USBD_CUSTOM_HID_SendReport(cnc->husb, (uint8_t*)cnc->DataSendToGUI, sizeof(cnc->DataSendToGUI));
 714              		.loc 1 190 3 is_stmt 1 view .LVU167
 715 004e 1F22     		movs	r2, #31
 716 0050 04F14E01 		add	r1, r4, #78
 717 0054 206F     		ldr	r0, [r4, #112]
 718 0056 FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
 719              	.LVL53:
 720              	.L42:
 191:Lib/Src/TaskCNC.c **** }...
 721              		.loc 1 191 1 is_stmt 0 view .LVU168
 722 005a 10BD     		pop	{r4, pc}
 723              	.LVL54:
 724              	.L44:
 183:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C SETTING ");
 725              		.loc 1 183 5 is_stmt 1 view .LVU169
 726 005c 084B     		ldr	r3, .L49+8
 727 005e 03CB     		ldmia	r3!, {r0, r1}
 728              	.LVL55:
 183:Lib/Src/TaskCNC.c ****     sprintf(cnc->DataSendToGUI, "C SETTING ");
 729              		.loc 1 183 5 is_stmt 0 view .LVU170
 730 0060 C4F84E00 		str	r0, [r4, #78]	@ unaligned
 731 0064 C4F85210 		str	r1, [r4, #82]	@ unaligned
 732 0068 1A88     		ldrh	r2, [r3]	@ unaligned
 733 006a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 734 006c A4F85620 		strh	r2, [r4, #86]	@ unaligned
 735 0070 84F85830 		strb	r3, [r4, #88]
 184:Lib/Src/TaskCNC.c ****     break;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 19


 736              		.loc 1 184 5 is_stmt 1 view .LVU171
 737 0074 DEE7     		b	.L47
 738              	.L50:
 739 0076 00BF     		.align	2
 740              	.L49:
 741 0078 08000000 		.word	.LC11
 742 007c 00000000 		.word	.LC10
 743 0080 14000000 		.word	.LC12
 744              		.cfi_endproc
 745              	.LFE79:
 747              		.text
 748              	.Letext0:
 749              		.file 2 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 750              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 751              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 752              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 753              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 754              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 755              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 756              		.file 9 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 757              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 758              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 759              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 760              		.file 13 "Lib/Inc/TaskCNC.h"
 761              		.file 14 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\incl
 762              		.file 15 "Middlewares/ST/STM32_USB_Device_Library/Class/CustomHID/Inc/usbd_customhid.h"
 763              		.file 16 "<built-in>"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 TaskCNC.c
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:18     .text.bufsize:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:24     .text.bufsize:00000000 bufsize
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:64     .text.InitCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:70     .text.InitCNC:00000000 InitCNC
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:121    .text.SaveDataToSD:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:127    .text.SaveDataToSD:00000000 SaveDataToSD
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:141    .text.ProcessBtnPress:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:147    .text.ProcessBtnPress:00000000 ProcessBtnPress
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:206    .text.ProcessBtnPress:00000034 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:211    .rodata.ProcessMode.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:221    .text.ProcessMode:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:227    .text.ProcessMode:00000000 ProcessMode
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:252    .text.ProcessMode:00000012 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:375    .text.ProcessMode:000000b8 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:382    .rodata.ReceiveDataFromGUI.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:404    .text.ReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:410    .text.ReceiveDataFromGUI:00000000 ReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:451    .text.ReceiveDataFromGUI:00000022 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:457    .text.ReceiveDataFromGUI:00000028 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:628    .text.ReceiveDataFromGUI:0000012c $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:639    .rodata.ReceiveDataFromCNC.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:649    .text.ReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:655    .text.ReceiveDataFromCNC:00000000 ReceiveDataFromCNC
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:741    .text.ReceiveDataFromCNC:00000078 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:257    .text.ProcessMode:00000017 $d
C:\Users\Chicken\AppData\Local\Temp\ccFV1Pm0.s:257    .text.ProcessMode:00000018 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
memset
HAL_UART_Transmit
sscanf
USBD_CUSTOM_HID_SendReport
xQueueGenericSend
sprintf
