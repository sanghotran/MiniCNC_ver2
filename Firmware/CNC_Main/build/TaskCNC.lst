ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"TaskCNC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.InitCNC,"ax",%progbits
  18              		.align	1
  19              		.global	InitCNC
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	InitCNC:
  25              	.LVL0:
  26              	.LFB73:
  27              		.file 1 "Lib/Src/TaskCNC.c"
   1:Lib/Src/TaskCNC.c **** #include "TaskCNC.h"
   2:Lib/Src/TaskCNC.c **** 
   3:Lib/Src/TaskCNC.c **** void InitCNC(CNC* cnc)
   4:Lib/Src/TaskCNC.c **** {
  28              		.loc 1 4 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
   5:Lib/Src/TaskCNC.c ****   cnc->enbCheckConnect = false;
  33              		.loc 1 5 3 view .LVU1
  34              		.loc 1 5 24 is_stmt 0 view .LVU2
  35 0000 0023     		movs	r3, #0
  36 0002 80F88D30 		strb	r3, [r0, #141]
   6:Lib/Src/TaskCNC.c **** 
   7:Lib/Src/TaskCNC.c ****   cnc->btnOK = GPIO_PIN_4;
  37              		.loc 1 7 3 is_stmt 1 view .LVU3
  38              		.loc 1 7 14 is_stmt 0 view .LVU4
  39 0006 1023     		movs	r3, #16
  40 0008 0380     		strh	r3, [r0]	@ movhi
   8:Lib/Src/TaskCNC.c ****   cnc->btnExit = GPIO_PIN_5;
  41              		.loc 1 8 3 is_stmt 1 view .LVU5
  42              		.loc 1 8 16 is_stmt 0 view .LVU6
  43 000a 2023     		movs	r3, #32
  44 000c 4380     		strh	r3, [r0, #2]	@ movhi
   9:Lib/Src/TaskCNC.c ****   cnc->btnUp = GPIO_PIN_3;
  45              		.loc 1 9 3 is_stmt 1 view .LVU7
  46              		.loc 1 9 14 is_stmt 0 view .LVU8
  47 000e 0823     		movs	r3, #8
  48 0010 8380     		strh	r3, [r0, #4]	@ movhi
  10:Lib/Src/TaskCNC.c ****   cnc->btnDown = GPIO_PIN_15;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s 			page 2


  49              		.loc 1 10 3 is_stmt 1 view .LVU9
  50              		.loc 1 10 16 is_stmt 0 view .LVU10
  51 0012 4FF40043 		mov	r3, #32768
  52 0016 C380     		strh	r3, [r0, #6]	@ movhi
  11:Lib/Src/TaskCNC.c **** 
  12:Lib/Src/TaskCNC.c ****   cnc->Led = GPIO_PIN_0;
  53              		.loc 1 12 3 is_stmt 1 view .LVU11
  54              		.loc 1 12 12 is_stmt 0 view .LVU12
  55 0018 0123     		movs	r3, #1
  56 001a 0381     		strh	r3, [r0, #8]	@ movhi
  13:Lib/Src/TaskCNC.c ****   cnc->Buzzer = GPIO_PIN_1; 
  57              		.loc 1 13 3 is_stmt 1 view .LVU13
  58              		.loc 1 13 15 is_stmt 0 view .LVU14
  59 001c 0223     		movs	r3, #2
  60 001e 4381     		strh	r3, [r0, #10]	@ movhi
  14:Lib/Src/TaskCNC.c **** 
  15:Lib/Src/TaskCNC.c ****     
  16:Lib/Src/TaskCNC.c **** }
  61              		.loc 1 16 1 view .LVU15
  62 0020 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE73:
  66              		.section	.rodata.ReceiveDataFromGUI.str1.4,"aMS",%progbits,1
  67              		.align	2
  68              	.LC0:
  69 0000 48616100 		.ascii	"Haa\000"
  70              		.section	.text.ReceiveDataFromGUI,"ax",%progbits
  71              		.align	1
  72              		.global	ReceiveDataFromGUI
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	ReceiveDataFromGUI:
  78              	.LVL1:
  79              	.LFB74:
  17:Lib/Src/TaskCNC.c **** 
  18:Lib/Src/TaskCNC.c **** void ReceiveDataFromGUI(CNC *cnc, USBD_HandleTypeDef * husbd, osSemaphoreId xSemaphore)
  19:Lib/Src/TaskCNC.c **** {
  80              		.loc 1 19 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		.loc 1 19 1 is_stmt 0 view .LVU17
  85 0000 70B5     		push	{r4, r5, r6, lr}
  86              	.LCFI0:
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 4, -16
  89              		.cfi_offset 5, -12
  90              		.cfi_offset 6, -8
  91              		.cfi_offset 14, -4
  92 0002 0546     		mov	r5, r0
  93 0004 0E46     		mov	r6, r1
  94 0006 1446     		mov	r4, r2
  20:Lib/Src/TaskCNC.c ****   // vì lúc đầu semaphore không được là 0 nên phải lấy đi 1 ngay chỗ này để 
  21:Lib/Src/TaskCNC.c ****   if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
  95              		.loc 1 21 3 is_stmt 1 view .LVU18
  96              		.loc 1 21 6 is_stmt 0 view .LVU19
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s 			page 3


  97 0008 4FF0FF31 		mov	r1, #-1
  98              	.LVL2:
  99              		.loc 1 21 6 view .LVU20
 100 000c 1046     		mov	r0, r2
 101              	.LVL3:
 102              		.loc 1 21 6 view .LVU21
 103 000e FFF7FEFF 		bl	osSemaphoreWait
 104              	.LVL4:
 105              		.loc 1 21 5 view .LVU22
 106 0012 30B1     		cbz	r0, .L4
  22:Lib/Src/TaskCNC.c ****   {
  23:Lib/Src/TaskCNC.c ****     for(;;)
  24:Lib/Src/TaskCNC.c ****     {
  25:Lib/Src/TaskCNC.c ****       if(osSemaphoreWait(xSemaphore, osWaitForever) == osOK)
  26:Lib/Src/TaskCNC.c ****       {
  27:Lib/Src/TaskCNC.c ****         switch (cnc->DataReceiveFromGUI[0])
  28:Lib/Src/TaskCNC.c ****         {
  29:Lib/Src/TaskCNC.c ****         case '0': // check connect
  30:Lib/Src/TaskCNC.c ****           sprintf(cnc->DataSendToGUI, "Haa");
  31:Lib/Src/TaskCNC.c ****           cnc->enbCheckConnect = true;
  32:Lib/Src/TaskCNC.c ****           break;
  33:Lib/Src/TaskCNC.c ****           
  34:Lib/Src/TaskCNC.c ****         default:
  35:Lib/Src/TaskCNC.c ****           break;
  36:Lib/Src/TaskCNC.c ****         }
  37:Lib/Src/TaskCNC.c ****         USBD_CUSTOM_HID_SendReport(husbd, (uint8_t*)cnc->DataSendToGUI, 65);     
  38:Lib/Src/TaskCNC.c ****       }        
  39:Lib/Src/TaskCNC.c ****     }
  40:Lib/Src/TaskCNC.c ****   }  
  41:Lib/Src/TaskCNC.c **** }
 107              		.loc 1 41 1 view .LVU23
 108 0014 70BD     		pop	{r4, r5, r6, pc}
 109              	.LVL5:
 110              	.L5:
  37:Lib/Src/TaskCNC.c ****       }        
 111              		.loc 1 37 9 is_stmt 1 view .LVU24
 112 0016 4122     		movs	r2, #65
 113 0018 05F14C01 		add	r1, r5, #76
 114 001c 3046     		mov	r0, r6
 115 001e FFF7FEFF 		bl	USBD_CUSTOM_HID_SendReport
 116              	.LVL6:
 117              	.L4:
  23:Lib/Src/TaskCNC.c ****     {
 118              		.loc 1 23 5 view .LVU25
  25:Lib/Src/TaskCNC.c ****       {
 119              		.loc 1 25 7 view .LVU26
  25:Lib/Src/TaskCNC.c ****       {
 120              		.loc 1 25 10 is_stmt 0 view .LVU27
 121 0022 4FF0FF31 		mov	r1, #-1
 122 0026 2046     		mov	r0, r4
 123 0028 FFF7FEFF 		bl	osSemaphoreWait
 124              	.LVL7:
  25:Lib/Src/TaskCNC.c ****       {
 125              		.loc 1 25 9 view .LVU28
 126 002c 0028     		cmp	r0, #0
 127 002e F8D1     		bne	.L4
  27:Lib/Src/TaskCNC.c ****         {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s 			page 4


 128              		.loc 1 27 9 is_stmt 1 view .LVU29
  27:Lib/Src/TaskCNC.c ****         {
 129              		.loc 1 27 40 is_stmt 0 view .LVU30
 130 0030 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
  27:Lib/Src/TaskCNC.c ****         {
 131              		.loc 1 27 9 view .LVU31
 132 0032 302B     		cmp	r3, #48
 133 0034 EFD1     		bne	.L5
  30:Lib/Src/TaskCNC.c ****           cnc->enbCheckConnect = true;
 134              		.loc 1 30 11 is_stmt 1 view .LVU32
 135 0036 034B     		ldr	r3, .L8
 136 0038 1868     		ldr	r0, [r3]
 137 003a E864     		str	r0, [r5, #76]	@ unaligned
  31:Lib/Src/TaskCNC.c ****           break;
 138              		.loc 1 31 11 view .LVU33
  31:Lib/Src/TaskCNC.c ****           break;
 139              		.loc 1 31 32 is_stmt 0 view .LVU34
 140 003c 0123     		movs	r3, #1
 141 003e 85F88D30 		strb	r3, [r5, #141]
  32:Lib/Src/TaskCNC.c ****           
 142              		.loc 1 32 11 is_stmt 1 view .LVU35
 143 0042 E8E7     		b	.L5
 144              	.L9:
 145              		.align	2
 146              	.L8:
 147 0044 00000000 		.word	.LC0
 148              		.cfi_endproc
 149              	.LFE74:
 151              		.section	.text.ReceiveDataFromCNC,"ax",%progbits
 152              		.align	1
 153              		.global	ReceiveDataFromCNC
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 158              	ReceiveDataFromCNC:
 159              	.LFB75:
  42:Lib/Src/TaskCNC.c **** 
  43:Lib/Src/TaskCNC.c **** void ReceiveDataFromCNC(void)
  44:Lib/Src/TaskCNC.c **** {
 160              		.loc 1 44 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
  45:Lib/Src/TaskCNC.c **** 
  46:Lib/Src/TaskCNC.c **** }...
 165              		.loc 1 46 1 view .LVU37
 166 0000 7047     		bx	lr
 167              		.cfi_endproc
 168              	.LFE75:
 170              		.text
 171              	.Letext0:
 172              		.file 2 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 173              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 174              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 175              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 176              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s 			page 5


 177              		.file 7 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 178              		.file 8 "Lib/Inc/TaskCNC.h"
 179              		.file 9 "Middlewares/ST/STM32_USB_Device_Library/Class/CustomHID/Inc/usbd_customhid.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 TaskCNC.c
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:18     .text.InitCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:24     .text.InitCNC:00000000 InitCNC
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:67     .rodata.ReceiveDataFromGUI.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:71     .text.ReceiveDataFromGUI:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:77     .text.ReceiveDataFromGUI:00000000 ReceiveDataFromGUI
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:147    .text.ReceiveDataFromGUI:00000044 $d
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:152    .text.ReceiveDataFromCNC:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\ccklTrG4.s:158    .text.ReceiveDataFromCNC:00000000 ReceiveDataFromCNC

UNDEFINED SYMBOLS
osSemaphoreWait
USBD_CUSTOM_HID_SendReport
