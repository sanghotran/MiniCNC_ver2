ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB79:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "MotorControl.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  45:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** UART_HandleTypeDef huart2;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** CNC cnc;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  56:Core/Src/main.c **** void SystemClock_Config(void);
  57:Core/Src/main.c **** static void MX_GPIO_Init(void);
  58:Core/Src/main.c **** static void MX_TIM1_Init(void);
  59:Core/Src/main.c **** static void MX_TIM2_Init(void);
  60:Core/Src/main.c **** static void MX_TIM3_Init(void);
  61:Core/Src/main.c **** static void MX_TIM4_Init(void);
  62:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** void uart_clear_receive_buffer_and_start_receive_IT() 
  70:Core/Src/main.c **** {
  71:Core/Src/main.c ****     // Đọc dữ liệu trong bộ nhận cho đến khi không còn dữ liệu trong buffer
  72:Core/Src/main.c ****     while (__HAL_UART_GET_FLAG(&huart2, UART_FLAG_RXNE)) {
  73:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
  74:Core/Src/main.c ****     }
  75:Core/Src/main.c ****     cnc.data.index = 0;
  76:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.data.Receive, 1);
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   UNUSED(GPIO_Pin);
  82:Core/Src/main.c **** 	// X Home
  83:Core/Src/main.c **** 	if( GPIO_Pin == cnc.x_axis.PIN_HOME)
  84:Core/Src/main.c **** 	{
  85:Core/Src/main.c **** 		cnc.x_axis.pwm = 0;
  86:Core/Src/main.c **** 		PWM(&cnc.x_axis);
  87:Core/Src/main.c **** 		cnc.x_axis.home = true;
  88:Core/Src/main.c **** 	}
  89:Core/Src/main.c **** 	// Y Home
  90:Core/Src/main.c **** 	if( GPIO_Pin == cnc.y_axis.PIN_HOME)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 3


  91:Core/Src/main.c **** 	{
  92:Core/Src/main.c **** 		cnc.y_axis.pwm = 0;
  93:Core/Src/main.c **** 		PWM(&cnc.y_axis);
  94:Core/Src/main.c **** 		cnc.y_axis.home = true;
  95:Core/Src/main.c **** 	}
  96:Core/Src/main.c **** 	// Z Home
  97:Core/Src/main.c **** 	if( GPIO_Pin == cnc.z_axis.PIN_HOME)
  98:Core/Src/main.c **** 	{
  99:Core/Src/main.c **** 		cnc.z_axis.pwm = 0;
 100:Core/Src/main.c **** 		PWM(&cnc.z_axis);
 101:Core/Src/main.c **** 		cnc.z_axis.home = true;
 102:Core/Src/main.c **** 	}
 103:Core/Src/main.c **** }
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 106:Core/Src/main.c **** {
 107:Core/Src/main.c ****   UNUSED(huart);
 108:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 109:Core/Src/main.c **** 	{
 110:Core/Src/main.c **** 		if((cnc.data.Receive != '!') && (cnc.data.Receive != 0)) //line feed Ascii
 111:Core/Src/main.c **** 		{
 112:Core/Src/main.c **** 			cnc.data.ReceiveBuff[cnc.data.index++] = cnc.data.Receive; //Save data in Rxbuff
 113:Core/Src/main.c **** 		}
 114:Core/Src/main.c **** 		else if (cnc.data.Receive == '!')
 115:Core/Src/main.c **** 		{
 116:Core/Src/main.c **** 			cnc.data.index = 0;
 117:Core/Src/main.c **** 			//ProcessData(&cnc);	
 118:Core/Src/main.c ****       cnc.Mode = 6; //process data
 119:Core/Src/main.c ****       //return;
 120:Core/Src/main.c **** 		}
 121:Core/Src/main.c **** 		HAL_UART_Receive_IT(&huart2, &cnc.data.Receive, 1);
 122:Core/Src/main.c **** 	}
 123:Core/Src/main.c **** }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** void axisInit()
 126:Core/Src/main.c **** {
 127:Core/Src/main.c **** 	cnc.x_axis.htim_motor = &htim3;
 128:Core/Src/main.c **** 	cnc.y_axis.htim_motor = &htim3;
 129:Core/Src/main.c **** 	cnc.z_axis.htim_motor = &htim3;
 130:Core/Src/main.c ****   cnc.drill.htim_motor = &htim3;
 131:Core/Src/main.c **** 	
 132:Core/Src/main.c **** 	// cnc.x_axis.htim_enc = &htim4;
 133:Core/Src/main.c **** 	// cnc.y_axis.htim_enc = &htim2;
 134:Core/Src/main.c **** 	// cnc.z_axis.htim_enc = &htim1;
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   cnc.x_axis.enc = &htim4.Instance->CNT;
 137:Core/Src/main.c ****   cnc.y_axis.enc = &htim2.Instance->CNT;
 138:Core/Src/main.c ****   cnc.z_axis.enc = &htim1.Instance->CNT;
 139:Core/Src/main.c **** 	
 140:Core/Src/main.c **** 	cnc.x_axis.GPIO_DIR = GPIOB;
 141:Core/Src/main.c **** 	cnc.y_axis.GPIO_DIR = GPIOB;
 142:Core/Src/main.c **** 	cnc.z_axis.GPIO_DIR = GPIOA;
 143:Core/Src/main.c ****   cnc.drill.GPIO_DIR = GPIOA;
 144:Core/Src/main.c **** 	
 145:Core/Src/main.c **** 	cnc.x_axis.PIN_DIR = GPIO_PIN_8;
 146:Core/Src/main.c **** 	cnc.y_axis.PIN_DIR = GPIO_PIN_9;
 147:Core/Src/main.c **** 	cnc.z_axis.PIN_DIR = GPIO_PIN_5;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 4


 148:Core/Src/main.c ****   cnc.drill.PIN_DIR = GPIO_PIN_4;
 149:Core/Src/main.c **** 	
 150:Core/Src/main.c **** 	cnc.x_axis.CHANNEL = TIM_CHANNEL_3;
 151:Core/Src/main.c **** 	cnc.y_axis.CHANNEL = TIM_CHANNEL_4;
 152:Core/Src/main.c **** 	cnc.z_axis.CHANNEL = TIM_CHANNEL_2;
 153:Core/Src/main.c ****   cnc.drill.CHANNEL = TIM_CHANNEL_1;
 154:Core/Src/main.c **** 	
 155:Core/Src/main.c **** 	cnc.x_axis.GPIO_HOME = GPIOA;
 156:Core/Src/main.c **** 	cnc.y_axis.GPIO_HOME = GPIOA;
 157:Core/Src/main.c **** 	cnc.z_axis.GPIO_HOME = GPIOA;
 158:Core/Src/main.c **** 	
 159:Core/Src/main.c **** 	cnc.x_axis.PIN_HOME = GPIO_PIN_12;
 160:Core/Src/main.c **** 	cnc.y_axis.PIN_HOME = GPIO_PIN_11;
 161:Core/Src/main.c **** 	cnc.z_axis.PIN_HOME = GPIO_PIN_10;
 162:Core/Src/main.c **** 	
 163:Core/Src/main.c **** 	cnc.x_axis.Kp = 22;
 164:Core/Src/main.c **** 	cnc.y_axis.Kp = 27;
 165:Core/Src/main.c **** 	cnc.z_axis.Kp = 15;
 166:Core/Src/main.c **** 	
 167:Core/Src/main.c **** 	cnc.x_axis.Ki = 0.0001;
 168:Core/Src/main.c **** 	cnc.y_axis.Ki = 0.0001;
 169:Core/Src/main.c **** 	cnc.z_axis.Ki = 0.0001;
 170:Core/Src/main.c **** 	
 171:Core/Src/main.c **** 	cnc.x_axis.Kd = 2;
 172:Core/Src/main.c **** 	cnc.y_axis.Kd = 3;
 173:Core/Src/main.c **** 	cnc.z_axis.Kd = 10;
 174:Core/Src/main.c **** 	
 175:Core/Src/main.c **** 	cnc.x_axis.mm_pulse = 249.8886;//142.8571;
 176:Core/Src/main.c **** 	cnc.y_axis.mm_pulse = 495.1475;//333.3333;
 177:Core/Src/main.c **** 	cnc.z_axis.mm_pulse = 500;
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   cnc.x_axis.ERROR = 2;
 180:Core/Src/main.c ****   cnc.y_axis.ERROR = 4;
 181:Core/Src/main.c ****   cnc.z_axis.ERROR = 1;
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   cnc.x_axis.speed = MAX_SPEED;
 184:Core/Src/main.c ****   cnc.y_axis.speed = MAX_SPEED;
 185:Core/Src/main.c ****   cnc.z_axis.speed = MAX_SPEED;
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   cnc.z_max = Z_MAX;
 188:Core/Src/main.c ****   cnc.step = STEP;
 189:Core/Src/main.c ****   cnc.thickness = 1;
 190:Core/Src/main.c ****   cnc.speed = MAX_SPEED;
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** /* USER CODE END 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** /**
 195:Core/Src/main.c ****   * @brief  The application entry point.
 196:Core/Src/main.c ****   * @retval int
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** int main(void)
 199:Core/Src/main.c **** {
 200:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END 1 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 5


 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 207:Core/Src/main.c ****   HAL_Init();
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END Init */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* Configure the system clock */
 214:Core/Src/main.c ****   SystemClock_Config();
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END SysInit */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* Initialize all configured peripherals */
 221:Core/Src/main.c ****   MX_GPIO_Init();
 222:Core/Src/main.c ****   MX_TIM1_Init();
 223:Core/Src/main.c ****   MX_TIM2_Init();
 224:Core/Src/main.c ****   MX_TIM3_Init();
 225:Core/Src/main.c ****   MX_TIM4_Init();
 226:Core/Src/main.c ****   MX_USART2_UART_Init();
 227:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 228:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, &cnc.data.Receive, 1);
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   // Init axis
 231:Core/Src/main.c **** 	axisInit();
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   // Start PWM
 234:Core/Src/main.c **** 	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 235:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 236:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 237:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 238:Core/Src/main.c **** 	
 239:Core/Src/main.c **** 	// Start Encoder
 240:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim1, TIM_CHANNEL_1 | TIM_CHANNEL_2);
 241:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_1 | TIM_CHANNEL_2);
 242:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_1 | TIM_CHANNEL_2);
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* Infinite loop */
 247:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 248:Core/Src/main.c ****   while (1)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     switch (cnc.Mode)
 251:Core/Src/main.c ****     {
 252:Core/Src/main.c ****     case 1: // mode Home
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****       // goto x home
 255:Core/Src/main.c **** 			HOME(&cnc.x_axis);
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** 			// goto y home
 258:Core/Src/main.c **** 			HOME(&cnc.y_axis);
 259:Core/Src/main.c **** 			
 260:Core/Src/main.c **** 			// goto z home
 261:Core/Src/main.c **** 			HOME(&cnc.z_axis);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 6


 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****       //test drill
 264:Core/Src/main.c ****       //runDrill(&cnc.drill, 70);
 265:Core/Src/main.c **** 			
 266:Core/Src/main.c **** 			if(cnc.x_axis.home && cnc.y_axis.home && cnc.z_axis.home)
 267:Core/Src/main.c **** 			{
 268:Core/Src/main.c **** 			  // cnc.x_axis.htim_enc->Instance->CNT = 0;
 269:Core/Src/main.c **** 				// cnc.y_axis.htim_enc->Instance->CNT = 0;
 270:Core/Src/main.c **** 				// cnc.z_axis.htim_enc->Instance->CNT = 0;
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****         *cnc.x_axis.enc = 0;
 273:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 274:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 275:Core/Src/main.c **** 				
 276:Core/Src/main.c **** 				cnc.x_axis.pos = 0;
 277:Core/Src/main.c **** 				cnc.y_axis.pos = 0;
 278:Core/Src/main.c **** 				cnc.z_axis.pos = 0;
 279:Core/Src/main.c **** 				
 280:Core/Src/main.c **** 			  cnc.Mode = 2; // to protect switch, goto home 1cm mode					
 281:Core/Src/main.c **** 			}
 282:Core/Src/main.c ****         
 283:Core/Src/main.c ****       break;
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****     case 2: // mode Home 1cm
 286:Core/Src/main.c ****       move(&cnc.x_axis, 10);
 287:Core/Src/main.c **** 			move(&cnc.y_axis, 10);
 288:Core/Src/main.c **** 			move(&cnc.z_axis, 10);
 289:Core/Src/main.c **** 			if( cnc.x_axis.finish && cnc.y_axis.finish && cnc.z_axis.finish)
 290:Core/Src/main.c **** 			{
 291:Core/Src/main.c **** 				cnc.x_axis.finish = false;
 292:Core/Src/main.c **** 				cnc.y_axis.finish = false;
 293:Core/Src/main.c **** 				cnc.z_axis.finish = false;
 294:Core/Src/main.c **** 
 295:Core/Src/main.c **** 				// cnc.x_axis.htim_enc->Instance->CNT = 0;
 296:Core/Src/main.c **** 				// cnc.y_axis.htim_enc->Instance->CNT = 0;
 297:Core/Src/main.c **** 				// cnc.z_axis.htim_enc->Instance->CNT = 0;
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****         *cnc.x_axis.enc = 0;
 300:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 301:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 302:Core/Src/main.c **** 				
 303:Core/Src/main.c **** 				cnc.x_axis.pos = 0;
 304:Core/Src/main.c **** 				cnc.y_axis.pos = 0;
 305:Core/Src/main.c **** 				cnc.z_axis.pos = 0;
 306:Core/Src/main.c ****         memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 307:Core/Src/main.c ****         sprintf(cnc.data.TransBuff, "H!");
 308:Core/Src/main.c ****         HAL_UART_Transmit(&huart2, cnc.data.TransBuff, 2, 100);
 309:Core/Src/main.c ****         cnc.data.index = 0;
 310:Core/Src/main.c **** 				cnc.Mode = 0;
 311:Core/Src/main.c ****         //uart_clear_receive_buffer_and_start_receive_IT();
 312:Core/Src/main.c **** 			}
 313:Core/Src/main.c ****       break;
 314:Core/Src/main.c ****     
 315:Core/Src/main.c ****     case 3:
 316:Core/Src/main.c ****       if(cnc.drill.enb)
 317:Core/Src/main.c ****       {
 318:Core/Src/main.c ****         runDrill(&cnc.drill, 95);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 7


 319:Core/Src/main.c ****         while(!cnc.z_axis.finish)
 320:Core/Src/main.c **** 				{
 321:Core/Src/main.c **** 					move(&cnc.z_axis, cnc.z_axis.next);
 322:Core/Src/main.c **** 				}
 323:Core/Src/main.c **** 				cnc.z_axis.finish = false;
 324:Core/Src/main.c ****       }
 325:Core/Src/main.c ****       else
 326:Core/Src/main.c ****       {
 327:Core/Src/main.c ****         while(!cnc.z_axis.finish)
 328:Core/Src/main.c **** 				{
 329:Core/Src/main.c **** 					move(&cnc.z_axis, cnc.z_axis.next);
 330:Core/Src/main.c **** 				}
 331:Core/Src/main.c **** 				cnc.z_axis.finish = false;
 332:Core/Src/main.c ****         runDrill(&cnc.drill, 0);
 333:Core/Src/main.c ****       }        
 334:Core/Src/main.c ****       cnc.Mode = 7;
 335:Core/Src/main.c ****       break;
 336:Core/Src/main.c ****     /*case 3: // check drill
 337:Core/Src/main.c ****       if(cnc.drill.status != cnc.drill.enb)
 338:Core/Src/main.c **** 			{
 339:Core/Src/main.c **** 				if(cnc.drill.enb){
 340:Core/Src/main.c ****           cnc.z_axis.next = cnc.z_max - cnc.thickness;
 341:Core/Src/main.c ****           runDrill(&cnc.drill, 90);
 342:Core/Src/main.c ****         }					
 343:Core/Src/main.c **** 				else
 344:Core/Src/main.c **** 					cnc.z_axis.next = 0;
 345:Core/Src/main.c **** 				while(!cnc.z_axis.finish)
 346:Core/Src/main.c **** 				{
 347:Core/Src/main.c **** 					move(&cnc.z_axis, cnc.z_axis.next);
 348:Core/Src/main.c **** 				}
 349:Core/Src/main.c **** 				cnc.z_axis.finish = false;
 350:Core/Src/main.c **** 				cnc.drill.status = cnc.drill.enb;
 351:Core/Src/main.c **** 			}
 352:Core/Src/main.c ****       if(cnc.drill.enb)
 353:Core/Src/main.c ****         cnc.Mode = 5; // mode G01
 354:Core/Src/main.c ****       else
 355:Core/Src/main.c ****       {
 356:Core/Src/main.c ****         cnc.Mode = 4; // mode G00
 357:Core/Src/main.c ****         runDrill(&cnc.drill, 0);
 358:Core/Src/main.c ****       }        
 359:Core/Src/main.c ****       break;*/
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****     case 4: // mode G00
 362:Core/Src/main.c ****       while(!(cnc.x_axis.finish && cnc.y_axis.finish))
 363:Core/Src/main.c **** 			{
 364:Core/Src/main.c **** 				move(&cnc.x_axis, cnc.x_axis.next);
 365:Core/Src/main.c **** 				move(&cnc.y_axis, cnc.y_axis.next);	
 366:Core/Src/main.c **** 			}
 367:Core/Src/main.c **** 			cnc.x_axis.finish = false;
 368:Core/Src/main.c **** 			cnc.y_axis.finish = false;
 369:Core/Src/main.c ****       cnc.x_axis.last = cnc.x_axis.pos / cnc.x_axis.mm_pulse;
 370:Core/Src/main.c ****       cnc.y_axis.last = cnc.y_axis.pos / cnc.y_axis.mm_pulse;
 371:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 372:Core/Src/main.c ****       break;
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****     case 5: // mode G01
 375:Core/Src/main.c ****       drawLine(&cnc.x_axis, &cnc.y_axis);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 8


 376:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 377:Core/Src/main.c ****       break;
 378:Core/Src/main.c **** 
 379:Core/Src/main.c ****     case 6: // mode process data
 380:Core/Src/main.c ****       ProcessData(&cnc);
 381:Core/Src/main.c ****       break;
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****     case 7: // send feedback to main      
 384:Core/Src/main.c ****       memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 385:Core/Src/main.c ****       sprintf(cnc.data.TransBuff, "G0%uX%0.2fY%0.2f!", cnc.drill.enb, cnc.x_axis.last, cnc.y_axis.l
 386:Core/Src/main.c ****       HAL_Delay(120);
 387:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, cnc.data.TransBuff, sizeof(cnc.data.TransBuff), 100);
 388:Core/Src/main.c ****       cnc.Mode = 0;      
 389:Core/Src/main.c ****       break;
 390:Core/Src/main.c ****     case 8: // send respond for setting
 391:Core/Src/main.c ****       memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 392:Core/Src/main.c ****       sprintf(cnc.data.TransBuff, "S!");
 393:Core/Src/main.c ****       HAL_Delay(120);
 394:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, cnc.data.TransBuff, 2, 100);
 395:Core/Src/main.c ****       cnc.Mode = 0;
 396:Core/Src/main.c ****       break;
 397:Core/Src/main.c ****     case 9: // stop
 398:Core/Src/main.c ****       while(!cnc.z_axis.finish)
 399:Core/Src/main.c ****       {
 400:Core/Src/main.c ****         move(&cnc.z_axis, 0);
 401:Core/Src/main.c ****       }
 402:Core/Src/main.c ****       cnc.z_axis.finish = false;
 403:Core/Src/main.c ****       runDrill(&cnc.drill, 0);
 404:Core/Src/main.c ****       cnc.Mode = 0; // mode home
 405:Core/Src/main.c ****       break;
 406:Core/Src/main.c ****     case 10: // z edit
 407:Core/Src/main.c ****       while(!cnc.z_axis.finish)
 408:Core/Src/main.c ****       {
 409:Core/Src/main.c ****         move(&cnc.z_axis, cnc.z_axis.next);
 410:Core/Src/main.c ****       }
 411:Core/Src/main.c ****       cnc.z_axis.finish = false;
 412:Core/Src/main.c ****       memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 413:Core/Src/main.c ****       sprintf(cnc.data.TransBuff, "Z!");
 414:Core/Src/main.c ****       HAL_Delay(120);
 415:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, cnc.data.TransBuff, 2, 100);
 416:Core/Src/main.c ****       cnc.Mode = 0;
 417:Core/Src/main.c ****       break;
 418:Core/Src/main.c ****     default:
 419:Core/Src/main.c ****       break;
 420:Core/Src/main.c ****     }
 421:Core/Src/main.c ****     /* USER CODE END WHILE */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 424:Core/Src/main.c ****   }
 425:Core/Src/main.c ****   /* USER CODE END 3 */
 426:Core/Src/main.c **** }
 427:Core/Src/main.c **** 
 428:Core/Src/main.c **** /**
 429:Core/Src/main.c ****   * @brief System Clock Configuration
 430:Core/Src/main.c ****   * @retval None
 431:Core/Src/main.c ****   */
 432:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 9


 433:Core/Src/main.c **** {
 434:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 435:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 436:Core/Src/main.c **** 
 437:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 438:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 439:Core/Src/main.c ****   */
 440:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 441:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 442:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 443:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 444:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 445:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 446:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 447:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 448:Core/Src/main.c ****   {
 449:Core/Src/main.c ****     Error_Handler();
 450:Core/Src/main.c ****   }
 451:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 452:Core/Src/main.c ****   */
 453:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 454:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 455:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 456:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 457:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 458:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 459:Core/Src/main.c **** 
 460:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 461:Core/Src/main.c ****   {
 462:Core/Src/main.c ****     Error_Handler();
 463:Core/Src/main.c ****   }
 464:Core/Src/main.c **** }
 465:Core/Src/main.c **** 
 466:Core/Src/main.c **** /**
 467:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 468:Core/Src/main.c ****   * @param None
 469:Core/Src/main.c ****   * @retval None
 470:Core/Src/main.c ****   */
 471:Core/Src/main.c **** static void MX_TIM1_Init(void)
 472:Core/Src/main.c **** {
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 479:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 484:Core/Src/main.c ****   htim1.Instance = TIM1;
 485:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 486:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 487:Core/Src/main.c ****   htim1.Init.Period = 65535;
 488:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 489:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 10


 490:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 491:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 492:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 493:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 494:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 495:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 496:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 497:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 498:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 499:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 500:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 501:Core/Src/main.c ****   {
 502:Core/Src/main.c ****     Error_Handler();
 503:Core/Src/main.c ****   }
 504:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 505:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 506:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 507:Core/Src/main.c ****   {
 508:Core/Src/main.c ****     Error_Handler();
 509:Core/Src/main.c ****   }
 510:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 511:Core/Src/main.c **** 
 512:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 513:Core/Src/main.c **** 
 514:Core/Src/main.c **** }
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** /**
 517:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 518:Core/Src/main.c ****   * @param None
 519:Core/Src/main.c ****   * @retval None
 520:Core/Src/main.c ****   */
 521:Core/Src/main.c **** static void MX_TIM2_Init(void)
 522:Core/Src/main.c **** {
 523:Core/Src/main.c **** 
 524:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 525:Core/Src/main.c **** 
 526:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 527:Core/Src/main.c **** 
 528:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 529:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 532:Core/Src/main.c **** 
 533:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 534:Core/Src/main.c ****   htim2.Instance = TIM2;
 535:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 536:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 537:Core/Src/main.c ****   htim2.Init.Period = 65535;
 538:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 539:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 540:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 541:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 542:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 543:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 544:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 545:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 546:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 11


 547:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 548:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 549:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 550:Core/Src/main.c ****   {
 551:Core/Src/main.c ****     Error_Handler();
 552:Core/Src/main.c ****   }
 553:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 554:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 555:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 556:Core/Src/main.c ****   {
 557:Core/Src/main.c ****     Error_Handler();
 558:Core/Src/main.c ****   }
 559:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 560:Core/Src/main.c **** 
 561:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 562:Core/Src/main.c **** 
 563:Core/Src/main.c **** }
 564:Core/Src/main.c **** 
 565:Core/Src/main.c **** /**
 566:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 567:Core/Src/main.c ****   * @param None
 568:Core/Src/main.c ****   * @retval None
 569:Core/Src/main.c ****   */
 570:Core/Src/main.c **** static void MX_TIM3_Init(void)
 571:Core/Src/main.c **** {
 572:Core/Src/main.c **** 
 573:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 574:Core/Src/main.c **** 
 575:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 576:Core/Src/main.c **** 
 577:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 578:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 579:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 580:Core/Src/main.c **** 
 581:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 582:Core/Src/main.c **** 
 583:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 584:Core/Src/main.c ****   htim3.Instance = TIM3;
 585:Core/Src/main.c ****   htim3.Init.Prescaler = 29;
 586:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 587:Core/Src/main.c ****   htim3.Init.Period = 99;
 588:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 589:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 590:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 591:Core/Src/main.c ****   {
 592:Core/Src/main.c ****     Error_Handler();
 593:Core/Src/main.c ****   }
 594:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 595:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 596:Core/Src/main.c ****   {
 597:Core/Src/main.c ****     Error_Handler();
 598:Core/Src/main.c ****   }
 599:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 600:Core/Src/main.c ****   {
 601:Core/Src/main.c ****     Error_Handler();
 602:Core/Src/main.c ****   }
 603:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 12


 604:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 605:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 606:Core/Src/main.c ****   {
 607:Core/Src/main.c ****     Error_Handler();
 608:Core/Src/main.c ****   }
 609:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 610:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 611:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 612:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 613:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 614:Core/Src/main.c ****   {
 615:Core/Src/main.c ****     Error_Handler();
 616:Core/Src/main.c ****   }
 617:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 618:Core/Src/main.c ****   {
 619:Core/Src/main.c ****     Error_Handler();
 620:Core/Src/main.c ****   }
 621:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 622:Core/Src/main.c ****   {
 623:Core/Src/main.c ****     Error_Handler();
 624:Core/Src/main.c ****   }
 625:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 626:Core/Src/main.c ****   {
 627:Core/Src/main.c ****     Error_Handler();
 628:Core/Src/main.c ****   }
 629:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 630:Core/Src/main.c **** 
 631:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 632:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 633:Core/Src/main.c **** 
 634:Core/Src/main.c **** }
 635:Core/Src/main.c **** 
 636:Core/Src/main.c **** /**
 637:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 638:Core/Src/main.c ****   * @param None
 639:Core/Src/main.c ****   * @retval None
 640:Core/Src/main.c ****   */
 641:Core/Src/main.c **** static void MX_TIM4_Init(void)
 642:Core/Src/main.c **** {
 643:Core/Src/main.c **** 
 644:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 645:Core/Src/main.c **** 
 646:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 647:Core/Src/main.c **** 
 648:Core/Src/main.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
 649:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 650:Core/Src/main.c **** 
 651:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 652:Core/Src/main.c **** 
 653:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 654:Core/Src/main.c ****   htim4.Instance = TIM4;
 655:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 656:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 657:Core/Src/main.c ****   htim4.Init.Period = 65535;
 658:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 659:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 660:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 13


 661:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 662:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 663:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 664:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 665:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 666:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 667:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 668:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 669:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 670:Core/Src/main.c ****   {
 671:Core/Src/main.c ****     Error_Handler();
 672:Core/Src/main.c ****   }
 673:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 674:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 675:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 676:Core/Src/main.c ****   {
 677:Core/Src/main.c ****     Error_Handler();
 678:Core/Src/main.c ****   }
 679:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 680:Core/Src/main.c **** 
 681:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 682:Core/Src/main.c **** 
 683:Core/Src/main.c **** }
 684:Core/Src/main.c **** 
 685:Core/Src/main.c **** /**
 686:Core/Src/main.c ****   * @brief USART2 Initialization Function
 687:Core/Src/main.c ****   * @param None
 688:Core/Src/main.c ****   * @retval None
 689:Core/Src/main.c ****   */
 690:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 691:Core/Src/main.c **** {
 692:Core/Src/main.c **** 
 693:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 694:Core/Src/main.c **** 
 695:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 696:Core/Src/main.c **** 
 697:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 698:Core/Src/main.c **** 
 699:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 700:Core/Src/main.c ****   huart2.Instance = USART2;
 701:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 702:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 703:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 704:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 705:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 706:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 707:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 708:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 709:Core/Src/main.c ****   {
 710:Core/Src/main.c ****     Error_Handler();
 711:Core/Src/main.c ****   }
 712:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 713:Core/Src/main.c **** 
 714:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 715:Core/Src/main.c **** 
 716:Core/Src/main.c **** }
 717:Core/Src/main.c **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 14


 718:Core/Src/main.c **** /**
 719:Core/Src/main.c ****   * @brief GPIO Initialization Function
 720:Core/Src/main.c ****   * @param None
 721:Core/Src/main.c ****   * @retval None
 722:Core/Src/main.c ****   */
 723:Core/Src/main.c **** static void MX_GPIO_Init(void)
 724:Core/Src/main.c **** {
  26              		.loc 1 724 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 725:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 725 3 view .LVU1
  43              		.loc 1 725 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 726:Core/Src/main.c **** 
 727:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 728:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  49              		.loc 1 728 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 728 3 view .LVU4
  52              		.loc 1 728 3 view .LVU5
  53 0010 2A4B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F02002 		orr	r2, r2, #32
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 728 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F02002 		and	r2, r2, #32
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 728 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE4:
  64              		.loc 1 728 3 view .LVU8
 729:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 729 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 729 3 view .LVU10
  68              		.loc 1 729 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00402 		orr	r2, r2, #4
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 15


  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 729 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F00402 		and	r2, r2, #4
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 729 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 729 3 view .LVU14
 730:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 730 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 730 3 view .LVU16
  83              		.loc 1 730 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00802 		orr	r2, r2, #8
  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 730 3 view .LVU18
  88 003e 9B69     		ldr	r3, [r3, #24]
  89 0040 03F00803 		and	r3, r3, #8
  90 0044 0393     		str	r3, [sp, #12]
  91              		.loc 1 730 3 view .LVU19
  92 0046 039B     		ldr	r3, [sp, #12]
  93              	.LBE6:
  94              		.loc 1 730 3 view .LVU20
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 733:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
  95              		.loc 1 733 3 view .LVU21
  96 0048 1D4D     		ldr	r5, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 3021     		movs	r1, #48
  99 004e 2846     		mov	r0, r5
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 736:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 102              		.loc 1 736 3 view .LVU22
 103 0054 1B4E     		ldr	r6, .L3+8
 104 0056 2246     		mov	r2, r4
 105 0058 4FF44071 		mov	r1, #768
 106 005c 3046     		mov	r0, r6
 107 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 737:Core/Src/main.c **** 
 738:Core/Src/main.c ****   /*Configure GPIO pins : PA4 PA5 */
 739:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 109              		.loc 1 739 3 view .LVU23
 110              		.loc 1 739 23 is_stmt 0 view .LVU24
 111 0062 3023     		movs	r3, #48
 112 0064 0493     		str	r3, [sp, #16]
 740:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 740 3 is_stmt 1 view .LVU25
 114              		.loc 1 740 24 is_stmt 0 view .LVU26
 115 0066 4FF00108 		mov	r8, #1
 116 006a CDF81480 		str	r8, [sp, #20]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 16


 741:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 741 3 is_stmt 1 view .LVU27
 118              		.loc 1 741 24 is_stmt 0 view .LVU28
 119 006e 0694     		str	r4, [sp, #24]
 742:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 742 3 is_stmt 1 view .LVU29
 121              		.loc 1 742 25 is_stmt 0 view .LVU30
 122 0070 0227     		movs	r7, #2
 123 0072 0797     		str	r7, [sp, #28]
 743:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 743 3 is_stmt 1 view .LVU31
 125 0074 04A9     		add	r1, sp, #16
 126 0076 2846     		mov	r0, r5
 127 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 744:Core/Src/main.c **** 
 745:Core/Src/main.c ****   /*Configure GPIO pins : PA10 PA11 PA12 */
 746:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 129              		.loc 1 746 3 view .LVU32
 130              		.loc 1 746 23 is_stmt 0 view .LVU33
 131 007c 4FF4E053 		mov	r3, #7168
 132 0080 0493     		str	r3, [sp, #16]
 747:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 133              		.loc 1 747 3 is_stmt 1 view .LVU34
 134              		.loc 1 747 24 is_stmt 0 view .LVU35
 135 0082 114B     		ldr	r3, .L3+12
 136 0084 0593     		str	r3, [sp, #20]
 748:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 137              		.loc 1 748 3 is_stmt 1 view .LVU36
 138              		.loc 1 748 24 is_stmt 0 view .LVU37
 139 0086 0694     		str	r4, [sp, #24]
 749:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 140              		.loc 1 749 3 is_stmt 1 view .LVU38
 141 0088 04A9     		add	r1, sp, #16
 142 008a 2846     		mov	r0, r5
 143 008c FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL3:
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /*Configure GPIO pins : PB8 PB9 */
 752:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 145              		.loc 1 752 3 view .LVU39
 146              		.loc 1 752 23 is_stmt 0 view .LVU40
 147 0090 4FF44073 		mov	r3, #768
 148 0094 0493     		str	r3, [sp, #16]
 753:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 149              		.loc 1 753 3 is_stmt 1 view .LVU41
 150              		.loc 1 753 24 is_stmt 0 view .LVU42
 151 0096 CDF81480 		str	r8, [sp, #20]
 754:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 754 3 is_stmt 1 view .LVU43
 153              		.loc 1 754 24 is_stmt 0 view .LVU44
 154 009a 0694     		str	r4, [sp, #24]
 755:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 155              		.loc 1 755 3 is_stmt 1 view .LVU45
 156              		.loc 1 755 25 is_stmt 0 view .LVU46
 157 009c 0797     		str	r7, [sp, #28]
 756:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 17


 158              		.loc 1 756 3 is_stmt 1 view .LVU47
 159 009e 04A9     		add	r1, sp, #16
 160 00a0 3046     		mov	r0, r6
 161 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 162              	.LVL4:
 757:Core/Src/main.c **** 
 758:Core/Src/main.c ****   /* EXTI interrupt init*/
 759:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 163              		.loc 1 759 3 view .LVU48
 164 00a6 2246     		mov	r2, r4
 165 00a8 2146     		mov	r1, r4
 166 00aa 2820     		movs	r0, #40
 167 00ac FFF7FEFF 		bl	HAL_NVIC_SetPriority
 168              	.LVL5:
 760:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 169              		.loc 1 760 3 view .LVU49
 170 00b0 2820     		movs	r0, #40
 171 00b2 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 172              	.LVL6:
 761:Core/Src/main.c **** 
 762:Core/Src/main.c **** }
 173              		.loc 1 762 1 is_stmt 0 view .LVU50
 174 00b6 08B0     		add	sp, sp, #32
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 24
 177              		@ sp needed
 178 00b8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 179              	.L4:
 180              		.align	2
 181              	.L3:
 182 00bc 00100240 		.word	1073876992
 183 00c0 00080140 		.word	1073809408
 184 00c4 000C0140 		.word	1073810432
 185 00c8 00002110 		.word	270598144
 186              		.cfi_endproc
 187              	.LFE79:
 189              		.section	.text.uart_clear_receive_buffer_and_start_receive_IT,"ax",%progbits
 190              		.align	1
 191              		.global	uart_clear_receive_buffer_and_start_receive_IT
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	uart_clear_receive_buffer_and_start_receive_IT:
 197              	.LFB68:
  70:Core/Src/main.c ****     // Đọc dữ liệu trong bộ nhận cho đến khi không còn dữ liệu trong buffer
 198              		.loc 1 70 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
  72:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 207              		.loc 1 72 5 view .LVU52
  72:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 18


 208              		.loc 1 72 11 is_stmt 0 view .LVU53
 209 0002 00E0     		b	.L6
 210              	.L7:
 211              	.LBB7:
  73:Core/Src/main.c ****     }
 212              		.loc 1 73 9 is_stmt 1 view .LVU54
  73:Core/Src/main.c ****     }
 213              		.loc 1 73 42 is_stmt 0 view .LVU55
 214 0004 5B68     		ldr	r3, [r3, #4]
 215              	.L6:
 216              	.LBE7:
  72:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 217              		.loc 1 72 11 is_stmt 1 view .LVU56
  72:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 218              		.loc 1 72 12 is_stmt 0 view .LVU57
 219 0006 084B     		ldr	r3, .L9
 220 0008 1B68     		ldr	r3, [r3]
 221 000a 1A68     		ldr	r2, [r3]
  72:Core/Src/main.c ****         char dummy_data = huart2.Instance->DR; // Đọc dữ liệu từ thanh ghi RDR để xóa 
 222              		.loc 1 72 11 view .LVU58
 223 000c 12F0200F 		tst	r2, #32
 224 0010 F8D1     		bne	.L7
  75:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.data.Receive, 1);
 225              		.loc 1 75 5 is_stmt 1 view .LVU59
  75:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart2, &cnc.data.Receive, 1);
 226              		.loc 1 75 20 is_stmt 0 view .LVU60
 227 0012 0649     		ldr	r1, .L9+4
 228 0014 0023     		movs	r3, #0
 229 0016 81F82D31 		strb	r3, [r1, #301]
  76:Core/Src/main.c **** }
 230              		.loc 1 76 5 is_stmt 1 view .LVU61
 231 001a 0122     		movs	r2, #1
 232 001c 01F59671 		add	r1, r1, #300
 233 0020 0148     		ldr	r0, .L9
 234 0022 FFF7FEFF 		bl	HAL_UART_Receive_IT
 235              	.LVL7:
  77:Core/Src/main.c **** 
 236              		.loc 1 77 1 is_stmt 0 view .LVU62
 237 0026 08BD     		pop	{r3, pc}
 238              	.L10:
 239              		.align	2
 240              	.L9:
 241 0028 00000000 		.word	.LANCHOR0
 242 002c 00000000 		.word	.LANCHOR1
 243              		.cfi_endproc
 244              	.LFE68:
 246              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 247              		.align	1
 248              		.global	HAL_GPIO_EXTI_Callback
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	HAL_GPIO_EXTI_Callback:
 254              	.LVL8:
 255              	.LFB69:
  80:Core/Src/main.c ****   UNUSED(GPIO_Pin);
 256              		.loc 1 80 1 is_stmt 1 view -0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 19


 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Core/Src/main.c ****   UNUSED(GPIO_Pin);
 260              		.loc 1 80 1 is_stmt 0 view .LVU64
 261 0000 38B5     		push	{r3, r4, r5, lr}
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 16
 264              		.cfi_offset 3, -16
 265              		.cfi_offset 4, -12
 266              		.cfi_offset 5, -8
 267              		.cfi_offset 14, -4
 268 0002 0446     		mov	r4, r0
  81:Core/Src/main.c **** 	// X Home
 269              		.loc 1 81 3 is_stmt 1 view .LVU65
  83:Core/Src/main.c **** 	{
 270              		.loc 1 83 2 view .LVU66
  83:Core/Src/main.c **** 	{
 271              		.loc 1 83 28 is_stmt 0 view .LVU67
 272 0004 184B     		ldr	r3, .L19
 273 0006 B3F84030 		ldrh	r3, [r3, #64]
  83:Core/Src/main.c **** 	{
 274              		.loc 1 83 4 view .LVU68
 275 000a 8342     		cmp	r3, r0
 276 000c 0AD0     		beq	.L16
 277              	.LVL9:
 278              	.L12:
  90:Core/Src/main.c **** 	{
 279              		.loc 1 90 2 is_stmt 1 view .LVU69
  90:Core/Src/main.c **** 	{
 280              		.loc 1 90 28 is_stmt 0 view .LVU70
 281 000e 164B     		ldr	r3, .L19
 282 0010 B3F89830 		ldrh	r3, [r3, #152]
  90:Core/Src/main.c **** 	{
 283              		.loc 1 90 4 view .LVU71
 284 0014 A342     		cmp	r3, r4
 285 0016 0FD0     		beq	.L17
 286              	.L13:
  97:Core/Src/main.c **** 	{
 287              		.loc 1 97 2 is_stmt 1 view .LVU72
  97:Core/Src/main.c **** 	{
 288              		.loc 1 97 28 is_stmt 0 view .LVU73
 289 0018 134B     		ldr	r3, .L19
 290 001a B3F8F030 		ldrh	r3, [r3, #240]
  97:Core/Src/main.c **** 	{
 291              		.loc 1 97 4 view .LVU74
 292 001e A342     		cmp	r3, r4
 293 0020 15D0     		beq	.L18
 294              	.L11:
 103:Core/Src/main.c **** 
 295              		.loc 1 103 1 view .LVU75
 296 0022 38BD     		pop	{r3, r4, r5, pc}
 297              	.LVL10:
 298              	.L16:
  85:Core/Src/main.c **** 		PWM(&cnc.x_axis);
 299              		.loc 1 85 3 is_stmt 1 view .LVU76
  85:Core/Src/main.c **** 		PWM(&cnc.x_axis);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 20


 300              		.loc 1 85 18 is_stmt 0 view .LVU77
 301 0024 104D     		ldr	r5, .L19
 302 0026 0023     		movs	r3, #0
 303 0028 EB61     		str	r3, [r5, #28]	@ float
  86:Core/Src/main.c **** 		cnc.x_axis.home = true;
 304              		.loc 1 86 3 is_stmt 1 view .LVU78
 305 002a 2846     		mov	r0, r5
 306              	.LVL11:
  86:Core/Src/main.c **** 		cnc.x_axis.home = true;
 307              		.loc 1 86 3 is_stmt 0 view .LVU79
 308 002c FFF7FEFF 		bl	PWM
 309              	.LVL12:
  87:Core/Src/main.c **** 	}
 310              		.loc 1 87 3 is_stmt 1 view .LVU80
  87:Core/Src/main.c **** 	}
 311              		.loc 1 87 19 is_stmt 0 view .LVU81
 312 0030 0123     		movs	r3, #1
 313 0032 85F84B30 		strb	r3, [r5, #75]
 314 0036 EAE7     		b	.L12
 315              	.L17:
  92:Core/Src/main.c **** 		PWM(&cnc.y_axis);
 316              		.loc 1 92 3 is_stmt 1 view .LVU82
  92:Core/Src/main.c **** 		PWM(&cnc.y_axis);
 317              		.loc 1 92 18 is_stmt 0 view .LVU83
 318 0038 0B4D     		ldr	r5, .L19
 319 003a 0023     		movs	r3, #0
 320 003c 6B67     		str	r3, [r5, #116]	@ float
  93:Core/Src/main.c **** 		cnc.y_axis.home = true;
 321              		.loc 1 93 3 is_stmt 1 view .LVU84
 322 003e 05F15800 		add	r0, r5, #88
 323 0042 FFF7FEFF 		bl	PWM
 324              	.LVL13:
  94:Core/Src/main.c **** 	}
 325              		.loc 1 94 3 view .LVU85
  94:Core/Src/main.c **** 	}
 326              		.loc 1 94 19 is_stmt 0 view .LVU86
 327 0046 0123     		movs	r3, #1
 328 0048 85F8A330 		strb	r3, [r5, #163]
 329 004c E4E7     		b	.L13
 330              	.L18:
  99:Core/Src/main.c **** 		PWM(&cnc.z_axis);
 331              		.loc 1 99 3 is_stmt 1 view .LVU87
  99:Core/Src/main.c **** 		PWM(&cnc.z_axis);
 332              		.loc 1 99 18 is_stmt 0 view .LVU88
 333 004e 064C     		ldr	r4, .L19
 334 0050 0023     		movs	r3, #0
 335 0052 C4F8CC30 		str	r3, [r4, #204]	@ float
 100:Core/Src/main.c **** 		cnc.z_axis.home = true;
 336              		.loc 1 100 3 is_stmt 1 view .LVU89
 337 0056 04F1B000 		add	r0, r4, #176
 338 005a FFF7FEFF 		bl	PWM
 339              	.LVL14:
 101:Core/Src/main.c **** 	}
 340              		.loc 1 101 3 view .LVU90
 101:Core/Src/main.c **** 	}
 341              		.loc 1 101 19 is_stmt 0 view .LVU91
 342 005e 0123     		movs	r3, #1
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 21


 343 0060 84F8FB30 		strb	r3, [r4, #251]
 103:Core/Src/main.c **** 
 344              		.loc 1 103 1 view .LVU92
 345 0064 DDE7     		b	.L11
 346              	.L20:
 347 0066 00BF     		.align	2
 348              	.L19:
 349 0068 00000000 		.word	.LANCHOR1
 350              		.cfi_endproc
 351              	.LFE69:
 353              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_UART_RxCpltCallback
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	HAL_UART_RxCpltCallback:
 361              	.LVL15:
 362              	.LFB70:
 106:Core/Src/main.c ****   UNUSED(huart);
 363              		.loc 1 106 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 106:Core/Src/main.c ****   UNUSED(huart);
 367              		.loc 1 106 1 is_stmt 0 view .LVU94
 368 0000 08B5     		push	{r3, lr}
 369              	.LCFI5:
 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 107:Core/Src/main.c **** 	if(huart->Instance == huart2.Instance)
 373              		.loc 1 107 3 is_stmt 1 view .LVU95
 108:Core/Src/main.c **** 	{
 374              		.loc 1 108 2 view .LVU96
 108:Core/Src/main.c **** 	{
 375              		.loc 1 108 10 is_stmt 0 view .LVU97
 376 0002 0268     		ldr	r2, [r0]
 108:Core/Src/main.c **** 	{
 377              		.loc 1 108 30 view .LVU98
 378 0004 124B     		ldr	r3, .L28
 379 0006 1B68     		ldr	r3, [r3]
 108:Core/Src/main.c **** 	{
 380              		.loc 1 108 4 view .LVU99
 381 0008 9A42     		cmp	r2, r3
 382 000a 00D0     		beq	.L26
 383              	.LVL16:
 384              	.L21:
 123:Core/Src/main.c **** 
 385              		.loc 1 123 1 view .LVU100
 386 000c 08BD     		pop	{r3, pc}
 387              	.LVL17:
 388              	.L26:
 110:Core/Src/main.c **** 		{
 389              		.loc 1 110 3 is_stmt 1 view .LVU101
 110:Core/Src/main.c **** 		{
 390              		.loc 1 110 15 is_stmt 0 view .LVU102
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 22


 391 000e 114B     		ldr	r3, .L28+4
 392 0010 93F82C31 		ldrb	r3, [r3, #300]	@ zero_extendqisi2
 110:Core/Src/main.c **** 		{
 393              		.loc 1 110 5 view .LVU103
 394 0014 212B     		cmp	r3, #33
 395 0016 0AD0     		beq	.L23
 110:Core/Src/main.c **** 		{
 396              		.loc 1 110 32 discriminator 1 view .LVU104
 397 0018 4BB1     		cbz	r3, .L23
 112:Core/Src/main.c **** 		}
 398              		.loc 1 112 4 is_stmt 1 view .LVU105
 112:Core/Src/main.c **** 		}
 399              		.loc 1 112 33 is_stmt 0 view .LVU106
 400 001a 0E4A     		ldr	r2, .L28+4
 401 001c 92F82D11 		ldrb	r1, [r2, #301]	@ zero_extendqisi2
 112:Core/Src/main.c **** 		}
 402              		.loc 1 112 39 view .LVU107
 403 0020 481C     		adds	r0, r1, #1
 404              	.LVL18:
 112:Core/Src/main.c **** 		}
 405              		.loc 1 112 39 view .LVU108
 406 0022 82F82D01 		strb	r0, [r2, #301]
 112:Core/Src/main.c **** 		}
 407              		.loc 1 112 43 view .LVU109
 408 0026 0A44     		add	r2, r2, r1
 409 0028 82F84231 		strb	r3, [r2, #322]
 410 002c 01E0     		b	.L24
 411              	.LVL19:
 412              	.L23:
 114:Core/Src/main.c **** 		{
 413              		.loc 1 114 8 is_stmt 1 view .LVU110
 114:Core/Src/main.c **** 		{
 414              		.loc 1 114 11 is_stmt 0 view .LVU111
 415 002e 212B     		cmp	r3, #33
 416 0030 05D0     		beq	.L27
 417              	.LVL20:
 418              	.L24:
 121:Core/Src/main.c **** 	}
 419              		.loc 1 121 3 is_stmt 1 view .LVU112
 420 0032 0122     		movs	r2, #1
 421 0034 0849     		ldr	r1, .L28+8
 422 0036 0648     		ldr	r0, .L28
 423 0038 FFF7FEFF 		bl	HAL_UART_Receive_IT
 424              	.LVL21:
 123:Core/Src/main.c **** 
 425              		.loc 1 123 1 is_stmt 0 view .LVU113
 426 003c E6E7     		b	.L21
 427              	.LVL22:
 428              	.L27:
 116:Core/Src/main.c **** 			//ProcessData(&cnc);	
 429              		.loc 1 116 4 is_stmt 1 view .LVU114
 116:Core/Src/main.c **** 			//ProcessData(&cnc);	
 430              		.loc 1 116 19 is_stmt 0 view .LVU115
 431 003e 054B     		ldr	r3, .L28+4
 432 0040 0022     		movs	r2, #0
 433 0042 83F82D21 		strb	r2, [r3, #301]
 118:Core/Src/main.c ****       //return;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 23


 434              		.loc 1 118 7 is_stmt 1 view .LVU116
 118:Core/Src/main.c ****       //return;
 435              		.loc 1 118 16 is_stmt 0 view .LVU117
 436 0046 0622     		movs	r2, #6
 437 0048 83F80821 		strb	r2, [r3, #264]
 438 004c F1E7     		b	.L24
 439              	.L29:
 440 004e 00BF     		.align	2
 441              	.L28:
 442 0050 00000000 		.word	.LANCHOR0
 443 0054 00000000 		.word	.LANCHOR1
 444 0058 2C010000 		.word	.LANCHOR1+300
 445              		.cfi_endproc
 446              	.LFE70:
 448              		.section	.text.axisInit,"ax",%progbits
 449              		.align	1
 450              		.global	axisInit
 451              		.syntax unified
 452              		.thumb
 453              		.thumb_func
 455              	axisInit:
 456              	.LFB71:
 126:Core/Src/main.c **** 	cnc.x_axis.htim_motor = &htim3;
 457              		.loc 1 126 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 127:Core/Src/main.c **** 	cnc.y_axis.htim_motor = &htim3;
 462              		.loc 1 127 2 view .LVU119
 127:Core/Src/main.c **** 	cnc.y_axis.htim_motor = &htim3;
 463              		.loc 1 127 24 is_stmt 0 view .LVU120
 464 0000 3F4B     		ldr	r3, .L31
 465 0002 404A     		ldr	r2, .L31+4
 466 0004 DA62     		str	r2, [r3, #44]
 128:Core/Src/main.c **** 	cnc.z_axis.htim_motor = &htim3;
 467              		.loc 1 128 2 is_stmt 1 view .LVU121
 128:Core/Src/main.c **** 	cnc.z_axis.htim_motor = &htim3;
 468              		.loc 1 128 24 is_stmt 0 view .LVU122
 469 0006 C3F88420 		str	r2, [r3, #132]
 129:Core/Src/main.c ****   cnc.drill.htim_motor = &htim3;
 470              		.loc 1 129 2 is_stmt 1 view .LVU123
 129:Core/Src/main.c ****   cnc.drill.htim_motor = &htim3;
 471              		.loc 1 129 24 is_stmt 0 view .LVU124
 472 000a C3F8DC20 		str	r2, [r3, #220]
 130:Core/Src/main.c **** 	
 473              		.loc 1 130 3 is_stmt 1 view .LVU125
 130:Core/Src/main.c **** 	
 474              		.loc 1 130 24 is_stmt 0 view .LVU126
 475 000e C3F81C21 		str	r2, [r3, #284]
 136:Core/Src/main.c ****   cnc.y_axis.enc = &htim2.Instance->CNT;
 476              		.loc 1 136 3 is_stmt 1 view .LVU127
 136:Core/Src/main.c ****   cnc.y_axis.enc = &htim2.Instance->CNT;
 477              		.loc 1 136 26 is_stmt 0 view .LVU128
 478 0012 3D4A     		ldr	r2, .L31+8
 479 0014 1268     		ldr	r2, [r2]
 136:Core/Src/main.c ****   cnc.y_axis.enc = &htim2.Instance->CNT;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 24


 480              		.loc 1 136 20 view .LVU129
 481 0016 2432     		adds	r2, r2, #36
 136:Core/Src/main.c ****   cnc.y_axis.enc = &htim2.Instance->CNT;
 482              		.loc 1 136 18 view .LVU130
 483 0018 9A62     		str	r2, [r3, #40]
 137:Core/Src/main.c ****   cnc.z_axis.enc = &htim1.Instance->CNT;
 484              		.loc 1 137 3 is_stmt 1 view .LVU131
 137:Core/Src/main.c ****   cnc.z_axis.enc = &htim1.Instance->CNT;
 485              		.loc 1 137 26 is_stmt 0 view .LVU132
 486 001a 3C4A     		ldr	r2, .L31+12
 487 001c 1268     		ldr	r2, [r2]
 137:Core/Src/main.c ****   cnc.z_axis.enc = &htim1.Instance->CNT;
 488              		.loc 1 137 20 view .LVU133
 489 001e 2432     		adds	r2, r2, #36
 137:Core/Src/main.c ****   cnc.z_axis.enc = &htim1.Instance->CNT;
 490              		.loc 1 137 18 view .LVU134
 491 0020 C3F88020 		str	r2, [r3, #128]
 138:Core/Src/main.c **** 	
 492              		.loc 1 138 3 is_stmt 1 view .LVU135
 138:Core/Src/main.c **** 	
 493              		.loc 1 138 26 is_stmt 0 view .LVU136
 494 0024 3A4A     		ldr	r2, .L31+16
 495 0026 1268     		ldr	r2, [r2]
 138:Core/Src/main.c **** 	
 496              		.loc 1 138 20 view .LVU137
 497 0028 2432     		adds	r2, r2, #36
 138:Core/Src/main.c **** 	
 498              		.loc 1 138 18 view .LVU138
 499 002a C3F8D820 		str	r2, [r3, #216]
 140:Core/Src/main.c **** 	cnc.y_axis.GPIO_DIR = GPIOB;
 500              		.loc 1 140 2 is_stmt 1 view .LVU139
 140:Core/Src/main.c **** 	cnc.y_axis.GPIO_DIR = GPIOB;
 501              		.loc 1 140 22 is_stmt 0 view .LVU140
 502 002e 394A     		ldr	r2, .L31+20
 503 0030 5A63     		str	r2, [r3, #52]
 141:Core/Src/main.c **** 	cnc.z_axis.GPIO_DIR = GPIOA;
 504              		.loc 1 141 2 is_stmt 1 view .LVU141
 141:Core/Src/main.c **** 	cnc.z_axis.GPIO_DIR = GPIOA;
 505              		.loc 1 141 22 is_stmt 0 view .LVU142
 506 0032 C3F88C20 		str	r2, [r3, #140]
 142:Core/Src/main.c ****   cnc.drill.GPIO_DIR = GPIOA;
 507              		.loc 1 142 2 is_stmt 1 view .LVU143
 142:Core/Src/main.c ****   cnc.drill.GPIO_DIR = GPIOA;
 508              		.loc 1 142 22 is_stmt 0 view .LVU144
 509 0036 A2F58062 		sub	r2, r2, #1024
 510 003a C3F8E420 		str	r2, [r3, #228]
 143:Core/Src/main.c **** 	
 511              		.loc 1 143 3 is_stmt 1 view .LVU145
 143:Core/Src/main.c **** 	
 512              		.loc 1 143 22 is_stmt 0 view .LVU146
 513 003e C3F82421 		str	r2, [r3, #292]
 145:Core/Src/main.c **** 	cnc.y_axis.PIN_DIR = GPIO_PIN_9;
 514              		.loc 1 145 2 is_stmt 1 view .LVU147
 145:Core/Src/main.c **** 	cnc.y_axis.PIN_DIR = GPIO_PIN_9;
 515              		.loc 1 145 21 is_stmt 0 view .LVU148
 516 0042 4FF48071 		mov	r1, #256
 517 0046 1987     		strh	r1, [r3, #56]	@ movhi
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 25


 146:Core/Src/main.c **** 	cnc.z_axis.PIN_DIR = GPIO_PIN_5;
 518              		.loc 1 146 2 is_stmt 1 view .LVU149
 146:Core/Src/main.c **** 	cnc.z_axis.PIN_DIR = GPIO_PIN_5;
 519              		.loc 1 146 21 is_stmt 0 view .LVU150
 520 0048 4FF40071 		mov	r1, #512
 521 004c A3F89010 		strh	r1, [r3, #144]	@ movhi
 147:Core/Src/main.c ****   cnc.drill.PIN_DIR = GPIO_PIN_4;
 522              		.loc 1 147 2 is_stmt 1 view .LVU151
 147:Core/Src/main.c ****   cnc.drill.PIN_DIR = GPIO_PIN_4;
 523              		.loc 1 147 21 is_stmt 0 view .LVU152
 524 0050 2021     		movs	r1, #32
 525 0052 A3F8E810 		strh	r1, [r3, #232]	@ movhi
 148:Core/Src/main.c **** 	
 526              		.loc 1 148 3 is_stmt 1 view .LVU153
 148:Core/Src/main.c **** 	
 527              		.loc 1 148 21 is_stmt 0 view .LVU154
 528 0056 1021     		movs	r1, #16
 529 0058 A3F82811 		strh	r1, [r3, #296]	@ movhi
 150:Core/Src/main.c **** 	cnc.y_axis.CHANNEL = TIM_CHANNEL_4;
 530              		.loc 1 150 2 is_stmt 1 view .LVU155
 150:Core/Src/main.c **** 	cnc.y_axis.CHANNEL = TIM_CHANNEL_4;
 531              		.loc 1 150 21 is_stmt 0 view .LVU156
 532 005c 0821     		movs	r1, #8
 533 005e 1963     		str	r1, [r3, #48]
 151:Core/Src/main.c **** 	cnc.z_axis.CHANNEL = TIM_CHANNEL_2;
 534              		.loc 1 151 2 is_stmt 1 view .LVU157
 151:Core/Src/main.c **** 	cnc.z_axis.CHANNEL = TIM_CHANNEL_2;
 535              		.loc 1 151 21 is_stmt 0 view .LVU158
 536 0060 0C21     		movs	r1, #12
 537 0062 C3F88810 		str	r1, [r3, #136]
 152:Core/Src/main.c ****   cnc.drill.CHANNEL = TIM_CHANNEL_1;
 538              		.loc 1 152 2 is_stmt 1 view .LVU159
 152:Core/Src/main.c ****   cnc.drill.CHANNEL = TIM_CHANNEL_1;
 539              		.loc 1 152 21 is_stmt 0 view .LVU160
 540 0066 0421     		movs	r1, #4
 541 0068 C3F8E010 		str	r1, [r3, #224]
 153:Core/Src/main.c **** 	
 542              		.loc 1 153 3 is_stmt 1 view .LVU161
 153:Core/Src/main.c **** 	
 543              		.loc 1 153 21 is_stmt 0 view .LVU162
 544 006c 0020     		movs	r0, #0
 545 006e C3F82001 		str	r0, [r3, #288]
 155:Core/Src/main.c **** 	cnc.y_axis.GPIO_HOME = GPIOA;
 546              		.loc 1 155 2 is_stmt 1 view .LVU163
 155:Core/Src/main.c **** 	cnc.y_axis.GPIO_HOME = GPIOA;
 547              		.loc 1 155 23 is_stmt 0 view .LVU164
 548 0072 DA63     		str	r2, [r3, #60]
 156:Core/Src/main.c **** 	cnc.z_axis.GPIO_HOME = GPIOA;
 549              		.loc 1 156 2 is_stmt 1 view .LVU165
 156:Core/Src/main.c **** 	cnc.z_axis.GPIO_HOME = GPIOA;
 550              		.loc 1 156 23 is_stmt 0 view .LVU166
 551 0074 C3F89420 		str	r2, [r3, #148]
 157:Core/Src/main.c **** 	
 552              		.loc 1 157 2 is_stmt 1 view .LVU167
 157:Core/Src/main.c **** 	
 553              		.loc 1 157 23 is_stmt 0 view .LVU168
 554 0078 C3F8EC20 		str	r2, [r3, #236]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 26


 159:Core/Src/main.c **** 	cnc.y_axis.PIN_HOME = GPIO_PIN_11;
 555              		.loc 1 159 2 is_stmt 1 view .LVU169
 159:Core/Src/main.c **** 	cnc.y_axis.PIN_HOME = GPIO_PIN_11;
 556              		.loc 1 159 22 is_stmt 0 view .LVU170
 557 007c 4FF48052 		mov	r2, #4096
 558 0080 A3F84020 		strh	r2, [r3, #64]	@ movhi
 160:Core/Src/main.c **** 	cnc.z_axis.PIN_HOME = GPIO_PIN_10;
 559              		.loc 1 160 2 is_stmt 1 view .LVU171
 160:Core/Src/main.c **** 	cnc.z_axis.PIN_HOME = GPIO_PIN_10;
 560              		.loc 1 160 22 is_stmt 0 view .LVU172
 561 0084 4FF40062 		mov	r2, #2048
 562 0088 A3F89820 		strh	r2, [r3, #152]	@ movhi
 161:Core/Src/main.c **** 	
 563              		.loc 1 161 2 is_stmt 1 view .LVU173
 161:Core/Src/main.c **** 	
 564              		.loc 1 161 22 is_stmt 0 view .LVU174
 565 008c 4FF48062 		mov	r2, #1024
 566 0090 A3F8F020 		strh	r2, [r3, #240]	@ movhi
 163:Core/Src/main.c **** 	cnc.y_axis.Kp = 27;
 567              		.loc 1 163 2 is_stmt 1 view .LVU175
 163:Core/Src/main.c **** 	cnc.y_axis.Kp = 27;
 568              		.loc 1 163 16 is_stmt 0 view .LVU176
 569 0094 204A     		ldr	r2, .L31+24
 570 0096 1A60     		str	r2, [r3]	@ float
 164:Core/Src/main.c **** 	cnc.z_axis.Kp = 15;
 571              		.loc 1 164 2 is_stmt 1 view .LVU177
 164:Core/Src/main.c **** 	cnc.z_axis.Kp = 15;
 572              		.loc 1 164 16 is_stmt 0 view .LVU178
 573 0098 204A     		ldr	r2, .L31+28
 574 009a 9A65     		str	r2, [r3, #88]	@ float
 165:Core/Src/main.c **** 	
 575              		.loc 1 165 2 is_stmt 1 view .LVU179
 165:Core/Src/main.c **** 	
 576              		.loc 1 165 16 is_stmt 0 view .LVU180
 577 009c 204A     		ldr	r2, .L31+32
 578 009e C3F8B020 		str	r2, [r3, #176]	@ float
 167:Core/Src/main.c **** 	cnc.y_axis.Ki = 0.0001;
 579              		.loc 1 167 2 is_stmt 1 view .LVU181
 167:Core/Src/main.c **** 	cnc.y_axis.Ki = 0.0001;
 580              		.loc 1 167 16 is_stmt 0 view .LVU182
 581 00a2 204A     		ldr	r2, .L31+36
 582 00a4 5A60     		str	r2, [r3, #4]	@ float
 168:Core/Src/main.c **** 	cnc.z_axis.Ki = 0.0001;
 583              		.loc 1 168 2 is_stmt 1 view .LVU183
 168:Core/Src/main.c **** 	cnc.z_axis.Ki = 0.0001;
 584              		.loc 1 168 16 is_stmt 0 view .LVU184
 585 00a6 DA65     		str	r2, [r3, #92]	@ float
 169:Core/Src/main.c **** 	
 586              		.loc 1 169 2 is_stmt 1 view .LVU185
 169:Core/Src/main.c **** 	
 587              		.loc 1 169 16 is_stmt 0 view .LVU186
 588 00a8 C3F8B420 		str	r2, [r3, #180]	@ float
 171:Core/Src/main.c **** 	cnc.y_axis.Kd = 3;
 589              		.loc 1 171 2 is_stmt 1 view .LVU187
 171:Core/Src/main.c **** 	cnc.y_axis.Kd = 3;
 590              		.loc 1 171 16 is_stmt 0 view .LVU188
 591 00ac 4FF08042 		mov	r2, #1073741824
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 27


 592 00b0 9A60     		str	r2, [r3, #8]	@ float
 172:Core/Src/main.c **** 	cnc.z_axis.Kd = 10;
 593              		.loc 1 172 2 is_stmt 1 view .LVU189
 172:Core/Src/main.c **** 	cnc.z_axis.Kd = 10;
 594              		.loc 1 172 16 is_stmt 0 view .LVU190
 595 00b2 1D4A     		ldr	r2, .L31+40
 596 00b4 1A66     		str	r2, [r3, #96]	@ float
 173:Core/Src/main.c **** 	
 597              		.loc 1 173 2 is_stmt 1 view .LVU191
 173:Core/Src/main.c **** 	
 598              		.loc 1 173 16 is_stmt 0 view .LVU192
 599 00b6 1D4A     		ldr	r2, .L31+44
 600 00b8 C3F8B820 		str	r2, [r3, #184]	@ float
 175:Core/Src/main.c **** 	cnc.y_axis.mm_pulse = 495.1475;//333.3333;
 601              		.loc 1 175 2 is_stmt 1 view .LVU193
 175:Core/Src/main.c **** 	cnc.y_axis.mm_pulse = 495.1475;//333.3333;
 602              		.loc 1 175 22 is_stmt 0 view .LVU194
 603 00bc 1C4A     		ldr	r2, .L31+48
 604 00be 5A64     		str	r2, [r3, #68]	@ float
 176:Core/Src/main.c **** 	cnc.z_axis.mm_pulse = 500;
 605              		.loc 1 176 2 is_stmt 1 view .LVU195
 176:Core/Src/main.c **** 	cnc.z_axis.mm_pulse = 500;
 606              		.loc 1 176 22 is_stmt 0 view .LVU196
 607 00c0 1C4A     		ldr	r2, .L31+52
 608 00c2 C3F89C20 		str	r2, [r3, #156]	@ float
 177:Core/Src/main.c **** 
 609              		.loc 1 177 2 is_stmt 1 view .LVU197
 177:Core/Src/main.c **** 
 610              		.loc 1 177 22 is_stmt 0 view .LVU198
 611 00c6 1C4A     		ldr	r2, .L31+56
 612 00c8 C3F8F420 		str	r2, [r3, #244]	@ float
 179:Core/Src/main.c ****   cnc.y_axis.ERROR = 4;
 613              		.loc 1 179 3 is_stmt 1 view .LVU199
 179:Core/Src/main.c ****   cnc.y_axis.ERROR = 4;
 614              		.loc 1 179 20 is_stmt 0 view .LVU200
 615 00cc 0222     		movs	r2, #2
 616 00ce 83F85420 		strb	r2, [r3, #84]
 180:Core/Src/main.c ****   cnc.z_axis.ERROR = 1;
 617              		.loc 1 180 3 is_stmt 1 view .LVU201
 180:Core/Src/main.c ****   cnc.z_axis.ERROR = 1;
 618              		.loc 1 180 20 is_stmt 0 view .LVU202
 619 00d2 83F8AC10 		strb	r1, [r3, #172]
 181:Core/Src/main.c **** 
 620              		.loc 1 181 3 is_stmt 1 view .LVU203
 181:Core/Src/main.c **** 
 621              		.loc 1 181 20 is_stmt 0 view .LVU204
 622 00d6 0122     		movs	r2, #1
 623 00d8 83F80421 		strb	r2, [r3, #260]
 183:Core/Src/main.c ****   cnc.y_axis.speed = MAX_SPEED;
 624              		.loc 1 183 3 is_stmt 1 view .LVU205
 183:Core/Src/main.c ****   cnc.y_axis.speed = MAX_SPEED;
 625              		.loc 1 183 20 is_stmt 0 view .LVU206
 626 00dc 3C22     		movs	r2, #60
 627 00de 5A62     		str	r2, [r3, #36]
 184:Core/Src/main.c ****   cnc.z_axis.speed = MAX_SPEED;
 628              		.loc 1 184 3 is_stmt 1 view .LVU207
 184:Core/Src/main.c ****   cnc.z_axis.speed = MAX_SPEED;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 28


 629              		.loc 1 184 20 is_stmt 0 view .LVU208
 630 00e0 DA67     		str	r2, [r3, #124]
 185:Core/Src/main.c **** 
 631              		.loc 1 185 3 is_stmt 1 view .LVU209
 185:Core/Src/main.c **** 
 632              		.loc 1 185 20 is_stmt 0 view .LVU210
 633 00e2 C3F8D420 		str	r2, [r3, #212]
 187:Core/Src/main.c ****   cnc.step = STEP;
 634              		.loc 1 187 3 is_stmt 1 view .LVU211
 187:Core/Src/main.c ****   cnc.step = STEP;
 635              		.loc 1 187 13 is_stmt 0 view .LVU212
 636 00e6 1549     		ldr	r1, .L31+60
 637 00e8 C3F81011 		str	r1, [r3, #272]	@ float
 188:Core/Src/main.c ****   cnc.thickness = 1;
 638              		.loc 1 188 3 is_stmt 1 view .LVU213
 188:Core/Src/main.c ****   cnc.thickness = 1;
 639              		.loc 1 188 12 is_stmt 0 view .LVU214
 640 00ec 1449     		ldr	r1, .L31+64
 641 00ee C3F80C11 		str	r1, [r3, #268]	@ float
 189:Core/Src/main.c ****   cnc.speed = MAX_SPEED;
 642              		.loc 1 189 3 is_stmt 1 view .LVU215
 189:Core/Src/main.c ****   cnc.speed = MAX_SPEED;
 643              		.loc 1 189 17 is_stmt 0 view .LVU216
 644 00f2 4FF07E51 		mov	r1, #1065353216
 645 00f6 C3F81411 		str	r1, [r3, #276]	@ float
 190:Core/Src/main.c **** }
 646              		.loc 1 190 3 is_stmt 1 view .LVU217
 190:Core/Src/main.c **** }
 647              		.loc 1 190 13 is_stmt 0 view .LVU218
 648 00fa 83F81821 		strb	r2, [r3, #280]
 191:Core/Src/main.c **** /* USER CODE END 0 */
 649              		.loc 1 191 1 view .LVU219
 650 00fe 7047     		bx	lr
 651              	.L32:
 652              		.align	2
 653              	.L31:
 654 0100 00000000 		.word	.LANCHOR1
 655 0104 00000000 		.word	.LANCHOR2
 656 0108 00000000 		.word	.LANCHOR3
 657 010c 00000000 		.word	.LANCHOR4
 658 0110 00000000 		.word	.LANCHOR5
 659 0114 000C0140 		.word	1073810432
 660 0118 0000B041 		.word	1102053376
 661 011c 0000D841 		.word	1104674816
 662 0120 00007041 		.word	1097859072
 663 0124 17B7D138 		.word	953267991
 664 0128 00004040 		.word	1077936128
 665 012c 00002041 		.word	1092616192
 666 0130 7BE37943 		.word	1132061563
 667 0134 E192F743 		.word	1140298465
 668 0138 0000FA43 		.word	1140457472
 669 013c 00003041 		.word	1093664768
 670 0140 0AD7233C 		.word	1008981770
 671              		.cfi_endproc
 672              	.LFE71:
 674              		.section	.text.Error_Handler,"ax",%progbits
 675              		.align	1
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 29


 676              		.global	Error_Handler
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 681              	Error_Handler:
 682              	.LFB80:
 763:Core/Src/main.c **** 
 764:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 765:Core/Src/main.c **** 
 766:Core/Src/main.c **** /* USER CODE END 4 */
 767:Core/Src/main.c **** 
 768:Core/Src/main.c **** /**
 769:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 770:Core/Src/main.c ****   * @retval None
 771:Core/Src/main.c ****   */
 772:Core/Src/main.c **** void Error_Handler(void)
 773:Core/Src/main.c **** {
 683              		.loc 1 773 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ Volatile: function does not return.
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 774:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 775:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 776:Core/Src/main.c ****   __disable_irq();
 689              		.loc 1 776 3 view .LVU221
 690              	.LBB8:
 691              	.LBI8:
 692              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 30


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 31


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 693              		.loc 2 140 27 view .LVU222
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 32


 694              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 695              		.loc 2 142 3 view .LVU223
 696              		.syntax unified
 697              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 698 0000 72B6     		cpsid i
 699              	@ 0 "" 2
 700              		.thumb
 701              		.syntax unified
 702              	.L34:
 703              	.LBE9:
 704              	.LBE8:
 777:Core/Src/main.c ****   while (1)
 705              		.loc 1 777 3 discriminator 1 view .LVU224
 778:Core/Src/main.c ****   {
 779:Core/Src/main.c ****   }
 706              		.loc 1 779 3 discriminator 1 view .LVU225
 777:Core/Src/main.c ****   while (1)
 707              		.loc 1 777 9 discriminator 1 view .LVU226
 708 0002 FEE7     		b	.L34
 709              		.cfi_endproc
 710              	.LFE80:
 712              		.section	.text.MX_TIM1_Init,"ax",%progbits
 713              		.align	1
 714              		.syntax unified
 715              		.thumb
 716              		.thumb_func
 718              	MX_TIM1_Init:
 719              	.LFB74:
 472:Core/Src/main.c **** 
 720              		.loc 1 472 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 48
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724 0000 00B5     		push	{lr}
 725              	.LCFI6:
 726              		.cfi_def_cfa_offset 4
 727              		.cfi_offset 14, -4
 728 0002 8DB0     		sub	sp, sp, #52
 729              	.LCFI7:
 730              		.cfi_def_cfa_offset 56
 478:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 731              		.loc 1 478 3 view .LVU228
 478:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 732              		.loc 1 478 27 is_stmt 0 view .LVU229
 733 0004 2422     		movs	r2, #36
 734 0006 0021     		movs	r1, #0
 735 0008 03A8     		add	r0, sp, #12
 736 000a FFF7FEFF 		bl	memset
 737              	.LVL23:
 479:Core/Src/main.c **** 
 738              		.loc 1 479 3 is_stmt 1 view .LVU230
 479:Core/Src/main.c **** 
 739              		.loc 1 479 27 is_stmt 0 view .LVU231
 740 000e 0023     		movs	r3, #0
 741 0010 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 33


 742 0012 0293     		str	r3, [sp, #8]
 484:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 743              		.loc 1 484 3 is_stmt 1 view .LVU232
 484:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 744              		.loc 1 484 18 is_stmt 0 view .LVU233
 745 0014 1148     		ldr	r0, .L41
 746 0016 124A     		ldr	r2, .L41+4
 747 0018 0260     		str	r2, [r0]
 485:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 748              		.loc 1 485 3 is_stmt 1 view .LVU234
 485:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 749              		.loc 1 485 24 is_stmt 0 view .LVU235
 750 001a 4360     		str	r3, [r0, #4]
 486:Core/Src/main.c ****   htim1.Init.Period = 65535;
 751              		.loc 1 486 3 is_stmt 1 view .LVU236
 486:Core/Src/main.c ****   htim1.Init.Period = 65535;
 752              		.loc 1 486 26 is_stmt 0 view .LVU237
 753 001c 8360     		str	r3, [r0, #8]
 487:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 754              		.loc 1 487 3 is_stmt 1 view .LVU238
 487:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 755              		.loc 1 487 21 is_stmt 0 view .LVU239
 756 001e 4FF6FF72 		movw	r2, #65535
 757 0022 C260     		str	r2, [r0, #12]
 488:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 758              		.loc 1 488 3 is_stmt 1 view .LVU240
 488:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 759              		.loc 1 488 28 is_stmt 0 view .LVU241
 760 0024 0361     		str	r3, [r0, #16]
 489:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 761              		.loc 1 489 3 is_stmt 1 view .LVU242
 489:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 762              		.loc 1 489 32 is_stmt 0 view .LVU243
 763 0026 4361     		str	r3, [r0, #20]
 490:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 764              		.loc 1 490 3 is_stmt 1 view .LVU244
 490:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 765              		.loc 1 490 32 is_stmt 0 view .LVU245
 766 0028 8361     		str	r3, [r0, #24]
 491:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 767              		.loc 1 491 3 is_stmt 1 view .LVU246
 491:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 768              		.loc 1 491 23 is_stmt 0 view .LVU247
 769 002a 0323     		movs	r3, #3
 770 002c 0393     		str	r3, [sp, #12]
 492:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 771              		.loc 1 492 3 is_stmt 1 view .LVU248
 493:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 772              		.loc 1 493 3 view .LVU249
 493:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 773              		.loc 1 493 24 is_stmt 0 view .LVU250
 774 002e 0123     		movs	r3, #1
 775 0030 0593     		str	r3, [sp, #20]
 494:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 776              		.loc 1 494 3 is_stmt 1 view .LVU251
 495:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 777              		.loc 1 495 3 view .LVU252
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 34


 496:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 778              		.loc 1 496 3 view .LVU253
 497:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 779              		.loc 1 497 3 view .LVU254
 497:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 780              		.loc 1 497 24 is_stmt 0 view .LVU255
 781 0032 0993     		str	r3, [sp, #36]
 498:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 782              		.loc 1 498 3 is_stmt 1 view .LVU256
 499:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim1, &sConfig) != HAL_OK)
 783              		.loc 1 499 3 view .LVU257
 500:Core/Src/main.c ****   {
 784              		.loc 1 500 3 view .LVU258
 500:Core/Src/main.c ****   {
 785              		.loc 1 500 7 is_stmt 0 view .LVU259
 786 0034 03A9     		add	r1, sp, #12
 787 0036 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 788              	.LVL24:
 500:Core/Src/main.c ****   {
 789              		.loc 1 500 6 view .LVU260
 790 003a 50B9     		cbnz	r0, .L39
 504:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 791              		.loc 1 504 3 is_stmt 1 view .LVU261
 504:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 792              		.loc 1 504 37 is_stmt 0 view .LVU262
 793 003c 0023     		movs	r3, #0
 794 003e 0193     		str	r3, [sp, #4]
 505:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 795              		.loc 1 505 3 is_stmt 1 view .LVU263
 505:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 796              		.loc 1 505 33 is_stmt 0 view .LVU264
 797 0040 0293     		str	r3, [sp, #8]
 506:Core/Src/main.c ****   {
 798              		.loc 1 506 3 is_stmt 1 view .LVU265
 506:Core/Src/main.c ****   {
 799              		.loc 1 506 7 is_stmt 0 view .LVU266
 800 0042 01A9     		add	r1, sp, #4
 801 0044 0548     		ldr	r0, .L41
 802 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 803              	.LVL25:
 506:Core/Src/main.c ****   {
 804              		.loc 1 506 6 view .LVU267
 805 004a 20B9     		cbnz	r0, .L40
 514:Core/Src/main.c **** 
 806              		.loc 1 514 1 view .LVU268
 807 004c 0DB0     		add	sp, sp, #52
 808              	.LCFI8:
 809              		.cfi_remember_state
 810              		.cfi_def_cfa_offset 4
 811              		@ sp needed
 812 004e 5DF804FB 		ldr	pc, [sp], #4
 813              	.L39:
 814              	.LCFI9:
 815              		.cfi_restore_state
 502:Core/Src/main.c ****   }
 816              		.loc 1 502 5 is_stmt 1 view .LVU269
 817 0052 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 35


 818              	.LVL26:
 819              	.L40:
 508:Core/Src/main.c ****   }
 820              		.loc 1 508 5 view .LVU270
 821 0056 FFF7FEFF 		bl	Error_Handler
 822              	.LVL27:
 823              	.L42:
 824 005a 00BF     		.align	2
 825              	.L41:
 826 005c 00000000 		.word	.LANCHOR5
 827 0060 002C0140 		.word	1073818624
 828              		.cfi_endproc
 829              	.LFE74:
 831              		.section	.text.MX_TIM2_Init,"ax",%progbits
 832              		.align	1
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	MX_TIM2_Init:
 838              	.LFB75:
 522:Core/Src/main.c **** 
 839              		.loc 1 522 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 48
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843 0000 00B5     		push	{lr}
 844              	.LCFI10:
 845              		.cfi_def_cfa_offset 4
 846              		.cfi_offset 14, -4
 847 0002 8DB0     		sub	sp, sp, #52
 848              	.LCFI11:
 849              		.cfi_def_cfa_offset 56
 528:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 850              		.loc 1 528 3 view .LVU272
 528:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 851              		.loc 1 528 27 is_stmt 0 view .LVU273
 852 0004 2422     		movs	r2, #36
 853 0006 0021     		movs	r1, #0
 854 0008 03A8     		add	r0, sp, #12
 855 000a FFF7FEFF 		bl	memset
 856              	.LVL28:
 529:Core/Src/main.c **** 
 857              		.loc 1 529 3 is_stmt 1 view .LVU274
 529:Core/Src/main.c **** 
 858              		.loc 1 529 27 is_stmt 0 view .LVU275
 859 000e 0023     		movs	r3, #0
 860 0010 0193     		str	r3, [sp, #4]
 861 0012 0293     		str	r3, [sp, #8]
 534:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 862              		.loc 1 534 3 is_stmt 1 view .LVU276
 534:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 863              		.loc 1 534 18 is_stmt 0 view .LVU277
 864 0014 1148     		ldr	r0, .L49
 865 0016 4FF08042 		mov	r2, #1073741824
 866 001a 0260     		str	r2, [r0]
 535:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 867              		.loc 1 535 3 is_stmt 1 view .LVU278
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 36


 535:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 868              		.loc 1 535 24 is_stmt 0 view .LVU279
 869 001c 4360     		str	r3, [r0, #4]
 536:Core/Src/main.c ****   htim2.Init.Period = 65535;
 870              		.loc 1 536 3 is_stmt 1 view .LVU280
 536:Core/Src/main.c ****   htim2.Init.Period = 65535;
 871              		.loc 1 536 26 is_stmt 0 view .LVU281
 872 001e 8360     		str	r3, [r0, #8]
 537:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 873              		.loc 1 537 3 is_stmt 1 view .LVU282
 537:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 874              		.loc 1 537 21 is_stmt 0 view .LVU283
 875 0020 4FF6FF72 		movw	r2, #65535
 876 0024 C260     		str	r2, [r0, #12]
 538:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 877              		.loc 1 538 3 is_stmt 1 view .LVU284
 538:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 878              		.loc 1 538 28 is_stmt 0 view .LVU285
 879 0026 0361     		str	r3, [r0, #16]
 539:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 880              		.loc 1 539 3 is_stmt 1 view .LVU286
 539:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 881              		.loc 1 539 32 is_stmt 0 view .LVU287
 882 0028 8361     		str	r3, [r0, #24]
 540:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 883              		.loc 1 540 3 is_stmt 1 view .LVU288
 540:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 884              		.loc 1 540 23 is_stmt 0 view .LVU289
 885 002a 0323     		movs	r3, #3
 886 002c 0393     		str	r3, [sp, #12]
 541:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 887              		.loc 1 541 3 is_stmt 1 view .LVU290
 542:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 888              		.loc 1 542 3 view .LVU291
 542:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 889              		.loc 1 542 24 is_stmt 0 view .LVU292
 890 002e 0123     		movs	r3, #1
 891 0030 0593     		str	r3, [sp, #20]
 543:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 892              		.loc 1 543 3 is_stmt 1 view .LVU293
 544:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 893              		.loc 1 544 3 view .LVU294
 545:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 894              		.loc 1 545 3 view .LVU295
 546:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 895              		.loc 1 546 3 view .LVU296
 546:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 896              		.loc 1 546 24 is_stmt 0 view .LVU297
 897 0032 0993     		str	r3, [sp, #36]
 547:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 898              		.loc 1 547 3 is_stmt 1 view .LVU298
 548:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 899              		.loc 1 548 3 view .LVU299
 549:Core/Src/main.c ****   {
 900              		.loc 1 549 3 view .LVU300
 549:Core/Src/main.c ****   {
 901              		.loc 1 549 7 is_stmt 0 view .LVU301
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 37


 902 0034 03A9     		add	r1, sp, #12
 903 0036 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 904              	.LVL29:
 549:Core/Src/main.c ****   {
 905              		.loc 1 549 6 view .LVU302
 906 003a 50B9     		cbnz	r0, .L47
 553:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 907              		.loc 1 553 3 is_stmt 1 view .LVU303
 553:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 908              		.loc 1 553 37 is_stmt 0 view .LVU304
 909 003c 0023     		movs	r3, #0
 910 003e 0193     		str	r3, [sp, #4]
 554:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 911              		.loc 1 554 3 is_stmt 1 view .LVU305
 554:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 912              		.loc 1 554 33 is_stmt 0 view .LVU306
 913 0040 0293     		str	r3, [sp, #8]
 555:Core/Src/main.c ****   {
 914              		.loc 1 555 3 is_stmt 1 view .LVU307
 555:Core/Src/main.c ****   {
 915              		.loc 1 555 7 is_stmt 0 view .LVU308
 916 0042 01A9     		add	r1, sp, #4
 917 0044 0548     		ldr	r0, .L49
 918 0046 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 919              	.LVL30:
 555:Core/Src/main.c ****   {
 920              		.loc 1 555 6 view .LVU309
 921 004a 20B9     		cbnz	r0, .L48
 563:Core/Src/main.c **** 
 922              		.loc 1 563 1 view .LVU310
 923 004c 0DB0     		add	sp, sp, #52
 924              	.LCFI12:
 925              		.cfi_remember_state
 926              		.cfi_def_cfa_offset 4
 927              		@ sp needed
 928 004e 5DF804FB 		ldr	pc, [sp], #4
 929              	.L47:
 930              	.LCFI13:
 931              		.cfi_restore_state
 551:Core/Src/main.c ****   }
 932              		.loc 1 551 5 is_stmt 1 view .LVU311
 933 0052 FFF7FEFF 		bl	Error_Handler
 934              	.LVL31:
 935              	.L48:
 557:Core/Src/main.c ****   }
 936              		.loc 1 557 5 view .LVU312
 937 0056 FFF7FEFF 		bl	Error_Handler
 938              	.LVL32:
 939              	.L50:
 940 005a 00BF     		.align	2
 941              	.L49:
 942 005c 00000000 		.word	.LANCHOR4
 943              		.cfi_endproc
 944              	.LFE75:
 946              		.section	.text.MX_TIM3_Init,"ax",%progbits
 947              		.align	1
 948              		.syntax unified
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 38


 949              		.thumb
 950              		.thumb_func
 952              	MX_TIM3_Init:
 953              	.LFB76:
 571:Core/Src/main.c **** 
 954              		.loc 1 571 1 view -0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 56
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958 0000 00B5     		push	{lr}
 959              	.LCFI14:
 960              		.cfi_def_cfa_offset 4
 961              		.cfi_offset 14, -4
 962 0002 8FB0     		sub	sp, sp, #60
 963              	.LCFI15:
 964              		.cfi_def_cfa_offset 64
 577:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 965              		.loc 1 577 3 view .LVU314
 577:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 966              		.loc 1 577 26 is_stmt 0 view .LVU315
 967 0004 0023     		movs	r3, #0
 968 0006 0A93     		str	r3, [sp, #40]
 969 0008 0B93     		str	r3, [sp, #44]
 970 000a 0C93     		str	r3, [sp, #48]
 971 000c 0D93     		str	r3, [sp, #52]
 578:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 972              		.loc 1 578 3 is_stmt 1 view .LVU316
 578:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 973              		.loc 1 578 27 is_stmt 0 view .LVU317
 974 000e 0893     		str	r3, [sp, #32]
 975 0010 0993     		str	r3, [sp, #36]
 579:Core/Src/main.c **** 
 976              		.loc 1 579 3 is_stmt 1 view .LVU318
 579:Core/Src/main.c **** 
 977              		.loc 1 579 22 is_stmt 0 view .LVU319
 978 0012 0193     		str	r3, [sp, #4]
 979 0014 0293     		str	r3, [sp, #8]
 980 0016 0393     		str	r3, [sp, #12]
 981 0018 0493     		str	r3, [sp, #16]
 982 001a 0593     		str	r3, [sp, #20]
 983 001c 0693     		str	r3, [sp, #24]
 984 001e 0793     		str	r3, [sp, #28]
 584:Core/Src/main.c ****   htim3.Init.Prescaler = 29;
 985              		.loc 1 584 3 is_stmt 1 view .LVU320
 584:Core/Src/main.c ****   htim3.Init.Prescaler = 29;
 986              		.loc 1 584 18 is_stmt 0 view .LVU321
 987 0020 2B48     		ldr	r0, .L69
 988 0022 2C4A     		ldr	r2, .L69+4
 989 0024 0260     		str	r2, [r0]
 585:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 990              		.loc 1 585 3 is_stmt 1 view .LVU322
 585:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 991              		.loc 1 585 24 is_stmt 0 view .LVU323
 992 0026 1D22     		movs	r2, #29
 993 0028 4260     		str	r2, [r0, #4]
 586:Core/Src/main.c ****   htim3.Init.Period = 99;
 994              		.loc 1 586 3 is_stmt 1 view .LVU324
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 39


 586:Core/Src/main.c ****   htim3.Init.Period = 99;
 995              		.loc 1 586 26 is_stmt 0 view .LVU325
 996 002a 8360     		str	r3, [r0, #8]
 587:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 997              		.loc 1 587 3 is_stmt 1 view .LVU326
 587:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 998              		.loc 1 587 21 is_stmt 0 view .LVU327
 999 002c 6322     		movs	r2, #99
 1000 002e C260     		str	r2, [r0, #12]
 588:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1001              		.loc 1 588 3 is_stmt 1 view .LVU328
 588:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1002              		.loc 1 588 28 is_stmt 0 view .LVU329
 1003 0030 0361     		str	r3, [r0, #16]
 589:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1004              		.loc 1 589 3 is_stmt 1 view .LVU330
 589:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1005              		.loc 1 589 32 is_stmt 0 view .LVU331
 1006 0032 8361     		str	r3, [r0, #24]
 590:Core/Src/main.c ****   {
 1007              		.loc 1 590 3 is_stmt 1 view .LVU332
 590:Core/Src/main.c ****   {
 1008              		.loc 1 590 7 is_stmt 0 view .LVU333
 1009 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1010              	.LVL33:
 590:Core/Src/main.c ****   {
 1011              		.loc 1 590 6 view .LVU334
 1012 0038 0028     		cmp	r0, #0
 1013 003a 39D1     		bne	.L61
 594:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1014              		.loc 1 594 3 is_stmt 1 view .LVU335
 594:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1015              		.loc 1 594 34 is_stmt 0 view .LVU336
 1016 003c 4FF48053 		mov	r3, #4096
 1017 0040 0A93     		str	r3, [sp, #40]
 595:Core/Src/main.c ****   {
 1018              		.loc 1 595 3 is_stmt 1 view .LVU337
 595:Core/Src/main.c ****   {
 1019              		.loc 1 595 7 is_stmt 0 view .LVU338
 1020 0042 0AA9     		add	r1, sp, #40
 1021 0044 2248     		ldr	r0, .L69
 1022 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1023              	.LVL34:
 595:Core/Src/main.c ****   {
 1024              		.loc 1 595 6 view .LVU339
 1025 004a 0028     		cmp	r0, #0
 1026 004c 32D1     		bne	.L62
 599:Core/Src/main.c ****   {
 1027              		.loc 1 599 3 is_stmt 1 view .LVU340
 599:Core/Src/main.c ****   {
 1028              		.loc 1 599 7 is_stmt 0 view .LVU341
 1029 004e 2048     		ldr	r0, .L69
 1030 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1031              	.LVL35:
 599:Core/Src/main.c ****   {
 1032              		.loc 1 599 6 view .LVU342
 1033 0054 0028     		cmp	r0, #0
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 40


 1034 0056 2FD1     		bne	.L63
 603:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1035              		.loc 1 603 3 is_stmt 1 view .LVU343
 603:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1036              		.loc 1 603 37 is_stmt 0 view .LVU344
 1037 0058 0023     		movs	r3, #0
 1038 005a 0893     		str	r3, [sp, #32]
 604:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1039              		.loc 1 604 3 is_stmt 1 view .LVU345
 604:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1040              		.loc 1 604 33 is_stmt 0 view .LVU346
 1041 005c 0993     		str	r3, [sp, #36]
 605:Core/Src/main.c ****   {
 1042              		.loc 1 605 3 is_stmt 1 view .LVU347
 605:Core/Src/main.c ****   {
 1043              		.loc 1 605 7 is_stmt 0 view .LVU348
 1044 005e 08A9     		add	r1, sp, #32
 1045 0060 1B48     		ldr	r0, .L69
 1046 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1047              	.LVL36:
 605:Core/Src/main.c ****   {
 1048              		.loc 1 605 6 view .LVU349
 1049 0066 48BB     		cbnz	r0, .L64
 609:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1050              		.loc 1 609 3 is_stmt 1 view .LVU350
 609:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1051              		.loc 1 609 20 is_stmt 0 view .LVU351
 1052 0068 6023     		movs	r3, #96
 1053 006a 0193     		str	r3, [sp, #4]
 610:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1054              		.loc 1 610 3 is_stmt 1 view .LVU352
 610:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1055              		.loc 1 610 19 is_stmt 0 view .LVU353
 1056 006c 0022     		movs	r2, #0
 1057 006e 0292     		str	r2, [sp, #8]
 611:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1058              		.loc 1 611 3 is_stmt 1 view .LVU354
 611:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1059              		.loc 1 611 24 is_stmt 0 view .LVU355
 1060 0070 0392     		str	r2, [sp, #12]
 612:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1061              		.loc 1 612 3 is_stmt 1 view .LVU356
 612:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1062              		.loc 1 612 24 is_stmt 0 view .LVU357
 1063 0072 0592     		str	r2, [sp, #20]
 613:Core/Src/main.c ****   {
 1064              		.loc 1 613 3 is_stmt 1 view .LVU358
 613:Core/Src/main.c ****   {
 1065              		.loc 1 613 7 is_stmt 0 view .LVU359
 1066 0074 01A9     		add	r1, sp, #4
 1067 0076 1648     		ldr	r0, .L69
 1068 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1069              	.LVL37:
 613:Core/Src/main.c ****   {
 1070              		.loc 1 613 6 view .LVU360
 1071 007c 00BB     		cbnz	r0, .L65
 617:Core/Src/main.c ****   {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 41


 1072              		.loc 1 617 3 is_stmt 1 view .LVU361
 617:Core/Src/main.c ****   {
 1073              		.loc 1 617 7 is_stmt 0 view .LVU362
 1074 007e 0422     		movs	r2, #4
 1075 0080 0DEB0201 		add	r1, sp, r2
 1076 0084 1248     		ldr	r0, .L69
 1077 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1078              	.LVL38:
 617:Core/Src/main.c ****   {
 1079              		.loc 1 617 6 view .LVU363
 1080 008a D8B9     		cbnz	r0, .L66
 621:Core/Src/main.c ****   {
 1081              		.loc 1 621 3 is_stmt 1 view .LVU364
 621:Core/Src/main.c ****   {
 1082              		.loc 1 621 7 is_stmt 0 view .LVU365
 1083 008c 0822     		movs	r2, #8
 1084 008e 01A9     		add	r1, sp, #4
 1085 0090 0F48     		ldr	r0, .L69
 1086 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1087              	.LVL39:
 621:Core/Src/main.c ****   {
 1088              		.loc 1 621 6 view .LVU366
 1089 0096 B8B9     		cbnz	r0, .L67
 625:Core/Src/main.c ****   {
 1090              		.loc 1 625 3 is_stmt 1 view .LVU367
 625:Core/Src/main.c ****   {
 1091              		.loc 1 625 7 is_stmt 0 view .LVU368
 1092 0098 0C22     		movs	r2, #12
 1093 009a 01A9     		add	r1, sp, #4
 1094 009c 0C48     		ldr	r0, .L69
 1095 009e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1096              	.LVL40:
 625:Core/Src/main.c ****   {
 1097              		.loc 1 625 6 view .LVU369
 1098 00a2 98B9     		cbnz	r0, .L68
 632:Core/Src/main.c **** 
 1099              		.loc 1 632 3 is_stmt 1 view .LVU370
 1100 00a4 0A48     		ldr	r0, .L69
 1101 00a6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1102              	.LVL41:
 634:Core/Src/main.c **** 
 1103              		.loc 1 634 1 is_stmt 0 view .LVU371
 1104 00aa 0FB0     		add	sp, sp, #60
 1105              	.LCFI16:
 1106              		.cfi_remember_state
 1107              		.cfi_def_cfa_offset 4
 1108              		@ sp needed
 1109 00ac 5DF804FB 		ldr	pc, [sp], #4
 1110              	.L61:
 1111              	.LCFI17:
 1112              		.cfi_restore_state
 592:Core/Src/main.c ****   }
 1113              		.loc 1 592 5 is_stmt 1 view .LVU372
 1114 00b0 FFF7FEFF 		bl	Error_Handler
 1115              	.LVL42:
 1116              	.L62:
 597:Core/Src/main.c ****   }
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 42


 1117              		.loc 1 597 5 view .LVU373
 1118 00b4 FFF7FEFF 		bl	Error_Handler
 1119              	.LVL43:
 1120              	.L63:
 601:Core/Src/main.c ****   }
 1121              		.loc 1 601 5 view .LVU374
 1122 00b8 FFF7FEFF 		bl	Error_Handler
 1123              	.LVL44:
 1124              	.L64:
 607:Core/Src/main.c ****   }
 1125              		.loc 1 607 5 view .LVU375
 1126 00bc FFF7FEFF 		bl	Error_Handler
 1127              	.LVL45:
 1128              	.L65:
 615:Core/Src/main.c ****   }
 1129              		.loc 1 615 5 view .LVU376
 1130 00c0 FFF7FEFF 		bl	Error_Handler
 1131              	.LVL46:
 1132              	.L66:
 619:Core/Src/main.c ****   }
 1133              		.loc 1 619 5 view .LVU377
 1134 00c4 FFF7FEFF 		bl	Error_Handler
 1135              	.LVL47:
 1136              	.L67:
 623:Core/Src/main.c ****   }
 1137              		.loc 1 623 5 view .LVU378
 1138 00c8 FFF7FEFF 		bl	Error_Handler
 1139              	.LVL48:
 1140              	.L68:
 627:Core/Src/main.c ****   }
 1141              		.loc 1 627 5 view .LVU379
 1142 00cc FFF7FEFF 		bl	Error_Handler
 1143              	.LVL49:
 1144              	.L70:
 1145              		.align	2
 1146              	.L69:
 1147 00d0 00000000 		.word	.LANCHOR2
 1148 00d4 00040040 		.word	1073742848
 1149              		.cfi_endproc
 1150              	.LFE76:
 1152              		.section	.text.MX_TIM4_Init,"ax",%progbits
 1153              		.align	1
 1154              		.syntax unified
 1155              		.thumb
 1156              		.thumb_func
 1158              	MX_TIM4_Init:
 1159              	.LFB77:
 642:Core/Src/main.c **** 
 1160              		.loc 1 642 1 view -0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 48
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164 0000 00B5     		push	{lr}
 1165              	.LCFI18:
 1166              		.cfi_def_cfa_offset 4
 1167              		.cfi_offset 14, -4
 1168 0002 8DB0     		sub	sp, sp, #52
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 43


 1169              	.LCFI19:
 1170              		.cfi_def_cfa_offset 56
 648:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1171              		.loc 1 648 3 view .LVU381
 648:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1172              		.loc 1 648 27 is_stmt 0 view .LVU382
 1173 0004 2422     		movs	r2, #36
 1174 0006 0021     		movs	r1, #0
 1175 0008 03A8     		add	r0, sp, #12
 1176 000a FFF7FEFF 		bl	memset
 1177              	.LVL50:
 649:Core/Src/main.c **** 
 1178              		.loc 1 649 3 is_stmt 1 view .LVU383
 649:Core/Src/main.c **** 
 1179              		.loc 1 649 27 is_stmt 0 view .LVU384
 1180 000e 0023     		movs	r3, #0
 1181 0010 0193     		str	r3, [sp, #4]
 1182 0012 0293     		str	r3, [sp, #8]
 654:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 1183              		.loc 1 654 3 is_stmt 1 view .LVU385
 654:Core/Src/main.c ****   htim4.Init.Prescaler = 0;
 1184              		.loc 1 654 18 is_stmt 0 view .LVU386
 1185 0014 1048     		ldr	r0, .L77
 1186 0016 114A     		ldr	r2, .L77+4
 1187 0018 0260     		str	r2, [r0]
 655:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1188              		.loc 1 655 3 is_stmt 1 view .LVU387
 655:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 1189              		.loc 1 655 24 is_stmt 0 view .LVU388
 1190 001a 4360     		str	r3, [r0, #4]
 656:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1191              		.loc 1 656 3 is_stmt 1 view .LVU389
 656:Core/Src/main.c ****   htim4.Init.Period = 65535;
 1192              		.loc 1 656 26 is_stmt 0 view .LVU390
 1193 001c 8360     		str	r3, [r0, #8]
 657:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1194              		.loc 1 657 3 is_stmt 1 view .LVU391
 657:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1195              		.loc 1 657 21 is_stmt 0 view .LVU392
 1196 001e 4FF6FF72 		movw	r2, #65535
 1197 0022 C260     		str	r2, [r0, #12]
 658:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1198              		.loc 1 658 3 is_stmt 1 view .LVU393
 658:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1199              		.loc 1 658 28 is_stmt 0 view .LVU394
 1200 0024 0361     		str	r3, [r0, #16]
 659:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 1201              		.loc 1 659 3 is_stmt 1 view .LVU395
 659:Core/Src/main.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 1202              		.loc 1 659 32 is_stmt 0 view .LVU396
 1203 0026 8361     		str	r3, [r0, #24]
 660:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1204              		.loc 1 660 3 is_stmt 1 view .LVU397
 660:Core/Src/main.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 1205              		.loc 1 660 23 is_stmt 0 view .LVU398
 1206 0028 0323     		movs	r3, #3
 1207 002a 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 44


 661:Core/Src/main.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 1208              		.loc 1 661 3 is_stmt 1 view .LVU399
 662:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 1209              		.loc 1 662 3 view .LVU400
 662:Core/Src/main.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 1210              		.loc 1 662 24 is_stmt 0 view .LVU401
 1211 002c 0123     		movs	r3, #1
 1212 002e 0593     		str	r3, [sp, #20]
 663:Core/Src/main.c ****   sConfig.IC1Filter = 0;
 1213              		.loc 1 663 3 is_stmt 1 view .LVU402
 664:Core/Src/main.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 1214              		.loc 1 664 3 view .LVU403
 665:Core/Src/main.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 1215              		.loc 1 665 3 view .LVU404
 666:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1216              		.loc 1 666 3 view .LVU405
 666:Core/Src/main.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 1217              		.loc 1 666 24 is_stmt 0 view .LVU406
 1218 0030 0993     		str	r3, [sp, #36]
 667:Core/Src/main.c ****   sConfig.IC2Filter = 0;
 1219              		.loc 1 667 3 is_stmt 1 view .LVU407
 668:Core/Src/main.c ****   if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 1220              		.loc 1 668 3 view .LVU408
 669:Core/Src/main.c ****   {
 1221              		.loc 1 669 3 view .LVU409
 669:Core/Src/main.c ****   {
 1222              		.loc 1 669 7 is_stmt 0 view .LVU410
 1223 0032 03A9     		add	r1, sp, #12
 1224 0034 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 1225              	.LVL51:
 669:Core/Src/main.c ****   {
 1226              		.loc 1 669 6 view .LVU411
 1227 0038 50B9     		cbnz	r0, .L75
 673:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1228              		.loc 1 673 3 is_stmt 1 view .LVU412
 673:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1229              		.loc 1 673 37 is_stmt 0 view .LVU413
 1230 003a 0023     		movs	r3, #0
 1231 003c 0193     		str	r3, [sp, #4]
 674:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1232              		.loc 1 674 3 is_stmt 1 view .LVU414
 674:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 1233              		.loc 1 674 33 is_stmt 0 view .LVU415
 1234 003e 0293     		str	r3, [sp, #8]
 675:Core/Src/main.c ****   {
 1235              		.loc 1 675 3 is_stmt 1 view .LVU416
 675:Core/Src/main.c ****   {
 1236              		.loc 1 675 7 is_stmt 0 view .LVU417
 1237 0040 01A9     		add	r1, sp, #4
 1238 0042 0548     		ldr	r0, .L77
 1239 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1240              	.LVL52:
 675:Core/Src/main.c ****   {
 1241              		.loc 1 675 6 view .LVU418
 1242 0048 20B9     		cbnz	r0, .L76
 683:Core/Src/main.c **** 
 1243              		.loc 1 683 1 view .LVU419
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 45


 1244 004a 0DB0     		add	sp, sp, #52
 1245              	.LCFI20:
 1246              		.cfi_remember_state
 1247              		.cfi_def_cfa_offset 4
 1248              		@ sp needed
 1249 004c 5DF804FB 		ldr	pc, [sp], #4
 1250              	.L75:
 1251              	.LCFI21:
 1252              		.cfi_restore_state
 671:Core/Src/main.c ****   }
 1253              		.loc 1 671 5 is_stmt 1 view .LVU420
 1254 0050 FFF7FEFF 		bl	Error_Handler
 1255              	.LVL53:
 1256              	.L76:
 677:Core/Src/main.c ****   }
 1257              		.loc 1 677 5 view .LVU421
 1258 0054 FFF7FEFF 		bl	Error_Handler
 1259              	.LVL54:
 1260              	.L78:
 1261              		.align	2
 1262              	.L77:
 1263 0058 00000000 		.word	.LANCHOR3
 1264 005c 00080040 		.word	1073743872
 1265              		.cfi_endproc
 1266              	.LFE77:
 1268              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1269              		.align	1
 1270              		.syntax unified
 1271              		.thumb
 1272              		.thumb_func
 1274              	MX_USART2_UART_Init:
 1275              	.LFB78:
 691:Core/Src/main.c **** 
 1276              		.loc 1 691 1 view -0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 0
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 1280 0000 08B5     		push	{r3, lr}
 1281              	.LCFI22:
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 3, -8
 1284              		.cfi_offset 14, -4
 700:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1285              		.loc 1 700 3 view .LVU423
 700:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 1286              		.loc 1 700 19 is_stmt 0 view .LVU424
 1287 0002 0A48     		ldr	r0, .L83
 1288 0004 0A4B     		ldr	r3, .L83+4
 1289 0006 0360     		str	r3, [r0]
 701:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1290              		.loc 1 701 3 is_stmt 1 view .LVU425
 701:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1291              		.loc 1 701 24 is_stmt 0 view .LVU426
 1292 0008 4FF4E133 		mov	r3, #115200
 1293 000c 4360     		str	r3, [r0, #4]
 702:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1294              		.loc 1 702 3 is_stmt 1 view .LVU427
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 46


 702:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1295              		.loc 1 702 26 is_stmt 0 view .LVU428
 1296 000e 0023     		movs	r3, #0
 1297 0010 8360     		str	r3, [r0, #8]
 703:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1298              		.loc 1 703 3 is_stmt 1 view .LVU429
 703:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 1299              		.loc 1 703 24 is_stmt 0 view .LVU430
 1300 0012 C360     		str	r3, [r0, #12]
 704:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1301              		.loc 1 704 3 is_stmt 1 view .LVU431
 704:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1302              		.loc 1 704 22 is_stmt 0 view .LVU432
 1303 0014 0361     		str	r3, [r0, #16]
 705:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1304              		.loc 1 705 3 is_stmt 1 view .LVU433
 705:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1305              		.loc 1 705 20 is_stmt 0 view .LVU434
 1306 0016 0C22     		movs	r2, #12
 1307 0018 4261     		str	r2, [r0, #20]
 706:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1308              		.loc 1 706 3 is_stmt 1 view .LVU435
 706:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1309              		.loc 1 706 25 is_stmt 0 view .LVU436
 1310 001a 8361     		str	r3, [r0, #24]
 707:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1311              		.loc 1 707 3 is_stmt 1 view .LVU437
 707:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1312              		.loc 1 707 28 is_stmt 0 view .LVU438
 1313 001c C361     		str	r3, [r0, #28]
 708:Core/Src/main.c ****   {
 1314              		.loc 1 708 3 is_stmt 1 view .LVU439
 708:Core/Src/main.c ****   {
 1315              		.loc 1 708 7 is_stmt 0 view .LVU440
 1316 001e FFF7FEFF 		bl	HAL_UART_Init
 1317              	.LVL55:
 708:Core/Src/main.c ****   {
 1318              		.loc 1 708 6 view .LVU441
 1319 0022 00B9     		cbnz	r0, .L82
 716:Core/Src/main.c **** 
 1320              		.loc 1 716 1 view .LVU442
 1321 0024 08BD     		pop	{r3, pc}
 1322              	.L82:
 710:Core/Src/main.c ****   }
 1323              		.loc 1 710 5 is_stmt 1 view .LVU443
 1324 0026 FFF7FEFF 		bl	Error_Handler
 1325              	.LVL56:
 1326              	.L84:
 1327 002a 00BF     		.align	2
 1328              	.L83:
 1329 002c 00000000 		.word	.LANCHOR0
 1330 0030 00440040 		.word	1073759232
 1331              		.cfi_endproc
 1332              	.LFE78:
 1334              		.section	.text.SystemClock_Config,"ax",%progbits
 1335              		.align	1
 1336              		.global	SystemClock_Config
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 47


 1337              		.syntax unified
 1338              		.thumb
 1339              		.thumb_func
 1341              	SystemClock_Config:
 1342              	.LFB73:
 433:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1343              		.loc 1 433 1 view -0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 64
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347 0000 00B5     		push	{lr}
 1348              	.LCFI23:
 1349              		.cfi_def_cfa_offset 4
 1350              		.cfi_offset 14, -4
 1351 0002 91B0     		sub	sp, sp, #68
 1352              	.LCFI24:
 1353              		.cfi_def_cfa_offset 72
 434:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1354              		.loc 1 434 3 view .LVU445
 434:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1355              		.loc 1 434 22 is_stmt 0 view .LVU446
 1356 0004 2822     		movs	r2, #40
 1357 0006 0021     		movs	r1, #0
 1358 0008 06A8     		add	r0, sp, #24
 1359 000a FFF7FEFF 		bl	memset
 1360              	.LVL57:
 435:Core/Src/main.c **** 
 1361              		.loc 1 435 3 is_stmt 1 view .LVU447
 435:Core/Src/main.c **** 
 1362              		.loc 1 435 22 is_stmt 0 view .LVU448
 1363 000e 0023     		movs	r3, #0
 1364 0010 0193     		str	r3, [sp, #4]
 1365 0012 0293     		str	r3, [sp, #8]
 1366 0014 0393     		str	r3, [sp, #12]
 1367 0016 0493     		str	r3, [sp, #16]
 1368 0018 0593     		str	r3, [sp, #20]
 440:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1369              		.loc 1 440 3 is_stmt 1 view .LVU449
 440:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1370              		.loc 1 440 36 is_stmt 0 view .LVU450
 1371 001a 0122     		movs	r2, #1
 1372 001c 0692     		str	r2, [sp, #24]
 441:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1373              		.loc 1 441 3 is_stmt 1 view .LVU451
 441:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1374              		.loc 1 441 30 is_stmt 0 view .LVU452
 1375 001e 4FF48033 		mov	r3, #65536
 1376 0022 0793     		str	r3, [sp, #28]
 442:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1377              		.loc 1 442 3 is_stmt 1 view .LVU453
 443:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1378              		.loc 1 443 3 view .LVU454
 443:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1379              		.loc 1 443 30 is_stmt 0 view .LVU455
 1380 0024 0A92     		str	r2, [sp, #40]
 444:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1381              		.loc 1 444 3 is_stmt 1 view .LVU456
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 48


 444:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1382              		.loc 1 444 34 is_stmt 0 view .LVU457
 1383 0026 0222     		movs	r2, #2
 1384 0028 0D92     		str	r2, [sp, #52]
 445:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1385              		.loc 1 445 3 is_stmt 1 view .LVU458
 445:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1386              		.loc 1 445 35 is_stmt 0 view .LVU459
 1387 002a 0E93     		str	r3, [sp, #56]
 446:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1388              		.loc 1 446 3 is_stmt 1 view .LVU460
 446:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1389              		.loc 1 446 32 is_stmt 0 view .LVU461
 1390 002c 4FF4E013 		mov	r3, #1835008
 1391 0030 0F93     		str	r3, [sp, #60]
 447:Core/Src/main.c ****   {
 1392              		.loc 1 447 3 is_stmt 1 view .LVU462
 447:Core/Src/main.c ****   {
 1393              		.loc 1 447 7 is_stmt 0 view .LVU463
 1394 0032 06A8     		add	r0, sp, #24
 1395 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1396              	.LVL58:
 447:Core/Src/main.c ****   {
 1397              		.loc 1 447 6 view .LVU464
 1398 0038 80B9     		cbnz	r0, .L89
 453:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1399              		.loc 1 453 3 is_stmt 1 view .LVU465
 453:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1400              		.loc 1 453 31 is_stmt 0 view .LVU466
 1401 003a 0F23     		movs	r3, #15
 1402 003c 0193     		str	r3, [sp, #4]
 455:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1403              		.loc 1 455 3 is_stmt 1 view .LVU467
 455:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1404              		.loc 1 455 34 is_stmt 0 view .LVU468
 1405 003e 0221     		movs	r1, #2
 1406 0040 0291     		str	r1, [sp, #8]
 456:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1407              		.loc 1 456 3 is_stmt 1 view .LVU469
 456:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1408              		.loc 1 456 35 is_stmt 0 view .LVU470
 1409 0042 0023     		movs	r3, #0
 1410 0044 0393     		str	r3, [sp, #12]
 457:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1411              		.loc 1 457 3 is_stmt 1 view .LVU471
 457:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1412              		.loc 1 457 36 is_stmt 0 view .LVU472
 1413 0046 4FF48062 		mov	r2, #1024
 1414 004a 0492     		str	r2, [sp, #16]
 458:Core/Src/main.c **** 
 1415              		.loc 1 458 3 is_stmt 1 view .LVU473
 458:Core/Src/main.c **** 
 1416              		.loc 1 458 36 is_stmt 0 view .LVU474
 1417 004c 0593     		str	r3, [sp, #20]
 460:Core/Src/main.c ****   {
 1418              		.loc 1 460 3 is_stmt 1 view .LVU475
 460:Core/Src/main.c ****   {
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 49


 1419              		.loc 1 460 7 is_stmt 0 view .LVU476
 1420 004e 01A8     		add	r0, sp, #4
 1421 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1422              	.LVL59:
 460:Core/Src/main.c ****   {
 1423              		.loc 1 460 6 view .LVU477
 1424 0054 20B9     		cbnz	r0, .L90
 464:Core/Src/main.c **** 
 1425              		.loc 1 464 1 view .LVU478
 1426 0056 11B0     		add	sp, sp, #68
 1427              	.LCFI25:
 1428              		.cfi_remember_state
 1429              		.cfi_def_cfa_offset 4
 1430              		@ sp needed
 1431 0058 5DF804FB 		ldr	pc, [sp], #4
 1432              	.L89:
 1433              	.LCFI26:
 1434              		.cfi_restore_state
 449:Core/Src/main.c ****   }
 1435              		.loc 1 449 5 is_stmt 1 view .LVU479
 1436 005c FFF7FEFF 		bl	Error_Handler
 1437              	.LVL60:
 1438              	.L90:
 462:Core/Src/main.c ****   }
 1439              		.loc 1 462 5 view .LVU480
 1440 0060 FFF7FEFF 		bl	Error_Handler
 1441              	.LVL61:
 1442              		.cfi_endproc
 1443              	.LFE73:
 1445              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1446              		.align	2
 1447              	.LC0:
 1448 0000 482100   		.ascii	"H!\000"
 1449              		.global	__aeabi_ui2f
 1450              		.global	__aeabi_fdiv
 1451 0003 00       		.align	2
 1452              	.LC1:
 1453 0004 47302575 		.ascii	"G0%uX%0.2fY%0.2f!\000"
 1453      5825302E 
 1453      32665925 
 1453      302E3266 
 1453      2100
 1454              		.global	__aeabi_f2d
 1455 0016 0000     		.align	2
 1456              	.LC2:
 1457 0018 532100   		.ascii	"S!\000"
 1458 001b 00       		.align	2
 1459              	.LC3:
 1460 001c 5A2100   		.ascii	"Z!\000"
 1461              		.section	.text.main,"ax",%progbits
 1462              		.align	1
 1463              		.global	main
 1464              		.syntax unified
 1465              		.thumb
 1466              		.thumb_func
 1468              	main:
 1469              	.LFB72:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 50


 199:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1470              		.loc 1 199 1 view -0
 1471              		.cfi_startproc
 1472              		@ Volatile: function does not return.
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 0, uses_anonymous_args = 0
 1475 0000 80B5     		push	{r7, lr}
 1476              	.LCFI27:
 1477              		.cfi_def_cfa_offset 8
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 84B0     		sub	sp, sp, #16
 1481              	.LCFI28:
 1482              		.cfi_def_cfa_offset 24
 207:Core/Src/main.c **** 
 1483              		.loc 1 207 3 view .LVU482
 1484 0004 FFF7FEFF 		bl	HAL_Init
 1485              	.LVL62:
 214:Core/Src/main.c **** 
 1486              		.loc 1 214 3 view .LVU483
 1487 0008 FFF7FEFF 		bl	SystemClock_Config
 1488              	.LVL63:
 221:Core/Src/main.c ****   MX_TIM1_Init();
 1489              		.loc 1 221 3 view .LVU484
 1490 000c FFF7FEFF 		bl	MX_GPIO_Init
 1491              	.LVL64:
 222:Core/Src/main.c ****   MX_TIM2_Init();
 1492              		.loc 1 222 3 view .LVU485
 1493 0010 FFF7FEFF 		bl	MX_TIM1_Init
 1494              	.LVL65:
 223:Core/Src/main.c ****   MX_TIM3_Init();
 1495              		.loc 1 223 3 view .LVU486
 1496 0014 FFF7FEFF 		bl	MX_TIM2_Init
 1497              	.LVL66:
 224:Core/Src/main.c ****   MX_TIM4_Init();
 1498              		.loc 1 224 3 view .LVU487
 1499 0018 FFF7FEFF 		bl	MX_TIM3_Init
 1500              	.LVL67:
 225:Core/Src/main.c ****   MX_USART2_UART_Init();
 1501              		.loc 1 225 3 view .LVU488
 1502 001c FFF7FEFF 		bl	MX_TIM4_Init
 1503              	.LVL68:
 226:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1504              		.loc 1 226 3 view .LVU489
 1505 0020 FFF7FEFF 		bl	MX_USART2_UART_Init
 1506              	.LVL69:
 228:Core/Src/main.c **** 
 1507              		.loc 1 228 3 view .LVU490
 1508 0024 0122     		movs	r2, #1
 1509 0026 C649     		ldr	r1, .L115
 1510 0028 C648     		ldr	r0, .L115+4
 1511 002a FFF7FEFF 		bl	HAL_UART_Receive_IT
 1512              	.LVL70:
 231:Core/Src/main.c **** 
 1513              		.loc 1 231 2 view .LVU491
 1514 002e FFF7FEFF 		bl	axisInit
 1515              	.LVL71:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 51


 234:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_2);
 1516              		.loc 1 234 2 view .LVU492
 1517 0032 C54C     		ldr	r4, .L115+8
 1518 0034 0021     		movs	r1, #0
 1519 0036 2046     		mov	r0, r4
 1520 0038 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1521              	.LVL72:
 235:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3);
 1522              		.loc 1 235 3 view .LVU493
 1523 003c 0421     		movs	r1, #4
 1524 003e 2046     		mov	r0, r4
 1525 0040 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1526              	.LVL73:
 236:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_4);
 1527              		.loc 1 236 3 view .LVU494
 1528 0044 0821     		movs	r1, #8
 1529 0046 2046     		mov	r0, r4
 1530 0048 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1531              	.LVL74:
 237:Core/Src/main.c **** 	
 1532              		.loc 1 237 3 view .LVU495
 1533 004c 0C21     		movs	r1, #12
 1534 004e 2046     		mov	r0, r4
 1535 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1536              	.LVL75:
 240:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_1 | TIM_CHANNEL_2);
 1537              		.loc 1 240 2 view .LVU496
 1538 0054 0421     		movs	r1, #4
 1539 0056 BD48     		ldr	r0, .L115+12
 1540 0058 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1541              	.LVL76:
 241:Core/Src/main.c **** 	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_1 | TIM_CHANNEL_2);
 1542              		.loc 1 241 2 view .LVU497
 1543 005c 0421     		movs	r1, #4
 1544 005e BC48     		ldr	r0, .L115+16
 1545 0060 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1546              	.LVL77:
 242:Core/Src/main.c **** 
 1547              		.loc 1 242 2 view .LVU498
 1548 0064 0421     		movs	r1, #4
 1549 0066 BB48     		ldr	r0, .L115+20
 1550 0068 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 1551              	.LVL78:
 1552 006c A7E0     		b	.L93
 1553              	.L104:
 1554              	.LBB10:
 255:Core/Src/main.c **** 
 1555              		.loc 1 255 4 view .LVU499
 1556 006e BA4C     		ldr	r4, .L115+24
 1557 0070 2046     		mov	r0, r4
 1558 0072 FFF7FEFF 		bl	HOME
 1559              	.LVL79:
 258:Core/Src/main.c **** 			
 1560              		.loc 1 258 4 view .LVU500
 1561 0076 04F15800 		add	r0, r4, #88
 1562 007a FFF7FEFF 		bl	HOME
 1563              	.LVL80:
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 52


 261:Core/Src/main.c **** 
 1564              		.loc 1 261 4 view .LVU501
 1565 007e 04F1B000 		add	r0, r4, #176
 1566 0082 FFF7FEFF 		bl	HOME
 1567              	.LVL81:
 266:Core/Src/main.c **** 			{
 1568              		.loc 1 266 4 view .LVU502
 266:Core/Src/main.c **** 			{
 1569              		.loc 1 266 17 is_stmt 0 view .LVU503
 1570 0086 94F84B30 		ldrb	r3, [r4, #75]	@ zero_extendqisi2
 266:Core/Src/main.c **** 			{
 1571              		.loc 1 266 6 view .LVU504
 1572 008a 002B     		cmp	r3, #0
 1573 008c 00F09780 		beq	.L93
 266:Core/Src/main.c **** 			{
 1574              		.loc 1 266 36 discriminator 1 view .LVU505
 1575 0090 94F8A330 		ldrb	r3, [r4, #163]	@ zero_extendqisi2
 266:Core/Src/main.c **** 			{
 1576              		.loc 1 266 23 discriminator 1 view .LVU506
 1577 0094 002B     		cmp	r3, #0
 1578 0096 00F09280 		beq	.L93
 266:Core/Src/main.c **** 			{
 1579              		.loc 1 266 55 discriminator 2 view .LVU507
 1580 009a 94F8FB30 		ldrb	r3, [r4, #251]	@ zero_extendqisi2
 266:Core/Src/main.c **** 			{
 1581              		.loc 1 266 42 discriminator 2 view .LVU508
 1582 009e 002B     		cmp	r3, #0
 1583 00a0 00F08D80 		beq	.L93
 272:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 1584              		.loc 1 272 9 is_stmt 1 view .LVU509
 272:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 1585              		.loc 1 272 20 is_stmt 0 view .LVU510
 1586 00a4 A16A     		ldr	r1, [r4, #40]
 272:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 1587              		.loc 1 272 25 view .LVU511
 1588 00a6 0022     		movs	r2, #0
 1589 00a8 0A60     		str	r2, [r1]
 273:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 1590              		.loc 1 273 9 is_stmt 1 view .LVU512
 273:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 1591              		.loc 1 273 20 is_stmt 0 view .LVU513
 1592 00aa D4F88010 		ldr	r1, [r4, #128]
 273:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 1593              		.loc 1 273 25 view .LVU514
 1594 00ae 0A60     		str	r2, [r1]
 274:Core/Src/main.c **** 				
 1595              		.loc 1 274 9 is_stmt 1 view .LVU515
 274:Core/Src/main.c **** 				
 1596              		.loc 1 274 20 is_stmt 0 view .LVU516
 1597 00b0 D4F8D810 		ldr	r1, [r4, #216]
 274:Core/Src/main.c **** 				
 1598              		.loc 1 274 25 view .LVU517
 1599 00b4 0A60     		str	r2, [r1]
 276:Core/Src/main.c **** 				cnc.y_axis.pos = 0;
 1600              		.loc 1 276 5 is_stmt 1 view .LVU518
 276:Core/Src/main.c **** 				cnc.y_axis.pos = 0;
 1601              		.loc 1 276 20 is_stmt 0 view .LVU519
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 53


 1602 00b6 A261     		str	r2, [r4, #24]
 277:Core/Src/main.c **** 				cnc.z_axis.pos = 0;
 1603              		.loc 1 277 5 is_stmt 1 view .LVU520
 277:Core/Src/main.c **** 				cnc.z_axis.pos = 0;
 1604              		.loc 1 277 20 is_stmt 0 view .LVU521
 1605 00b8 2267     		str	r2, [r4, #112]
 278:Core/Src/main.c **** 				
 1606              		.loc 1 278 5 is_stmt 1 view .LVU522
 278:Core/Src/main.c **** 				
 1607              		.loc 1 278 20 is_stmt 0 view .LVU523
 1608 00ba C4F8C820 		str	r2, [r4, #200]
 280:Core/Src/main.c **** 			}
 1609              		.loc 1 280 6 is_stmt 1 view .LVU524
 280:Core/Src/main.c **** 			}
 1610              		.loc 1 280 15 is_stmt 0 view .LVU525
 1611 00be 0222     		movs	r2, #2
 1612 00c0 84F80821 		strb	r2, [r4, #264]
 1613 00c4 7BE0     		b	.L93
 1614              	.L103:
 286:Core/Src/main.c **** 			move(&cnc.y_axis, 10);
 1615              		.loc 1 286 7 is_stmt 1 view .LVU526
 1616 00c6 A54D     		ldr	r5, .L115+28
 1617 00c8 A34C     		ldr	r4, .L115+24
 1618 00ca 2946     		mov	r1, r5
 1619 00cc 2046     		mov	r0, r4
 1620 00ce FFF7FEFF 		bl	move
 1621              	.LVL82:
 287:Core/Src/main.c **** 			move(&cnc.z_axis, 10);
 1622              		.loc 1 287 4 view .LVU527
 1623 00d2 2946     		mov	r1, r5
 1624 00d4 04F15800 		add	r0, r4, #88
 1625 00d8 FFF7FEFF 		bl	move
 1626              	.LVL83:
 288:Core/Src/main.c **** 			if( cnc.x_axis.finish && cnc.y_axis.finish && cnc.z_axis.finish)
 1627              		.loc 1 288 4 view .LVU528
 1628 00dc 2946     		mov	r1, r5
 1629 00de 04F1B000 		add	r0, r4, #176
 1630 00e2 FFF7FEFF 		bl	move
 1631              	.LVL84:
 289:Core/Src/main.c **** 			{
 1632              		.loc 1 289 4 view .LVU529
 289:Core/Src/main.c **** 			{
 1633              		.loc 1 289 18 is_stmt 0 view .LVU530
 1634 00e6 94F84830 		ldrb	r3, [r4, #72]	@ zero_extendqisi2
 289:Core/Src/main.c **** 			{
 1635              		.loc 1 289 6 view .LVU531
 1636 00ea 002B     		cmp	r3, #0
 1637 00ec 67D0     		beq	.L93
 289:Core/Src/main.c **** 			{
 1638              		.loc 1 289 39 discriminator 1 view .LVU532
 1639 00ee 94F8A030 		ldrb	r3, [r4, #160]	@ zero_extendqisi2
 289:Core/Src/main.c **** 			{
 1640              		.loc 1 289 26 discriminator 1 view .LVU533
 1641 00f2 002B     		cmp	r3, #0
 1642 00f4 63D0     		beq	.L93
 289:Core/Src/main.c **** 			{
 1643              		.loc 1 289 60 discriminator 2 view .LVU534
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 54


 1644 00f6 94F8F830 		ldrb	r3, [r4, #248]	@ zero_extendqisi2
 289:Core/Src/main.c **** 			{
 1645              		.loc 1 289 47 discriminator 2 view .LVU535
 1646 00fa 002B     		cmp	r3, #0
 1647 00fc 5FD0     		beq	.L93
 1648              	.LBB11:
 291:Core/Src/main.c **** 				cnc.y_axis.finish = false;
 1649              		.loc 1 291 5 is_stmt 1 view .LVU536
 291:Core/Src/main.c **** 				cnc.y_axis.finish = false;
 1650              		.loc 1 291 23 is_stmt 0 view .LVU537
 1651 00fe 0025     		movs	r5, #0
 1652 0100 84F84850 		strb	r5, [r4, #72]
 292:Core/Src/main.c **** 				cnc.z_axis.finish = false;
 1653              		.loc 1 292 5 is_stmt 1 view .LVU538
 292:Core/Src/main.c **** 				cnc.z_axis.finish = false;
 1654              		.loc 1 292 23 is_stmt 0 view .LVU539
 1655 0104 84F8A050 		strb	r5, [r4, #160]
 293:Core/Src/main.c **** 
 1656              		.loc 1 293 5 is_stmt 1 view .LVU540
 293:Core/Src/main.c **** 
 1657              		.loc 1 293 23 is_stmt 0 view .LVU541
 1658 0108 84F8F850 		strb	r5, [r4, #248]
 299:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 1659              		.loc 1 299 9 is_stmt 1 view .LVU542
 299:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 1660              		.loc 1 299 20 is_stmt 0 view .LVU543
 1661 010c A36A     		ldr	r3, [r4, #40]
 299:Core/Src/main.c ****         *cnc.y_axis.enc = 0;
 1662              		.loc 1 299 25 view .LVU544
 1663 010e 1D60     		str	r5, [r3]
 300:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 1664              		.loc 1 300 9 is_stmt 1 view .LVU545
 300:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 1665              		.loc 1 300 20 is_stmt 0 view .LVU546
 1666 0110 D4F88030 		ldr	r3, [r4, #128]
 300:Core/Src/main.c ****         *cnc.z_axis.enc = 0;
 1667              		.loc 1 300 25 view .LVU547
 1668 0114 1D60     		str	r5, [r3]
 301:Core/Src/main.c **** 				
 1669              		.loc 1 301 9 is_stmt 1 view .LVU548
 301:Core/Src/main.c **** 				
 1670              		.loc 1 301 20 is_stmt 0 view .LVU549
 1671 0116 D4F8D830 		ldr	r3, [r4, #216]
 301:Core/Src/main.c **** 				
 1672              		.loc 1 301 25 view .LVU550
 1673 011a 1D60     		str	r5, [r3]
 303:Core/Src/main.c **** 				cnc.y_axis.pos = 0;
 1674              		.loc 1 303 5 is_stmt 1 view .LVU551
 303:Core/Src/main.c **** 				cnc.y_axis.pos = 0;
 1675              		.loc 1 303 20 is_stmt 0 view .LVU552
 1676 011c A561     		str	r5, [r4, #24]
 304:Core/Src/main.c **** 				cnc.z_axis.pos = 0;
 1677              		.loc 1 304 5 is_stmt 1 view .LVU553
 304:Core/Src/main.c **** 				cnc.z_axis.pos = 0;
 1678              		.loc 1 304 20 is_stmt 0 view .LVU554
 1679 011e 2567     		str	r5, [r4, #112]
 305:Core/Src/main.c ****         memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 55


 1680              		.loc 1 305 5 is_stmt 1 view .LVU555
 305:Core/Src/main.c ****         memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 1681              		.loc 1 305 20 is_stmt 0 view .LVU556
 1682 0120 C4F8C850 		str	r5, [r4, #200]
 306:Core/Src/main.c ****         sprintf(cnc.data.TransBuff, "H!");
 1683              		.loc 1 306 9 is_stmt 1 view .LVU557
 1684 0124 04F59771 		add	r1, r4, #302
 1685 0128 C4F82E51 		str	r5, [r4, #302]	@ unaligned
 1686 012c C4F83251 		str	r5, [r4, #306]	@ unaligned
 1687 0130 C4F83651 		str	r5, [r4, #310]	@ unaligned
 1688 0134 C4F83A51 		str	r5, [r4, #314]	@ unaligned
 1689 0138 C4F83E51 		str	r5, [r4, #318]	@ unaligned
 307:Core/Src/main.c ****         HAL_UART_Transmit(&huart2, cnc.data.TransBuff, 2, 100);
 1690              		.loc 1 307 9 view .LVU558
 1691 013c 884B     		ldr	r3, .L115+32
 1692 013e 1A88     		ldrh	r2, [r3]	@ unaligned
 1693 0140 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1694 0142 A4F82E21 		strh	r2, [r4, #302]	@ unaligned
 1695 0146 8B70     		strb	r3, [r1, #2]
 308:Core/Src/main.c ****         cnc.data.index = 0;
 1696              		.loc 1 308 9 view .LVU559
 1697 0148 6423     		movs	r3, #100
 1698 014a 0222     		movs	r2, #2
 1699 014c 7D48     		ldr	r0, .L115+4
 1700 014e FFF7FEFF 		bl	HAL_UART_Transmit
 1701              	.LVL85:
 309:Core/Src/main.c **** 				cnc.Mode = 0;
 1702              		.loc 1 309 9 view .LVU560
 309:Core/Src/main.c **** 				cnc.Mode = 0;
 1703              		.loc 1 309 24 is_stmt 0 view .LVU561
 1704 0152 84F82D51 		strb	r5, [r4, #301]
 310:Core/Src/main.c ****         //uart_clear_receive_buffer_and_start_receive_IT();
 1705              		.loc 1 310 5 is_stmt 1 view .LVU562
 310:Core/Src/main.c ****         //uart_clear_receive_buffer_and_start_receive_IT();
 1706              		.loc 1 310 14 is_stmt 0 view .LVU563
 1707 0156 84F80851 		strb	r5, [r4, #264]
 1708 015a 30E0     		b	.L93
 1709              	.L102:
 1710              	.LBE11:
 316:Core/Src/main.c ****       {
 1711              		.loc 1 316 7 is_stmt 1 view .LVU564
 316:Core/Src/main.c ****       {
 1712              		.loc 1 316 19 is_stmt 0 view .LVU565
 1713 015c 7E4B     		ldr	r3, .L115+24
 1714 015e 93F82A31 		ldrb	r3, [r3, #298]	@ zero_extendqisi2
 316:Core/Src/main.c ****       {
 1715              		.loc 1 316 9 view .LVU566
 1716 0162 D3B1     		cbz	r3, .L106
 318:Core/Src/main.c ****         while(!cnc.z_axis.finish)
 1717              		.loc 1 318 9 is_stmt 1 view .LVU567
 1718 0164 7F49     		ldr	r1, .L115+36
 1719 0166 8048     		ldr	r0, .L115+40
 1720 0168 FFF7FEFF 		bl	runDrill
 1721              	.LVL86:
 319:Core/Src/main.c **** 				{
 1722              		.loc 1 319 9 view .LVU568
 319:Core/Src/main.c **** 				{
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 56


 1723              		.loc 1 319 14 is_stmt 0 view .LVU569
 1724 016c 05E0     		b	.L107
 1725              	.L108:
 321:Core/Src/main.c **** 				}
 1726              		.loc 1 321 6 is_stmt 1 view .LVU570
 1727 016e 7A48     		ldr	r0, .L115+24
 1728 0170 D0F8FC10 		ldr	r1, [r0, #252]	@ float
 1729 0174 B030     		adds	r0, r0, #176
 1730 0176 FFF7FEFF 		bl	move
 1731              	.LVL87:
 1732              	.L107:
 319:Core/Src/main.c **** 				{
 1733              		.loc 1 319 14 view .LVU571
 319:Core/Src/main.c **** 				{
 1734              		.loc 1 319 26 is_stmt 0 view .LVU572
 1735 017a 774B     		ldr	r3, .L115+24
 1736 017c 93F8F830 		ldrb	r3, [r3, #248]	@ zero_extendqisi2
 319:Core/Src/main.c **** 				{
 1737              		.loc 1 319 14 view .LVU573
 1738 0180 002B     		cmp	r3, #0
 1739 0182 F4D0     		beq	.L108
 323:Core/Src/main.c ****       }
 1740              		.loc 1 323 5 is_stmt 1 view .LVU574
 323:Core/Src/main.c ****       }
 1741              		.loc 1 323 23 is_stmt 0 view .LVU575
 1742 0184 744B     		ldr	r3, .L115+24
 1743 0186 0022     		movs	r2, #0
 1744 0188 83F8F820 		strb	r2, [r3, #248]
 1745 018c 13E0     		b	.L109
 1746              	.L110:
 329:Core/Src/main.c **** 				}
 1747              		.loc 1 329 6 is_stmt 1 view .LVU576
 1748 018e 7248     		ldr	r0, .L115+24
 1749 0190 D0F8FC10 		ldr	r1, [r0, #252]	@ float
 1750 0194 B030     		adds	r0, r0, #176
 1751 0196 FFF7FEFF 		bl	move
 1752              	.LVL88:
 1753              	.L106:
 327:Core/Src/main.c **** 				{
 1754              		.loc 1 327 14 view .LVU577
 327:Core/Src/main.c **** 				{
 1755              		.loc 1 327 26 is_stmt 0 view .LVU578
 1756 019a 6F4B     		ldr	r3, .L115+24
 1757 019c 93F8F830 		ldrb	r3, [r3, #248]	@ zero_extendqisi2
 327:Core/Src/main.c **** 				{
 1758              		.loc 1 327 14 view .LVU579
 1759 01a0 002B     		cmp	r3, #0
 1760 01a2 F4D0     		beq	.L110
 331:Core/Src/main.c ****         runDrill(&cnc.drill, 0);
 1761              		.loc 1 331 5 is_stmt 1 view .LVU580
 331:Core/Src/main.c ****         runDrill(&cnc.drill, 0);
 1762              		.loc 1 331 23 is_stmt 0 view .LVU581
 1763 01a4 6C48     		ldr	r0, .L115+24
 1764 01a6 0023     		movs	r3, #0
 1765 01a8 80F8F830 		strb	r3, [r0, #248]
 332:Core/Src/main.c ****       }        
 1766              		.loc 1 332 9 is_stmt 1 view .LVU582
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 57


 1767 01ac 0021     		movs	r1, #0
 1768 01ae 00F58E70 		add	r0, r0, #284
 1769 01b2 FFF7FEFF 		bl	runDrill
 1770              	.LVL89:
 1771              	.L109:
 334:Core/Src/main.c ****       break;
 1772              		.loc 1 334 7 view .LVU583
 334:Core/Src/main.c ****       break;
 1773              		.loc 1 334 16 is_stmt 0 view .LVU584
 1774 01b6 684B     		ldr	r3, .L115+24
 1775 01b8 0722     		movs	r2, #7
 1776 01ba 83F80821 		strb	r2, [r3, #264]
 335:Core/Src/main.c ****     /*case 3: // check drill
 1777              		.loc 1 335 7 is_stmt 1 view .LVU585
 1778              	.L93:
 1779              	.LBE10:
 248:Core/Src/main.c ****   {
 1780              		.loc 1 248 3 view .LVU586
 250:Core/Src/main.c ****     {
 1781              		.loc 1 250 5 view .LVU587
 250:Core/Src/main.c ****     {
 1782              		.loc 1 250 16 is_stmt 0 view .LVU588
 1783 01be 664B     		ldr	r3, .L115+24
 1784 01c0 93F80831 		ldrb	r3, [r3, #264]	@ zero_extendqisi2
 250:Core/Src/main.c ****     {
 1785              		.loc 1 250 5 view .LVU589
 1786 01c4 013B     		subs	r3, r3, #1
 1787 01c6 092B     		cmp	r3, #9
 1788 01c8 F9D8     		bhi	.L93
 1789 01ca 01A2     		adr	r2, .L95
 1790 01cc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1791              		.p2align 2
 1792              	.L95:
 1793 01d0 6F000000 		.word	.L104+1
 1794 01d4 C7000000 		.word	.L103+1
 1795 01d8 5D010000 		.word	.L102+1
 1796 01dc 0F020000 		.word	.L101+1
 1797 01e0 5B020000 		.word	.L100+1
 1798 01e4 6F020000 		.word	.L99+1
 1799 01e8 77020000 		.word	.L98+1
 1800 01ec D3020000 		.word	.L97+1
 1801 01f0 1D030000 		.word	.L96+1
 1802 01f4 85030000 		.word	.L94+1
 1803              		.p2align 1
 1804              	.L111:
 1805              	.LBB12:
 364:Core/Src/main.c **** 				move(&cnc.y_axis, cnc.y_axis.next);	
 1806              		.loc 1 364 5 is_stmt 1 view .LVU590
 1807 01f8 574C     		ldr	r4, .L115+24
 1808 01fa E16C     		ldr	r1, [r4, #76]	@ float
 1809 01fc 2046     		mov	r0, r4
 1810 01fe FFF7FEFF 		bl	move
 1811              	.LVL90:
 365:Core/Src/main.c **** 			}
 1812              		.loc 1 365 5 view .LVU591
 1813 0202 D4F8A410 		ldr	r1, [r4, #164]	@ float
 1814 0206 04F15800 		add	r0, r4, #88
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 58


 1815 020a FFF7FEFF 		bl	move
 1816              	.LVL91:
 1817              	.L101:
 362:Core/Src/main.c **** 			{
 1818              		.loc 1 362 12 view .LVU592
 362:Core/Src/main.c **** 			{
 1819              		.loc 1 362 25 is_stmt 0 view .LVU593
 1820 020e 524B     		ldr	r3, .L115+24
 1821 0210 93F84830 		ldrb	r3, [r3, #72]	@ zero_extendqisi2
 362:Core/Src/main.c **** 			{
 1822              		.loc 1 362 12 view .LVU594
 1823 0214 002B     		cmp	r3, #0
 1824 0216 EFD0     		beq	.L111
 362:Core/Src/main.c **** 			{
 1825              		.loc 1 362 46 discriminator 1 view .LVU595
 1826 0218 4F4B     		ldr	r3, .L115+24
 1827 021a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 362:Core/Src/main.c **** 			{
 1828              		.loc 1 362 13 discriminator 1 view .LVU596
 1829 021e 002B     		cmp	r3, #0
 1830 0220 EAD0     		beq	.L111
 367:Core/Src/main.c **** 			cnc.y_axis.finish = false;
 1831              		.loc 1 367 4 is_stmt 1 view .LVU597
 367:Core/Src/main.c **** 			cnc.y_axis.finish = false;
 1832              		.loc 1 367 22 is_stmt 0 view .LVU598
 1833 0222 4D4C     		ldr	r4, .L115+24
 1834 0224 0023     		movs	r3, #0
 1835 0226 84F84830 		strb	r3, [r4, #72]
 368:Core/Src/main.c ****       cnc.x_axis.last = cnc.x_axis.pos / cnc.x_axis.mm_pulse;
 1836              		.loc 1 368 4 is_stmt 1 view .LVU599
 368:Core/Src/main.c ****       cnc.x_axis.last = cnc.x_axis.pos / cnc.x_axis.mm_pulse;
 1837              		.loc 1 368 22 is_stmt 0 view .LVU600
 1838 022a 84F8A030 		strb	r3, [r4, #160]
 369:Core/Src/main.c ****       cnc.y_axis.last = cnc.y_axis.pos / cnc.y_axis.mm_pulse;
 1839              		.loc 1 369 7 is_stmt 1 view .LVU601
 369:Core/Src/main.c ****       cnc.y_axis.last = cnc.y_axis.pos / cnc.y_axis.mm_pulse;
 1840              		.loc 1 369 52 is_stmt 0 view .LVU602
 1841 022e 656C     		ldr	r5, [r4, #68]	@ float
 369:Core/Src/main.c ****       cnc.y_axis.last = cnc.y_axis.pos / cnc.y_axis.mm_pulse;
 1842              		.loc 1 369 40 view .LVU603
 1843 0230 A069     		ldr	r0, [r4, #24]
 1844 0232 FFF7FEFF 		bl	__aeabi_ui2f
 1845              	.LVL92:
 1846 0236 2946     		mov	r1, r5
 1847 0238 FFF7FEFF 		bl	__aeabi_fdiv
 1848              	.LVL93:
 369:Core/Src/main.c ****       cnc.y_axis.last = cnc.y_axis.pos / cnc.y_axis.mm_pulse;
 1849              		.loc 1 369 23 view .LVU604
 1850 023c 2065     		str	r0, [r4, #80]	@ float
 370:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 1851              		.loc 1 370 7 is_stmt 1 view .LVU605
 370:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 1852              		.loc 1 370 52 is_stmt 0 view .LVU606
 1853 023e D4F89C50 		ldr	r5, [r4, #156]	@ float
 370:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 1854              		.loc 1 370 40 view .LVU607
 1855 0242 206F     		ldr	r0, [r4, #112]
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 59


 1856 0244 FFF7FEFF 		bl	__aeabi_ui2f
 1857              	.LVL94:
 1858 0248 2946     		mov	r1, r5
 1859 024a FFF7FEFF 		bl	__aeabi_fdiv
 1860              	.LVL95:
 370:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 1861              		.loc 1 370 23 view .LVU608
 1862 024e C4F8A800 		str	r0, [r4, #168]	@ float
 371:Core/Src/main.c ****       break;
 1863              		.loc 1 371 7 is_stmt 1 view .LVU609
 371:Core/Src/main.c ****       break;
 1864              		.loc 1 371 16 is_stmt 0 view .LVU610
 1865 0252 0723     		movs	r3, #7
 1866 0254 84F80831 		strb	r3, [r4, #264]
 372:Core/Src/main.c **** 
 1867              		.loc 1 372 7 is_stmt 1 view .LVU611
 1868 0258 B1E7     		b	.L93
 1869              	.L100:
 375:Core/Src/main.c ****       cnc.Mode = 7; // mode send feedback
 1870              		.loc 1 375 7 view .LVU612
 1871 025a 3F4C     		ldr	r4, .L115+24
 1872 025c 04F15801 		add	r1, r4, #88
 1873 0260 2046     		mov	r0, r4
 1874 0262 FFF7FEFF 		bl	drawLine
 1875              	.LVL96:
 376:Core/Src/main.c ****       break;
 1876              		.loc 1 376 7 view .LVU613
 376:Core/Src/main.c ****       break;
 1877              		.loc 1 376 16 is_stmt 0 view .LVU614
 1878 0266 0723     		movs	r3, #7
 1879 0268 84F80831 		strb	r3, [r4, #264]
 377:Core/Src/main.c **** 
 1880              		.loc 1 377 7 is_stmt 1 view .LVU615
 1881 026c A7E7     		b	.L93
 1882              	.L99:
 380:Core/Src/main.c ****       break;
 1883              		.loc 1 380 7 view .LVU616
 1884 026e 3A48     		ldr	r0, .L115+24
 1885 0270 FFF7FEFF 		bl	ProcessData
 1886              	.LVL97:
 381:Core/Src/main.c **** 
 1887              		.loc 1 381 7 view .LVU617
 1888 0274 A3E7     		b	.L93
 1889              	.L98:
 384:Core/Src/main.c ****       sprintf(cnc.data.TransBuff, "G0%uX%0.2fY%0.2f!", cnc.drill.enb, cnc.x_axis.last, cnc.y_axis.l
 1890              		.loc 1 384 7 view .LVU618
 1891 0276 384C     		ldr	r4, .L115+24
 1892 0278 04F59776 		add	r6, r4, #302
 1893 027c 0025     		movs	r5, #0
 1894 027e C4F82E51 		str	r5, [r4, #302]	@ unaligned
 1895 0282 C4F83251 		str	r5, [r4, #306]	@ unaligned
 1896 0286 C4F83651 		str	r5, [r4, #310]	@ unaligned
 1897 028a C4F83A51 		str	r5, [r4, #314]	@ unaligned
 1898 028e C4F83E51 		str	r5, [r4, #318]	@ unaligned
 385:Core/Src/main.c ****       HAL_Delay(120);
 1899              		.loc 1 385 7 view .LVU619
 385:Core/Src/main.c ****       HAL_Delay(120);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 60


 1900              		.loc 1 385 65 is_stmt 0 view .LVU620
 1901 0292 94F82A71 		ldrb	r7, [r4, #298]	@ zero_extendqisi2
 385:Core/Src/main.c ****       HAL_Delay(120);
 1902              		.loc 1 385 81 view .LVU621
 1903 0296 D4F85080 		ldr	r8, [r4, #80]	@ float
 385:Core/Src/main.c ****       HAL_Delay(120);
 1904              		.loc 1 385 7 view .LVU622
 1905 029a D4F8A800 		ldr	r0, [r4, #168]	@ float
 1906 029e FFF7FEFF 		bl	__aeabi_f2d
 1907              	.LVL98:
 1908 02a2 CDE90201 		strd	r0, [sp, #8]
 1909 02a6 4046     		mov	r0, r8
 1910 02a8 FFF7FEFF 		bl	__aeabi_f2d
 1911              	.LVL99:
 1912 02ac CDE90001 		strd	r0, [sp]
 1913 02b0 3A46     		mov	r2, r7
 1914 02b2 2E49     		ldr	r1, .L115+44
 1915 02b4 3046     		mov	r0, r6
 1916 02b6 FFF7FEFF 		bl	sprintf
 1917              	.LVL100:
 386:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, cnc.data.TransBuff, sizeof(cnc.data.TransBuff), 100);
 1918              		.loc 1 386 7 is_stmt 1 view .LVU623
 1919 02ba 7820     		movs	r0, #120
 1920 02bc FFF7FEFF 		bl	HAL_Delay
 1921              	.LVL101:
 387:Core/Src/main.c ****       cnc.Mode = 0;      
 1922              		.loc 1 387 7 view .LVU624
 1923 02c0 6423     		movs	r3, #100
 1924 02c2 1422     		movs	r2, #20
 1925 02c4 3146     		mov	r1, r6
 1926 02c6 1F48     		ldr	r0, .L115+4
 1927 02c8 FFF7FEFF 		bl	HAL_UART_Transmit
 1928              	.LVL102:
 388:Core/Src/main.c ****       break;
 1929              		.loc 1 388 7 view .LVU625
 388:Core/Src/main.c ****       break;
 1930              		.loc 1 388 16 is_stmt 0 view .LVU626
 1931 02cc 84F80851 		strb	r5, [r4, #264]
 389:Core/Src/main.c ****     case 8: // send respond for setting
 1932              		.loc 1 389 7 is_stmt 1 view .LVU627
 1933 02d0 75E7     		b	.L93
 1934              	.L97:
 391:Core/Src/main.c ****       sprintf(cnc.data.TransBuff, "S!");
 1935              		.loc 1 391 7 view .LVU628
 1936 02d2 214C     		ldr	r4, .L115+24
 1937 02d4 04F59776 		add	r6, r4, #302
 1938 02d8 0025     		movs	r5, #0
 1939 02da C4F82E51 		str	r5, [r4, #302]	@ unaligned
 1940 02de C4F83251 		str	r5, [r4, #306]	@ unaligned
 1941 02e2 C4F83651 		str	r5, [r4, #310]	@ unaligned
 1942 02e6 C4F83A51 		str	r5, [r4, #314]	@ unaligned
 1943 02ea C4F83E51 		str	r5, [r4, #318]	@ unaligned
 392:Core/Src/main.c ****       HAL_Delay(120);
 1944              		.loc 1 392 7 view .LVU629
 1945 02ee 204B     		ldr	r3, .L115+48
 1946 02f0 1A88     		ldrh	r2, [r3]	@ unaligned
 1947 02f2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 61


 1948 02f4 A4F82E21 		strh	r2, [r4, #302]	@ unaligned
 1949 02f8 84F83031 		strb	r3, [r4, #304]
 393:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, cnc.data.TransBuff, 2, 100);
 1950              		.loc 1 393 7 view .LVU630
 1951 02fc 7820     		movs	r0, #120
 1952 02fe FFF7FEFF 		bl	HAL_Delay
 1953              	.LVL103:
 394:Core/Src/main.c ****       cnc.Mode = 0;
 1954              		.loc 1 394 7 view .LVU631
 1955 0302 6423     		movs	r3, #100
 1956 0304 0222     		movs	r2, #2
 1957 0306 3146     		mov	r1, r6
 1958 0308 0E48     		ldr	r0, .L115+4
 1959 030a FFF7FEFF 		bl	HAL_UART_Transmit
 1960              	.LVL104:
 395:Core/Src/main.c ****       break;
 1961              		.loc 1 395 7 view .LVU632
 395:Core/Src/main.c ****       break;
 1962              		.loc 1 395 16 is_stmt 0 view .LVU633
 1963 030e 84F80851 		strb	r5, [r4, #264]
 396:Core/Src/main.c ****     case 9: // stop
 1964              		.loc 1 396 7 is_stmt 1 view .LVU634
 1965 0312 54E7     		b	.L93
 1966              	.L112:
 400:Core/Src/main.c ****       }
 1967              		.loc 1 400 9 view .LVU635
 1968 0314 0021     		movs	r1, #0
 1969 0316 1748     		ldr	r0, .L115+52
 1970 0318 FFF7FEFF 		bl	move
 1971              	.LVL105:
 1972              	.L96:
 398:Core/Src/main.c ****       {
 1973              		.loc 1 398 12 view .LVU636
 398:Core/Src/main.c ****       {
 1974              		.loc 1 398 24 is_stmt 0 view .LVU637
 1975 031c 0E4B     		ldr	r3, .L115+24
 1976 031e 93F8F830 		ldrb	r3, [r3, #248]	@ zero_extendqisi2
 398:Core/Src/main.c ****       {
 1977              		.loc 1 398 12 view .LVU638
 1978 0322 002B     		cmp	r3, #0
 1979 0324 F6D0     		beq	.L112
 402:Core/Src/main.c ****       runDrill(&cnc.drill, 0);
 1980              		.loc 1 402 7 is_stmt 1 view .LVU639
 402:Core/Src/main.c ****       runDrill(&cnc.drill, 0);
 1981              		.loc 1 402 25 is_stmt 0 view .LVU640
 1982 0326 0C4C     		ldr	r4, .L115+24
 1983 0328 0025     		movs	r5, #0
 1984 032a 84F8F850 		strb	r5, [r4, #248]
 403:Core/Src/main.c ****       cnc.Mode = 0; // mode home
 1985              		.loc 1 403 7 is_stmt 1 view .LVU641
 1986 032e 0021     		movs	r1, #0
 1987 0330 04F58E70 		add	r0, r4, #284
 1988 0334 FFF7FEFF 		bl	runDrill
 1989              	.LVL106:
 404:Core/Src/main.c ****       break;
 1990              		.loc 1 404 7 view .LVU642
 404:Core/Src/main.c ****       break;
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 62


 1991              		.loc 1 404 16 is_stmt 0 view .LVU643
 1992 0338 84F80851 		strb	r5, [r4, #264]
 405:Core/Src/main.c ****     case 10: // z edit
 1993              		.loc 1 405 7 is_stmt 1 view .LVU644
 1994 033c 3FE7     		b	.L93
 1995              	.L116:
 1996 033e 00BF     		.align	2
 1997              	.L115:
 1998 0340 2C010000 		.word	.LANCHOR1+300
 1999 0344 00000000 		.word	.LANCHOR0
 2000 0348 00000000 		.word	.LANCHOR2
 2001 034c 00000000 		.word	.LANCHOR5
 2002 0350 00000000 		.word	.LANCHOR4
 2003 0354 00000000 		.word	.LANCHOR3
 2004 0358 00000000 		.word	.LANCHOR1
 2005 035c 00002041 		.word	1092616192
 2006 0360 00000000 		.word	.LC0
 2007 0364 0000BE42 		.word	1119748096
 2008 0368 1C010000 		.word	.LANCHOR1+284
 2009 036c 04000000 		.word	.LC1
 2010 0370 18000000 		.word	.LC2
 2011 0374 B0000000 		.word	.LANCHOR1+176
 2012              	.L113:
 409:Core/Src/main.c ****       }
 2013              		.loc 1 409 9 view .LVU645
 2014 0378 1648     		ldr	r0, .L117
 2015 037a D0F8FC10 		ldr	r1, [r0, #252]	@ float
 2016 037e B030     		adds	r0, r0, #176
 2017 0380 FFF7FEFF 		bl	move
 2018              	.LVL107:
 2019              	.L94:
 407:Core/Src/main.c ****       {
 2020              		.loc 1 407 12 view .LVU646
 407:Core/Src/main.c ****       {
 2021              		.loc 1 407 24 is_stmt 0 view .LVU647
 2022 0384 134B     		ldr	r3, .L117
 2023 0386 93F8F830 		ldrb	r3, [r3, #248]	@ zero_extendqisi2
 407:Core/Src/main.c ****       {
 2024              		.loc 1 407 12 view .LVU648
 2025 038a 002B     		cmp	r3, #0
 2026 038c F4D0     		beq	.L113
 411:Core/Src/main.c ****       memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 2027              		.loc 1 411 7 is_stmt 1 view .LVU649
 411:Core/Src/main.c ****       memset(cnc.data.TransBuff, 0, sizeof(cnc.data.TransBuff));
 2028              		.loc 1 411 25 is_stmt 0 view .LVU650
 2029 038e 114C     		ldr	r4, .L117
 2030 0390 0025     		movs	r5, #0
 2031 0392 84F8F850 		strb	r5, [r4, #248]
 412:Core/Src/main.c ****       sprintf(cnc.data.TransBuff, "Z!");
 2032              		.loc 1 412 7 is_stmt 1 view .LVU651
 2033 0396 04F59776 		add	r6, r4, #302
 2034 039a C4F82E51 		str	r5, [r4, #302]	@ unaligned
 2035 039e C4F83251 		str	r5, [r4, #306]	@ unaligned
 2036 03a2 C4F83651 		str	r5, [r4, #310]	@ unaligned
 2037 03a6 C4F83A51 		str	r5, [r4, #314]	@ unaligned
 2038 03aa C4F83E51 		str	r5, [r4, #318]	@ unaligned
 413:Core/Src/main.c ****       HAL_Delay(120);
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 63


 2039              		.loc 1 413 7 view .LVU652
 2040 03ae 0A4B     		ldr	r3, .L117+4
 2041 03b0 1A88     		ldrh	r2, [r3]	@ unaligned
 2042 03b2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2043 03b4 A4F82E21 		strh	r2, [r4, #302]	@ unaligned
 2044 03b8 84F83031 		strb	r3, [r4, #304]
 414:Core/Src/main.c ****       HAL_UART_Transmit(&huart2, cnc.data.TransBuff, 2, 100);
 2045              		.loc 1 414 7 view .LVU653
 2046 03bc 7820     		movs	r0, #120
 2047 03be FFF7FEFF 		bl	HAL_Delay
 2048              	.LVL108:
 415:Core/Src/main.c ****       cnc.Mode = 0;
 2049              		.loc 1 415 7 view .LVU654
 2050 03c2 6423     		movs	r3, #100
 2051 03c4 0222     		movs	r2, #2
 2052 03c6 3146     		mov	r1, r6
 2053 03c8 0448     		ldr	r0, .L117+8
 2054 03ca FFF7FEFF 		bl	HAL_UART_Transmit
 2055              	.LVL109:
 416:Core/Src/main.c ****       break;
 2056              		.loc 1 416 7 view .LVU655
 416:Core/Src/main.c ****       break;
 2057              		.loc 1 416 16 is_stmt 0 view .LVU656
 2058 03ce 84F80851 		strb	r5, [r4, #264]
 417:Core/Src/main.c ****     default:
 2059              		.loc 1 417 7 is_stmt 1 view .LVU657
 2060 03d2 F4E6     		b	.L93
 2061              	.L118:
 2062              		.align	2
 2063              	.L117:
 2064 03d4 00000000 		.word	.LANCHOR1
 2065 03d8 1C000000 		.word	.LC3
 2066 03dc 00000000 		.word	.LANCHOR0
 2067              	.LBE12:
 2068              		.cfi_endproc
 2069              	.LFE72:
 2071              		.global	cnc
 2072              		.global	huart2
 2073              		.global	htim4
 2074              		.global	htim3
 2075              		.global	htim2
 2076              		.global	htim1
 2077              		.section	.bss.cnc,"aw",%nobits
 2078              		.align	2
 2079              		.set	.LANCHOR1,. + 0
 2082              	cnc:
 2083 0000 00000000 		.space	364
 2083      00000000 
 2083      00000000 
 2083      00000000 
 2083      00000000 
 2084              		.section	.bss.htim1,"aw",%nobits
 2085              		.align	2
 2086              		.set	.LANCHOR5,. + 0
 2089              	htim1:
 2090 0000 00000000 		.space	72
 2090      00000000 
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 64


 2090      00000000 
 2090      00000000 
 2090      00000000 
 2091              		.section	.bss.htim2,"aw",%nobits
 2092              		.align	2
 2093              		.set	.LANCHOR4,. + 0
 2096              	htim2:
 2097 0000 00000000 		.space	72
 2097      00000000 
 2097      00000000 
 2097      00000000 
 2097      00000000 
 2098              		.section	.bss.htim3,"aw",%nobits
 2099              		.align	2
 2100              		.set	.LANCHOR2,. + 0
 2103              	htim3:
 2104 0000 00000000 		.space	72
 2104      00000000 
 2104      00000000 
 2104      00000000 
 2104      00000000 
 2105              		.section	.bss.htim4,"aw",%nobits
 2106              		.align	2
 2107              		.set	.LANCHOR3,. + 0
 2110              	htim4:
 2111 0000 00000000 		.space	72
 2111      00000000 
 2111      00000000 
 2111      00000000 
 2111      00000000 
 2112              		.section	.bss.huart2,"aw",%nobits
 2113              		.align	2
 2114              		.set	.LANCHOR0,. + 0
 2117              	huart2:
 2118 0000 00000000 		.space	68
 2118      00000000 
 2118      00000000 
 2118      00000000 
 2118      00000000 
 2119              		.text
 2120              	.Letext0:
 2121              		.file 3 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 2122              		.file 4 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\inclu
 2123              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2124              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2125              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2126              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2127              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2128              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2129              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2130              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2131              		.file 13 "Lib/Inc/MyStruct.h"
 2132              		.file 14 "<built-in>"
 2133              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 2134              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2135              		.file 17 "Core/Inc/main.h"
 2136              		.file 18 "Lib/Inc/MotorControl.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 65


 2137              		.file 19 "e:\\project\\program\\vscode\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\incl
 2138              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 66


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:182    .text.MX_GPIO_Init:000000bc $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:190    .text.uart_clear_receive_buffer_and_start_receive_IT:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:196    .text.uart_clear_receive_buffer_and_start_receive_IT:00000000 uart_clear_receive_buffer_and_start_receive_IT
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:241    .text.uart_clear_receive_buffer_and_start_receive_IT:00000028 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:247    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:253    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:349    .text.HAL_GPIO_EXTI_Callback:00000068 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:354    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:360    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:442    .text.HAL_UART_RxCpltCallback:00000050 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:449    .text.axisInit:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:455    .text.axisInit:00000000 axisInit
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:654    .text.axisInit:00000100 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:675    .text.Error_Handler:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:681    .text.Error_Handler:00000000 Error_Handler
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:713    .text.MX_TIM1_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:718    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:826    .text.MX_TIM1_Init:0000005c $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:832    .text.MX_TIM2_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:837    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:942    .text.MX_TIM2_Init:0000005c $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:947    .text.MX_TIM3_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:952    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1147   .text.MX_TIM3_Init:000000d0 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1153   .text.MX_TIM4_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1158   .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1263   .text.MX_TIM4_Init:00000058 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1269   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1274   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1329   .text.MX_USART2_UART_Init:0000002c $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1335   .text.SystemClock_Config:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1341   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1446   .rodata.main.str1.4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1462   .text.main:00000000 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1468   .text.main:00000000 main
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1793   .text.main:000001d0 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1803   .text.main:000001f8 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:1998   .text.main:00000340 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2014   .text.main:00000378 $t
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2064   .text.main:000003d4 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2082   .bss.cnc:00000000 cnc
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2117   .bss.huart2:00000000 huart2
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2110   .bss.htim4:00000000 htim4
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2103   .bss.htim3:00000000 htim3
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2096   .bss.htim2:00000000 htim2
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2089   .bss.htim1:00000000 htim1
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2078   .bss.cnc:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2085   .bss.htim1:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2092   .bss.htim2:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2099   .bss.htim3:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2106   .bss.htim4:00000000 $d
C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s:2113   .bss.huart2:00000000 $d

ARM GAS  C:\Users\Chicken\AppData\Local\Temp\cc8GZtXr.s 			page 67


UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Receive_IT
PWM
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_ui2f
__aeabi_fdiv
__aeabi_f2d
HAL_Init
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
HOME
move
HAL_UART_Transmit
runDrill
drawLine
ProcessData
sprintf
HAL_Delay
